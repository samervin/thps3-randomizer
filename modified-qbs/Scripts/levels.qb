
#00000  FUNCTION InitLevelLoadProcess
#00000    printf "***********************InitLevelLoadProcess"
#00000    UninitializeFrontEndSprites
#00000    Cleanup
#00000    StopMusic
#00000    PauseMusic
#00000    ClearMusicTrackList
#00000    MouseShowCursor 0
#00000  END FUNCTION

#00000  FUNCTION PreFreezeScreen
#00000    SetArenaSize 1
#00000  END FUNCTION

#00000  FUNCTION PostFreezeScreen
#00000    SetArenaSize
#00000  END FUNCTION

#00000  FUNCTION SetupForClipPlane
#00000    EnableFog
#00000    SetClippingDistances near = 12
          far = 1792

#00000    SetBackgroundColor STRUCT{
            r = 128
            g = 128
            b = 128
            alpha = 0
            }

#00000    SetFogDistance distance = 1280

#00000    SetFogColor r = 128
          g = 128
          b = 128

#00000  END FUNCTION

#00000  FUNCTION PreLevelLoad
#00000    SetArenaSize 1
#00000    SetUpBasicLights
#00000    SetSfxReverb Instant
#00000    ClearScoreGoals
#00000    SetScoreGoal score = 10000
          goalscript = DefaultHiScoreScript
          goal = GOAL_HIGHSCORE

#00000    SetScoreGoal score = 50000
          goalscript = DefaultProScoreScript
          goal = GOAL_PROSCORE

#00000    ClearMusicTrackList
#00000    IF GameModeEquals is_parkeditor
#00000      IF InNetGame
#00000        DisplayProperLoadingScreen net
#00000      ELSE
#00000        DisplayLoadingScreen "images\loadscrn_editor.png"
#00000      END IF
#00000    END IF
#00000  END FUNCTION

#00000  FUNCTION DisplayProperLoadingScreen
#00000    printf "DisplayProperLoadingScreen"
#00000    IF InMultiPlayerGame
#00000    ELSE
#00000      Change FirstTimeFromSkateshop = 0

#00000    END IF
#00000    IF GotParam SkateShop
#00000      DisplayLoadingScreen "images\loadscrn_ss.png"
#00000    ELSE
#00000      IF EnteringNetGame
#00000        printf "Entering Net Game"
#00000        IF OnServer
#00000          DisplayLoadingScreen "images\loadscrn_Online.png"
#00000        ELSE
#00000          DisplayLoadingScreen "images\loadscrn_Online2.png"
#00000        END IF
#00000      ELSE
#00000        IF IsTrue FirstTimeFromSkateshop
#00000          DisplayLoadingScreen "images\loadscrn_2player.png"
#00000        ELSE
#00000          IF InNetGame
#00000            IF GameModeEquals is_horse
#00000              DisplayLoadingScreen "images\loadscrn_horse.png"
#00000            ELSE
#00000              IF GameTypePrefEquals netking
#00000                DisplayLoadingScreen "images\loadscrn_koth.png"
#00000              ELSE
#00000                IF GameTypePrefEquals netslap
#00000                  DisplayLoadingScreen "images\loadscrn_slap.png"
#00000                ELSE
#00000                  IF GameTypePrefEquals netgraffiti
#00000                    DisplayLoadingScreen "images\loadscrn_Graffiti.png"
#00000                  ELSE
#00000                    IF GameTypePrefEquals nettrickattack
#00000                      DisplayLoadingScreen "images\loadscrn_trick_attack.png"
#00000                    ELSE
#00000                      IF GameTypePrefEquals ctf
#00000                        DisplayLoadingScreen "images\loadscrn_ctf.png"
#00000                      ELSE
#00000                        IF GameTypePrefEquals ownthezone
#00000                          DisplayLoadingScreen "images\loadscrn_zone.png"
#00000                        ELSE
#00000                          IF GameTypePrefEquals beachball
#00000                            DisplayLoadingScreen "images\loadscrn_beach.png"
#00000                          ELSE
#00000                            IF InSplitScreenGame
#00000                              DisplayLoadingScreen "images\loadscrn_2player.png"
#00000                            ELSE
#00000                              LevelLoadingScreens NULL
#00000                            END IF
#00000                          END IF
#00000                        END IF
#00000                      END IF
#00000                    END IF
#00000                  END IF
#00000                END IF
#00000              END IF
#00000            END IF
#00000          ELSE
#00000            LevelLoadingScreens NULL
#00000          END IF
#00000        END IF
#00000      END IF
#00000    END IF
#00000  END FUNCTION

#00000  FUNCTION LevelLoadingScreens
#00000    IF GotParam Foundry
#00000      DisplayLoadingScreen "images\loadscrn_foundry.png"
#00000    END IF
#00000    IF GotParam Canada
#00000      DisplayLoadingScreen "images\loadscrn_can.png"
#00000    END IF
#00000    IF GotParam Suburbia
#00000      DisplayLoadingScreen "images\loadscrn_sub.png"
#00000    END IF
#00000    IF GotParam SI
#00000      IF IsCareerMode
#00000        DisplayLoadingScreen "images\loadscrn_si_comp.png"
#00000      ELSE
#00000        DisplayLoadingScreen "images\loadscrn_si.png"
#00000      END IF
#00000    END IF
#00000    IF GotParam Airport
#00000      DisplayLoadingScreen "images\loadscrn_ap.png"
#00000    END IF
#00000    IF GotParam Rio
#00000      IF IsCareerMode
#00000        DisplayLoadingScreen "images\loadscrn_rio_comp.png"
#00000      ELSE
#00000        DisplayLoadingScreen "images\loadscrn_rio.png"
#00000      END IF
#00000    END IF
#00000    IF GotParam LA
#00000      DisplayLoadingScreen "images\loadscrn_la.png"
#00000    END IF
#00000    IF GotParam Tokyo
#00000      IF IsCareerMode
#00000        DisplayLoadingScreen "images\loadscrn_tok_comp.png"
#00000      ELSE
#00000        DisplayLoadingScreen "images\loadscrn_tok.png"
#00000      END IF
#00000    END IF
#00000    IF GotParam Ship
#00000      DisplayLoadingScreen "images\loadscrn_ship.png"
#00000    END IF
#00000    IF GotParam Oil
#00000      DisplayLoadingScreen "images\loadscrn_generic.png"
#00000    END IF
#00000    IF GotParam Tutorials
#00000      DisplayLoadingScreen "images\loadscrn_tutorials.png"
#00000    END IF
#00000    IF GotParam Warehouse
#00000      DisplayLoadingScreen "images\loadscrn_warehouse.png"
#00000    END IF
#00000    IF GotParam Burnside
#00000      DisplayLoadingScreen "images\loadscrn_burnside.png"
#00000    END IF
#00000    IF GotParam Roswell
#00000      DisplayLoadingScreen "images\loadscrn_roswell.png"
#00000    END IF
#00000    IF GotParam Rooftops
#00000      DisplayLoadingScreen "images\loadscrn_generic.png"
#00000    END IF
#00000    IF GotParam Generic
#00000      DisplayLoadingScreen "images\loadscrn_generic.png"
#00000    END IF
#00000  END FUNCTION

#00000  FUNCTION PostLevelLoad
#00000    SetArenaSize
#00000  END FUNCTION

#00000  FUNCTION script_assert NULL
#00000    printf "SCRIPT ASSERT!"
#00000    printf NULL
#00000    LOOP
#00000      wait 1 gameframe
#00000    END LOOP
#00000  END FUNCTION

#00000  FUNCTION request_level
#00000    printf "Running script: request_level"
#00000    IF GotParam level
#00000      RequestLevel GLOBAL.level

#00000    ELSE
#00000      script_assert "request_level needs a level param"
#00000    END IF
#00000  END FUNCTION

#00000  FUNCTION LoadLevel
#00000    printf "Running script: LoadLevel"
#00000    MemPushContext 0
#00000    PreLevelLoad
#00000    LaunchLevel NULL
#00000    PostLevelLoad
#00000    MemPopContext
#00000  END FUNCTION

#00000  FUNCTION FireUpGame
#00000    ToggleSkater on
#00000    SetGameState on
#00000    LaunchMenuScreen screen = game_menu

#00000  END FUNCTION

#00000  LevelNum_Skateshop = 0

#00000  LevelNum_Foundry = 1

#00000  LevelNum_Canada = 2

#00000  LevelNum_Rio = 3

#00000  LevelNum_Suburbia = 4

#00000  LevelNum_Airport = 5

#00000  LevelNum_SkaterIsland = 6

#00000  LevelNum_LA = 7

#00000  LevelNum_Tokyo = 8

#00000  LevelNum_Ship = 9

#00000  LevelNum_Oil = 10

#00000  LevelNum_Tutorials = 11

#00000  LevelNum_Warehouse = 12

#00000  LevelNum_Burnside = 13

#00000  LevelNum_Roswell = 14

#00000  LevelNum_Rooftops = 15

#00000  FUNCTION DistinguishLevels
#00000    SetCompetition LevelNum_Rio
#00000    SetCompetition LevelNum_Tokyo
#00000    SetCompetition LevelNum_SkaterIsland
#00000  END FUNCTION

#00000  FUNCTION Load_Ap
#00000    AddMusicTrack "music\ap_amb"
#00000    DisplayProperLoadingScreen Airport
#00000    CareerStartLevel level = LevelNum_Airport

#00000    SetUpAirportLights
#00000    IF InMultiPlayerGame
#00000      loadlevelgeometry level = "Levels\ap\ap.bsp"
            Sky = ""
            Pre_set = "Ap"

#00000      SetBackgroundColor STRUCT{
              r = 151
              g = 180
              b = 214
              alpha = 0
              }

#00000    ELSE
#00000      loadlevelgeometry level = "Levels\ap\ap.bsp"
            Sky = "Levels\Ap_Sky\Ap_Sky.bsp"
            Pre_set = "Ap"

#00000    END IF
#00000    IF ClipPlaneEnabled
#00000      SetupForClipPlane
#00000    ELSE
#00000      SetBackgroundColor STRUCT{
              r = 151
              g = 180
              b = 214
              alpha = 0
              }

#00000      SetClippingDistances near = 12
            far = 92000

#00000    END IF
#00000    LoadNodeArray "levels\ap\ap.qb"
#00000    LoadTerrain
#00000    SetRenderModeVU
#00000    SetBSPAmbientColor STRUCT{
            r = 0
            g = 0
            b = 0
            alpha = 0
            }

#00000    Ap_Startup
#00000    UnloadPreFile "Ap.pre" dont_assert
#00000  END FUNCTION

#00000  FUNCTION Load_Can
#00000    AddMusicTrack "music\can_amb"
#00000    DisplayProperLoadingScreen Canada
#00000    CareerStartLevel level = LevelNum_Canada

#00000    SetUpCanadaLights
#00000    IF InMultiPlayerGame
#00000      loadlevelgeometry level = "Levels\can\can.bsp"
            Sky = ""
            Pre_set = "Can"

#00000    ELSE
#00000      loadlevelgeometry level = "Levels\can\can.bsp"
            Sky = "Levels\Can_Sky\Can_Sky.bsp"
            Pre_set = "Can"

#00000    END IF
#00000    LoadNodeArray "levels\Can\Can.qb"
#00000    LoadTerrain
#00000    SetRenderModeVU
#00000    SetBSPAmbientColor STRUCT{
            r = 0
            g = 0
            b = 0
            alpha = 0
            }

#00000    SetMovementVelocity 1500
#00000    SetRotateVelocity 120
#00000    IF ClipPlaneEnabled
#00000      SetupForClipPlane
#00000    ELSE
#00000      EnableFog
#00000      SetBackgroundColor STRUCT{
              r = 167
              g = 175
              b = 197
              alpha = 0
              }

#00000      SetFogColor r = 155
            g = 160
            b = 185

#00000      SetFogDistance distance = 3000

#00000      SetClippingDistances near = 12
            far = 16000

#00000    END IF
#00000    Can_Startup
#00000    UnloadPreFile "Can.pre" dont_assert
#00000  END FUNCTION

#00000  FUNCTION Load_Foun
#00000    AddMusicTrack "music\foun_amb"
#00000    DisplayProperLoadingScreen Foundry
#00000    CareerStartLevel level = LevelNum_Foundry

#00000    SetUpFoundryLights
#00000    loadlevelgeometry level = "Levels\Foun\Foun.bsp"
          Sky = ""
          Pre_set = "Foun"

#00000    LoadNodeArray "levels\Foun\Foun.qb"
#00000    LoadTerrain
#00000    SetRenderModeVU
#00000    IF ClipPlaneEnabled
#00000      SetupForClipPlane
#00000    ELSE
#00000      SetBackgroundColor STRUCT{
              r = 0
              g = 0
              b = 0
              alpha = 0
              }

#00000      SetClippingDistances near = 12
            far = 20000

#00000    END IF
#00000    SetBSPAmbientColor STRUCT{
            r = 0
            g = 0
            b = 0
            alpha = 0
            }

#00000    Foun_Startup
#00000    UnloadPreFile "Foun.pre" dont_assert
#00000  END FUNCTION

#00000  FUNCTION Load_La
#00000    AddMusicTrack "music\la_amb"
#00000    DisplayProperLoadingScreen LA
#00000    CareerStartLevel level = LevelNum_LA

#00000    SetUpLosAngelesLights
#00000    IF InMultiPlayerGame
#00000      loadlevelgeometry level = "Levels\la\la.bsp"
            Sky = ""
            Pre_set = "La"

#00000      IF ClipPlaneEnabled
#00000        SetupForClipPlane
#00000      ELSE
#00000        SetBackgroundColor STRUCT{
                r = 158
                g = 202
                b = 220
                alpha = 0
                }

#00000        SetClippingDistances near = 12
              far = 14000

#00000      END IF
#00000    ELSE
#00000      loadlevelgeometry level = "Levels\la\la.bsp"
            Sky = "Levels\La_Sky\La_Sky.bsp"
            Pre_set = "La"

#00000      IF ClipPlaneEnabled
#00000        SetupForClipPlane
#00000      ELSE
#00000        SetBackgroundColor STRUCT{
                r = 0
                g = 0
                b = 0
                alpha = 0
                }

#00000        SetClippingDistances near = 12
              far = 14000

#00000      END IF
#00000    END IF
#00000    LoadNodeArray "levels\la\la.qb"
#00000    LoadTerrain
#00000    SetRenderModeVU
#00000    SetBSPAmbientColor STRUCT{
            r = 0
            g = 0
            b = 0
            alpha = 0
            }

#00000    La_Startup
#00000    UnloadPreFile "La.pre" dont_assert
#00000  END FUNCTION

#00000  FUNCTION Load_Rio
#00000    AddMusicTrack "music\rio_amb"
#00000    DisplayProperLoadingScreen Rio
#00000    CareerStartLevel level = LevelNum_Rio
          competition
#00000    SetUpRioDeJaneiroLights
#00000    IF InMultiPlayerGame
#00000      loadlevelgeometry level = "Levels\Rio\Rio.bsp"
            Sky = ""
            Pre_set = "Rio"

#00000      IF ClipPlaneEnabled
#00000        SetupForClipPlane
#00000      ELSE
#00000        SetBackgroundColor STRUCT{
                r = 145
                g = 201
                b = 242
                alpha = 0
                }

#00000        SetClippingDistances near = 12
              far = 30000

#00000      END IF
#00000    ELSE
#00000      loadlevelgeometry level = "Levels\Rio\Rio.bsp"
            Sky = "Levels\Rio_Sky\Rio_Sky.bsp"
            Pre_set = "Rio"

#00000      IF ClipPlaneEnabled
#00000        SetupForClipPlane
#00000      ELSE
#00000        SetBackgroundColor STRUCT{
                r = 100
                g = 110
                b = 200
                alpha = 0
                }

#00000        SetClippingDistances near = 12
              far = 30000

#00000      END IF
#00000    END IF
#00000    LoadNodeArray "levels\Rio\Rio.qb"
#00000    LoadTerrain
#00000    SetRenderModeVU
#00000    SetBSPAmbientColor STRUCT{
            r = 0
            g = 0
            b = 0
            alpha = 0
            }

#00000    SetMovementVelocity 2000
#00000    SetRotateVelocity 120
#00000    Rio_Startup
#00000    UnloadPreFile "Rio.pre" dont_assert
#00000  END FUNCTION

#00000  FUNCTION Load_Shp
#00000    AddMusicTrack "music\ship_amb"
#00000    DisplayProperLoadingScreen Ship
#00000    CareerStartLevel level = LevelNum_Ship

#00000    SetUpShipLights
#00000    IF InMultiPlayerGame
#00000      loadlevelgeometry level = "Levels\shp\shp.bsp"
            Sky = ""
            Pre_set = "Shp"

#00000      IF ClipPlaneEnabled
#00000        SetupForClipPlane
#00000      ELSE
#00000        SetBackgroundColor STRUCT{
                r = 143
                g = 205
                b = 233
                alpha = 0
                }

#00000        SetClippingDistances near = 12
              far = 32000

#00000      END IF
#00000    ELSE
#00000      loadlevelgeometry level = "Levels\shp\shp.bsp"
            Sky = "Levels\Shp_Sky\Shp_Sky.bsp"
            Pre_set = "Shp"

#00000      IF ClipPlaneEnabled
#00000        SetupForClipPlane
#00000      ELSE
#00000        SetBackgroundColor STRUCT{
                r = 0
                g = 100
                b = 255
                alpha = 0
                }

#00000        SetClippingDistances near = 12
              far = 32000

#00000      END IF
#00000    END IF
#00000    LoadNodeArray "levels\shp\shp.qb"
#00000    LoadTerrain
#00000    SetRenderModeVU
#00000    SetBSPAmbientColor STRUCT{
            r = 0
            g = 0
            b = 0
            alpha = 0
            }

#00000    SetMovementVelocity 1500
#00000    SetRotateVelocity 120
#00000    SHP_Startup
#00000    UnloadPreFile "Shp.pre" dont_assert
#00000  END FUNCTION

#00000  FUNCTION Load_Si
#00000    AddMusicTrack "music\si_amb"
#00000    DisplayProperLoadingScreen SI
#00000    CareerStartLevel level = LevelNum_SkaterIsland
          competition
#00000    SetUpSkatersIslandLights
#00000    IF InMultiPlayerGame
#00000      loadlevelgeometry level = "Levels\si\si.bsp"
            Sky = ""
            Pre_set = "SI"

#00000      IF ClipPlaneEnabled
#00000        SetupForClipPlane
#00000      ELSE
#00000        SetBackgroundColor STRUCT{
                r = 158
                g = 211
                b = 255
                alpha = 0
                }

#00000        SetClippingDistances near = 12
              far = 12000

#00000      END IF
#00000    ELSE
#00000      loadlevelgeometry level = "Levels\si\si.bsp"
            Sky = "Levels\SI_Sky\SI_Sky.bsp"
            Pre_set = "SI"

#00000      IF ClipPlaneEnabled
#00000        SetupForClipPlane
#00000      ELSE
#00000        SetBackgroundColor STRUCT{
                r = 55
                g = 135
                b = 200
                alpha = 0
                }

#00000        SetClippingDistances near = 12
              far = 12000

#00000      END IF
#00000    END IF
#00000    LoadNodeArray "Levels\Si\Si.qb"
#00000    LoadTerrain
#00000    SetRenderModeVU
#00000    SetBSPAmbientColor STRUCT{
            r = 0
            g = 0
            b = 0
            alpha = 0
            }

#00000    Si_Startup
#00000    UnloadPreFile "Si.pre" dont_assert
#00000  END FUNCTION

#00000  FUNCTION Load_Sub
#00000    AddMusicTrack "music\sub_amb"
#00000    DisplayProperLoadingScreen Suburbia
#00000    CareerStartLevel level = LevelNum_Suburbia

#00000    SetUpSuburbiaLights
#00000    IF InMultiPlayerGame
#00000      loadlevelgeometry level = "Levels\sub\sub.bsp"
            Sky = ""
            Pre_set = "Sub"

#00000      IF ClipPlaneEnabled
#00000        SetupForClipPlane
#00000      ELSE
#00000        SetBackgroundColor STRUCT{
                r = 165
                g = 180
                b = 202
                alpha = 0
                }

#00000        SetClippingDistances near = 12
              far = 13500

#00000      END IF
#00000    ELSE
#00000      loadlevelgeometry level = "Levels\sub\sub.bsp"
            Sky = "Levels\Sub_Sky\Sub_Sky.bsp"
            Pre_set = "Sub"

#00000      IF ClipPlaneEnabled
#00000        SetupForClipPlane
#00000      ELSE
#00000        SetBackgroundColor STRUCT{
                r = 80
                g = 80
                b = 80
                alpha = 0
                }

#00000        SetClippingDistances near = 12
              far = 13500

#00000      END IF
#00000    END IF
#00000    LoadNodeArray "levels\sub\sub.qb"
#00000    LoadTerrain
#00000    SetRenderModeVU
#00000    SetBSPAmbientColor STRUCT{
            r = 0
            g = 0
            b = 0
            alpha = 0
            }

#00000    Sub_Startup
#00000    UnloadPreFile "Sub.pre" dont_assert
#00000  END FUNCTION

#00000  FUNCTION Load_Tok
#00000    AddMusicTrack "music\tok_amb"
#00000    DisplayProperLoadingScreen Tokyo
#00000    CareerStartLevel level = LevelNum_Tokyo
          competition
#00000    SetUpTokyoLights
#00000    IF InNetGame
#00000      loadlevelgeometry level = "Levels\tok\tok.bsp"
            Sky = ""
            Pre_set = "Tok"

#00000      IF ClipPlaneEnabled
#00000        SetupForClipPlane
#00000      ELSE
#00000        SetBackgroundColor STRUCT{
                r = 16
                g = 17
                b = 26
                alpha = 0
                }

#00000        SetClippingDistances near = 12
              far = 17000

#00000        EnableFog
#00000        SetFogColor r = 0
              g = 0
              b = 0

#00000        SetFogDistance distance = 1000

#00000      END IF
#00000    ELSE
#00000      loadlevelgeometry level = "Levels\tok\tok.bsp"
            Sky = "Levels\Tok_Sky\Tok_Sky.bsp"
            Pre_set = "Tok"

#00000      IF ClipPlaneEnabled
#00000        SetupForClipPlane
#00000      ELSE
#00000        SetBackgroundColor STRUCT{
                r = 0
                g = 0
                b = 0
                alpha = 0
                }

#00000        SetClippingDistances near = 12
              far = 17000

#00000        EnableFog
#00000        SetFogColor r = 0
              g = 0
              b = 0

#00000        SetFogDistance distance = 1000

#00000      END IF
#00000    END IF
#00000    LoadNodeArray "levels\tok\tok.qb"
#00000    LoadTerrain
#00000    SetRenderModeVU
#00000    SetBSPAmbientColor STRUCT{
            r = 0
            g = 0
            b = 0
            alpha = 0
            }

#00000    SetMovementVelocity 1000
#00000    SetRotateVelocity 120
#00000    Tok_Startup
#00000    UnloadPreFile "Tok.pre" dont_assert
#00000  END FUNCTION

#00000  FUNCTION Load_Oil
#00000    DisplayProperLoadingScreen Oil
#00000    CareerStartLevel level = LevelNum_Oil

#00000    SetUpOilLights
#00000    IF InMultiPlayerGame
#00000      loadlevelgeometry level = "Levels\oil\oil.bsp"
            Sky = ""
            Pre_set = "Oil"

#00000    ELSE
#00000      loadlevelgeometry level = "Levels\oil\oil.bsp"
            Sky = "Levels\Oil_Sky\Oil_Sky.bsp"
            Pre_set = "Oil"

#00000    END IF
#00000    LoadNodeArray "levels\oil\oil.qb"
#00000    SetRenderModeVU
#00000    SetBackgroundColor STRUCT{
            r = 0
            g = 0
            b = 0
            alpha = 0
            }

#00000    SetBSPAmbientColor STRUCT{
            r = 0
            g = 0
            b = 0
            alpha = 0
            }

#00000    SetClippingDistances near = 12
          far = 17000

#00000    SetMovementVelocity 1000
#00000    SetRotateVelocity 120
#00000    Oil_Startup
#00000    EnableFog
#00000    SetFogColor r = 0
          g = 0
          b = 0

#00000    SetFogDistance distance = 1000

#00000    UnloadPreFile "Oil.pre" dont_assert
#00000  END FUNCTION

#00000  FUNCTION Load_Foo
#00000    SetUpFoundryLights
#00000    loadlevelgeometry level = "Levels\foo\foo.bsp"
          Sky = ""
          Pre_set = "Foo"

#00000    LoadNodeArray "levels\foo\foo.qb"
#00000    LoadTerrain
#00000    SetRenderModeVU
#00000    SetBackgroundColor STRUCT{
            r = 16
            g = 16
            b = 32
            alpha = 0
            }

#00000    SetBSPAmbientColor STRUCT{
            r = 0
            g = 0
            b = 0
            alpha = 0
            }

#00000    SetClippingDistances near = 12
          far = 22000

#00000    Foo_Startup
#00000    UnloadPreFile "Foo.pre" dont_assert
#00000  END FUNCTION

#00000  FUNCTION Load_Roof
#00000    DisplayProperLoadingScreen Rooftops
#00000    CareerStartLevel level = LevelNum_Rooftops

#00000    SetUpOilLights
#00000    IF InMultiPlayerGame
#00000      loadlevelgeometry level = "Levels\Roof\Roof.bsp"
            Sky = ""
            Pre_set = "Roof"

#00000    ELSE
#00000      loadlevelgeometry level = "Levels\Roof\Roof.bsp"
            Sky = "Levels\Roof_Sky\Roof_Sky.bsp"
            Pre_set = "Roof"

#00000    END IF
#00000    LoadNodeArray "levels\Roof\Roof.qb"
#00000    LoadTerrain
#00000    SetRenderModeVU
#00000    SetBackgroundColor STRUCT{
            r = 150
            g = 120
            b = 61
            alpha = 0
            }

#00000    SetBSPAmbientColor STRUCT{
            r = 0
            g = 0
            b = 0
            alpha = 0
            }

#00000    SetClippingDistances near = 12
          far = 22000

#00000    Roof_Startup
#00000    UnloadPreFile "Roof.pre" dont_assert
#00000  END FUNCTION

#00000  FUNCTION Load_Sk3Ed
#00000  END FUNCTION

#00000  FUNCTION Load_Ware
#00000    DisplayProperLoadingScreen Warehouse
#00000    AddMusicTrack "music\ware_amb"
#00000    CareerStartLevel level = LevelNum_Warehouse

#00000    SetUpWareLights
#00000    loadlevelgeometry level = "Levels\ware\ware.bsp"
          Sky = ""
          Pre_set = "Ware"

#00000    LoadNodeArray "levels\ware\ware.qb"
#00000    LoadTerrain
#00000    Ware_Startup
#00000    UnloadPreFile "Ware.pre" dont_assert
#00000  END FUNCTION

#00000  FUNCTION Load_Burn
#00000    DisplayProperLoadingScreen Burnside
#00000    AddMusicTrack "music\burn_amb"
#00000    CareerStartLevel level = LevelNum_Burnside

#00000    SetUpBurnLights
#00000    IF InMultiPlayerGame
#00000      loadlevelgeometry level = "Levels\burn\burn.bsp"
            Sky = ""
            Pre_set = "Burn"

#00000      IF ClipPlaneEnabled
#00000        SetupForClipPlane
#00000      ELSE
#00000        SetBackgroundColor STRUCT{
                r = 159
                g = 183
                b = 214
                alpha = 0
                }

#00000        SetClippingDistances near = 12
              far = 20000

#00000      END IF
#00000    ELSE
#00000      loadlevelgeometry level = "Levels\burn\burn.bsp"
            Sky = "Levels\Burn_Sky\Burn_Sky.bsp"
            Pre_set = "Burn"

#00000      IF ClipPlaneEnabled
#00000        SetupForClipPlane
#00000      ELSE
#00000        SetBackgroundColor STRUCT{
                r = 128
                g = 128
                b = 128
                alpha = 0
                }

#00000        SetClippingDistances near = 12
              far = 20000

#00000      END IF
#00000    END IF
#00000    LoadNodeArray "levels\burn\burn.qb"
#00000    SetBSPAmbientColor STRUCT{
            r = 84
            g = 84
            b = 84
            alpha = 0
            }

#00000    LoadTerrain
#00000    Burn_Startup
#00000    UnloadPreFile "Burn.pre" dont_assert
#00000  END FUNCTION

#00000  FUNCTION Load_Ros
#00000    DisplayProperLoadingScreen Roswell
#00000    AddMusicTrack "music\ros_amb"
#00000    CareerStartLevel level = LevelNum_Roswell

#00000    SetUpRoswellLights
#00000    IF InMultiPlayerGame
#00000      loadlevelgeometry level = "Levels\ros\ros.bsp"
            Sky = ""
            Pre_set = "Ros"

#00000      IF ClipPlaneEnabled
#00000        SetupForClipPlane
#00000      ELSE
#00000        SetBackgroundColor STRUCT{
                r = 12
                g = 8
                b = 9
                alpha = 0
                }

#00000        SetClippingDistances near = 12
              far = 9000

#00000      END IF
#00000    ELSE
#00000      loadlevelgeometry level = "Levels\ros\ros.bsp"
            Sky = "Levels\Ros_Sky\Ros_Sky.bsp"
            Pre_set = "Ros"

#00000      IF ClipPlaneEnabled
#00000        SetupForClipPlane
#00000      ELSE
#00000        SetBackgroundColor STRUCT{
                r = 0
                g = 0
                b = 0
                alpha = 0
                }

#00000        SetClippingDistances near = 12
              far = 9000

#00000      END IF
#00000    END IF
#00000    LoadNodeArray "levels\ros\ros.qb"
#00000    SetBSPAmbientColor STRUCT{
            r = 84
            g = 84
            b = 84
            alpha = 0
            }

#00000    LoadTerrain
#00000    UnloadPreFile "Ros.pre" dont_assert
#00000  END FUNCTION

#00000  FUNCTION Load_Tut
#00000    DisplayProperLoadingScreen Tutorials
#00000    CareerStartLevel level = LevelNum_Tutorials

#00000    SetUpLosAngelesLights
#00000    loadlevelgeometry level = "Levels\tut\tut.bsp"
          Sky = "Levels\Sk3Ed_Bch_Sky\Sk3Ed_Bch_Sky.bsp"
          Pre_set = "Tut"

#00000    LoadNodeArray "levels\tut\tut.qb"
#00000    IF ClipPlaneEnabled
#00000      SetupForClipPlane
#00000    ELSE
#00000      SetBackgroundColor STRUCT{
              r = 128
              g = 128
              b = 128
              alpha = 0
              }

#00000      SetClippingDistances near = 12
            far = 20000

#00000    END IF
#00000    SetBSPAmbientColor STRUCT{
            r = 84
            g = 84
            b = 84
            alpha = 0
            }

#00000    LoadTerrain
#00000    Tut_Startup
#00000    UnloadPreFile "Tut.pre" dont_assert
#00000  END FUNCTION

#00000  FUNCTION Load_Foo2
#00000    SetUpWareLights
#00000    loadlevelgeometry level = "Levels\foo2\foo2.bsp"
          Sky = ""

#00000    LoadNodeArray "levels\foo2\foo2.qb"
#00000    LoadTerrain
#00000    IF ClipPlaneEnabled
#00000      SetupForClipPlane
#00000    ELSE
#00000      SetBackgroundColor STRUCT{
              r = 0
              g = 0
              b = 0
              alpha = 0
              }

#00000      SetClippingDistances near = 12
            far = 12000

#00000    END IF
#00000    SetBSPAmbientColor STRUCT{
            r = 84
            g = 84
            b = 84
            alpha = 0
            }

#00000    SetDFFAmbientColor STRUCT{
            r = 84
            g = 84
            b = 84
            alpha = 0
            }

#00000  END FUNCTION

#00000  FUNCTION Load_Foo_Car
#00000    loadlevelgeometry level = "Levels\foo_car\foo_car.bsp"
          Sky = ""

#00000    LoadNodeArray "levels\foo_car\foo_car.qb"
#00000    SetBackgroundColor STRUCT{
            r = 120
            g = 120
            b = 120
            alpha = 0
            }

#00000    SetBSPAmbientColor STRUCT{
            r = 0
            g = 0
            b = 0
            alpha = 0
            }

#00000    SetDFFAmbientColor STRUCT{
            r = 120
            g = 120
            b = 120
            alpha = 0
            }

#00000    SetClippingDistances near = 12
          far = 12000

#00000  END FUNCTION

#00000  FUNCTION Load_Foo_CircCars
#00000    SetUpWareLights
#00000    loadlevelgeometry level = "Levels\foo_circcars\foo_circcars.bsp"
          Sky = ""

#00000    LoadNodeArray "levels\foo_circcars\foo_circcars.qb"
#00000    LoadTerrain
#00000    SetBackgroundColor STRUCT{
            r = 0
            g = 0
            b = 0
            alpha = 0
            }

#00000    SetBSPAmbientColor STRUCT{
            r = 84
            g = 84
            b = 84
            alpha = 0
            }

#00000    SetDFFAmbientColor STRUCT{
            r = 84
            g = 84
            b = 84
            alpha = 0
            }

#00000    SetClippingDistances near = 12
          far = 12000

#00000    Foo_Startup
#00000  END FUNCTION

#00000  FUNCTION Load_Foo_CircCars2
#00000    SetUpWareLights
#00000    loadlevelgeometry level = "Levels\foo_circcars2\foo_circcars2.bsp"
          Sky = ""

#00000    LoadNodeArray "levels\foo_circcars2\foo_circcars2.qb"
#00000    LoadTerrain
#00000    SetBackgroundColor STRUCT{
            r = 0
            g = 0
            b = 0
            alpha = 0
            }

#00000    SetBSPAmbientColor STRUCT{
            r = 84
            g = 84
            b = 84
            alpha = 0
            }

#00000    SetDFFAmbientColor STRUCT{
            r = 84
            g = 84
            b = 84
            alpha = 0
            }

#00000    SetClippingDistances near = 12
          far = 12000

#00000    Foo_Startup
#00000  END FUNCTION

#00000  FUNCTION Load_SkateShop
#00000    DisplayProperLoadingScreen SkateShop
#00000    CareerStartLevel level = LevelNum_Skateshop

#00000    SetUpSkateShopLights
#00000    loadlevelgeometry level = "Levels\skateshop\skateshop.bsp"
          Sky = ""
          Pre_set = "SkateShop"
          KeepTexturesInMemory
#00000    LoadNodeArray "levels\skateshop\skateshop.qb"
#00000    LoadTerrain
#00000    IF ClipPlaneEnabled
#00000      SetupForClipPlane
#00000    ELSE
#00000      SetBackgroundColor STRUCT{
              r = 0
              g = 0
              b = 32
              alpha = 0
              }

#00000      SetClippingDistances near = 12
            far = 12000

#00000    END IF
#00000    SetBSPAmbientColor STRUCT{
            r = 0
            g = 0
            b = 0
            alpha = 0
            }

#00000    SkateShop_Startup
#00000    UnloadPreFile "SkateShop.pre" dont_assert
#00000  END FUNCTION

#00000  master_level_list = ARRAY(

          STRUCT{
            level_name = "Foundry"
            load_script = Load_Foun
            level_id = foundry_id
            regular_level once_on_startup = StartRunScript
            once_on_exit = EndRunScript
            unlock_flag = LEVEL_UNLOCKED_FOUNDRY
            supports_ctf supports_own supports_bball }
          STRUCT{
            level_name = "Canada"
            load_script = Load_Can
            level_id = canada_id
            regular_level once_on_startup = StartRunScript
            once_on_exit = EndRunScript
            unlock_flag = LEVEL_UNLOCKED_CANADA
            supports_ctf supports_own supports_bball }
          STRUCT{
            level_name = "Rio"
            load_script = Load_Rio
            level_id = rio_id
            regular_level once_on_startup = StartRunScript
            once_on_exit = EndRunScript
            unlock_flag = LEVEL_UNLOCKED_RIO
            supports_ctf supports_own supports_bball }
          STRUCT{
            level_name = "Suburbia"
            load_script = Load_Sub
            level_id = suburbia_id
            regular_level once_on_startup = StartRunScript
            once_on_exit = EndRunScript
            unlock_flag = LEVEL_UNLOCKED_SUBURBIA
            supports_ctf supports_own supports_bball }
          STRUCT{
            level_name = "Airport"
            load_script = Load_Ap
            level_id = airport_id
            regular_level once_on_startup = StartRunScript
            once_on_exit = EndRunScript
            unlock_flag = LEVEL_UNLOCKED_AIRPORT
            supports_ctf supports_own supports_bball }
          STRUCT{
            level_name = "Skater Island"
            load_script = Load_Si
            level_id = skatersisland_id
            regular_level once_on_startup = StartRunScript
            once_on_exit = EndRunScript
            unlock_flag = LEVEL_UNLOCKED_SKATERISLAND
            supports_ctf supports_own supports_bball }
          STRUCT{
            level_name = "Los Angeles"
            load_script = Load_La
            level_id = la_id
            regular_level once_on_startup = StartRunScript
            once_on_exit = EndRunScript
            unlock_flag = LEVEL_UNLOCKED_LOSANGELES
            supports_ctf supports_own supports_bball }
          STRUCT{
            level_name = "Tokyo"
            load_script = Load_Tok
            level_id = tokyo_id
            regular_level once_on_startup = StartRunScript
            once_on_exit = EndRunScript
            unlock_flag = LEVEL_UNLOCKED_TOKYO
            supports_ctf supports_own supports_bball }
          STRUCT{
            level_name = "Cruise Ship"
            load_script = Load_Shp
            level_id = ship_id
            regular_level once_on_startup = StartRunScript
            once_on_exit = EndRunScript
            unlock_flag = LEVEL_UNLOCKED_SHIP
            special_flag = SPECIAL_HAS_SEEN_SHIP
            supports_ctf supports_own supports_bball }
          STRUCT{
            level_name = "Warehouse"
            load_script = Load_Ware
            level_id = warehouse_id
            regular_level unlock_flag = LEVEL_UNLOCKED_WAREHOUSE
            nocareer secret_level supports_ctf supports_own supports_bball }
          STRUCT{
            level_name = "Burnside"
            load_script = Load_Burn
            level_id = burnside_id
            regular_level nocareer unlock_flag = LEVEL_UNLOCKED_BURNSIDE
            secret_level supports_ctf supports_own supports_bball }
          STRUCT{
            level_name = "Roswell"
            load_script = Load_Ros
            level_id = roswell_id
            nocareer unlock_flag = LEVEL_UNLOCKED_ROSWELL
            regular_level secret_level supports_ctf supports_own supports_bball }
          STRUCT{
            level_name = "Play custom park"
            load_script = custom_park
            level_id = custom_park
            debug_level }
          STRUCT{
            level_name = "Tutorials"
            load_script = Load_Tut
            level_id = tutorials_id
            nocareer once_on_startup = CPF_Tut_LoadingScript
            }
          STRUCT{
            level_name = "Foo"
            load_script = Load_Foo
            level_id = foo_id
            debug_level }
          STRUCT{
            level_name = "Oil"
            load_script = Load_Oil
            level_id = oil_id
            nocareer notPS2_level }
          STRUCT{
            level_name = "Rooftops"
            load_script = Load_Roof
            level_id = rooftops_id
            nocareer notPS2_level }
          STRUCT{
            level_name = "Skate Shop"
            load_script = Load_SkateShop
            level_id = skateshop_id
            debug_level }
          STRUCT{
            level_name = "Cars driving in circle"
            load_script = Load_Foo_CircCars
            level_id = foo_circcars_id
            debug_level }
          STRUCT{
            level_name = "Car with wheels rotating"
            load_script = Load_Foo_Car
            level_id = foo_carwheels_id
            debug_level }
          STRUCT{
            level_name = "Foo2 25 Peds"
            load_script = Load_Foo2
            level_id = foo2_25peds_id
            debug_level }

        )

#00000  ui_colors =
#00000
        STRUCT{
          ui_white = ARRAY(

            160 160 160 128
          )
          ui_dark_white = ARRAY(

            96 96 96 128
          )
          ui_blue = ARRAY(

            0 0 255 128
          )
          ui_dark_blue = ARRAY(

            0 0 96 128
          )
          ui_red = ARRAY(

            255 0 0 128
          )
          ui_dark_red = ARRAY(

            96 0 0 128
          )
          ui_green = ARRAY(

            0 255 0 128
          )
          ui_dark_green = ARRAY(

            0 96 0 128
          )
          ui_yellow = ARRAY(

            255 255 0 128
          )
          ui_dark_yellow = ARRAY(

            96 96 0 128
          )
          ui_cyan = ARRAY(

            32 255 255 128
          )
          ui_dark_cyan = ARRAY(

            8 96 96 128
          )
          ui_invisible = ARRAY(

            0 0 0 0
          )
          ui_t50_dk_white = ARRAY(

            96 96 96 64
          )
          ui_t50_dk_red = ARRAY(

            96 0 0 64
          )
          ui_t50_dk_green = ARRAY(

            0 96 0 64
          )
          ui_t50_dk_blue = ARRAY(

            0 0 96 64
          )
          }

#00000  indexed_ui_colors =
#00000
        ARRAY(
          ui_white ui_dark_white ui_blue ui_dark_blue ui_red ui_dark_red ui_green ui_dark_green ui_yellow ui_dark_yellow ui_cyan ui_dark_cyan ui_t50_dk_white ui_t50_dk_red ui_t50_dk_green ui_t50_dk_blue ui_invisible
        )

#00000  invisible_colors =
#00000
        STRUCT{
          normal = ui_invisible
          highlight = ui_invisible
          selected = ui_invisible
          hot = ui_invisible
          gray = ui_invisible
          }

#00000  element_colors =
#00000
        STRUCT{
          normal = ARRAY(

            255 255 255 128
          )
          highlight = ARRAY(

            255 255 255 128
          )
          selected = ARRAY(

            255 255 255 128
          )
          gray = ARRAY(

            255 255 255 128
          )
          }

#00000  black_colors =
#00000
        STRUCT{
          normal = ARRAY(

            0 0 0 128
          )
          highlight = ARRAY(

            0 0 0 128
          )
          selected = ARRAY(

            0 0 0 128
          )
          gray = ARRAY(

            0 0 0 128
          )
          }

#00000  image_button_highlight_colors =
#00000
        STRUCT{
          normal = ARRAY(

            128 128 128 128
          )
          highlight = ARRAY(

            255 255 255 128
          )
          selected = ARRAY(

            192 192 192 128
          )
          gray = ARRAY(

            64 64 64 128
          )
          hot = ARRAY(

            192 192 192 128
          )
          }

#00000  on_off_colors =
#00000
        STRUCT{
          normal = ARRAY(

            255 255 255 128
          )
          highlight = ARRAY(

            255 255 255 128
          )
          selected = ARRAY(

            255 255 255 128
          )
          gray = ARRAY(

            64 64 64 128
          )
          }

#00000  bright_colors =
#00000
        STRUCT{
          normal = ARRAY(

            255 255 255 128
          )
          highlight = ARRAY(

            255 255 255 128
          )
          selected = ARRAY(

            255 255 255 128
          )
          gray = ARRAY(

            255 255 255 128
          )
          }

#00000  gamespy_colors =
#00000
        STRUCT{
          normal = ARRAY(

            128 128 128 128
          )
          highlight = ARRAY(

            128 128 128 128
          )
          selected = ARRAY(

            128 128 128 128
          )
          gray = ARRAY(

            128 128 128 128
          )
          }

#00000  border_colors_1 =
#00000
        STRUCT{
          normal = ARRAY(

            128 128 128 128
          )
          highlight = ARRAY(

            255 255 255 128
          )
          selected = ARRAY(

            192 192 192 128
          )
          gray = ARRAY(

            64 64 64 128
          )
          hot = ARRAY(

            192 192 192 128
          )
          }

#00000  img_fg_hilite_colors_1 =
#00000
        STRUCT{
          normal = ARRAY(

            128 128 128 128
          )
          highlight = ARRAY(

            255 255 255 128
          )
          selected = ARRAY(

            128 128 128 128
          )
          gray = ARRAY(

            96 96 96 128
          )
          hot = ARRAY(

            192 192 192 128
          )
          }

#00000  border_colors_2 =
#00000
        STRUCT{
          normal = ARRAY(

            128 128 128 64
          )
          highlight = ARRAY(

            255 255 255 64
          )
          selected = ARRAY(

            192 192 192 64
          )
          gray = ARRAY(

            64 64 64 64
          )
          hot = ARRAY(

            255 255 255 64
          )
          }

#00000  colors_scroll_background =
#00000
        STRUCT{
          normal = ARRAY(

            0 0 0 128
          )
          highlight = ARRAY(

            0 0 192 128
          )
          selected = ARRAY(

            0 0 128 128
          )
          gray = ARRAY(

            0 0 0 128
          )
          }

#00000  bg_window_foreground_colors =
#00000
        STRUCT{
          normal = ARRAY(

            192 192 192 80
          )
          highlight = ARRAY(

            192 192 192 80
          )
          selected = ARRAY(

            192 192 192 80
          )
          gray = ARRAY(

            192 192 192 80
          )
          }

#00000  client_area_colors =
#00000
        STRUCT{
          normal = ARRAY(

            16 16 16 64
          )
          highlight = ARRAY(

            16 16 16 64
          )
          selected = ARRAY(

            16 16 16 64
          )
          gray = ARRAY(

            16 16 16 64
          )
          }

#00000  list_item_highlight_colors =
#00000
        STRUCT{
          normal = ARRAY(

            0 0 0 0
          )
          highlight = ARRAY(

            0 0 192 128
          )
          selected = ARRAY(

            0 0 128 128
          )
          gray = ARRAY(

            0 0 0 0
          )
          hot = ARRAY(

            0 0 128 128
          )
          }

#00000  button_bg_colors =
#00000
        STRUCT{
          normal = ARRAY(

            96 48 12 128
          )
          selected = ARRAY(

            96 96 96 128
          )
          highlight = ARRAY(

            0 0 128 128
          )
          hot = ARRAY(

            135 65 15 128
          )
          gray = ARRAY(

            32 16 4 128
          )
          }

#00000  orange_colors =
#00000
        STRUCT{
          normal = ARRAY(

            135 65 15 128
          )
          selected = ARRAY(

            135 65 15 128
          )
          highlight = ARRAY(

            135 65 15 128
          )
          hot = ARRAY(

            135 65 15 128
          )
          gray = ARRAY(

            66 32 8 128
          )
          }

#00000  image_button_orange_highlight_colors =
#00000
        STRUCT{
          normal = ARRAY(

            135 65 15 128
          )
          highlight = ARRAY(

            255 130 30 128
          )
          selected = ARRAY(

            192 97 23 128
          )
          gray = ARRAY(

            64 32 7 128
          )
          hot = ARRAY(

            192 97 23 128
          )
          }

#00000  button_fg_colors =
#00000
        STRUCT{
          normal = ARRAY(

            255 255 255 128
          )
          highlight = ARRAY(

            255 255 255 128
          )
          selected = ARRAY(

            255 255 255 128
          )
          gray = ARRAY(

            64 64 64 128
          )
          }

#00000  playeritem_button_colors =
#00000
        STRUCT{
          normal = ARRAY(

            96 96 96 128
          )
          selected = ARRAY(

            96 96 96 128
          )
          highlight = ARRAY(

            192 192 0 128
          )
          hot = ARRAY(

            128 128 128 128
          )
          gray = ARRAY(

            64 64 64 128
          )
          }

#00000  cap_icon_colors =
#00000
        STRUCT{
          normal = ui_white
          highlight = ui_white
          selected = ui_white
          hot = ui_white
          gray = ARRAY(

            64 64 64 128
          )
          }

#00000  mode_icon_bg_colors =
#00000
        STRUCT{
          normal = ARRAY(

            135 65 15 128
          )
          selected = ARRAY(

            135 65 15 128
          )
          highlight = ARRAY(

            135 65 15 128
          )
          hot = ARRAY(

            135 65 15 128
          )
          gray = ARRAY(

            135 65 15 128
          )
          }

#00000  slider_thumb_properties =
#00000
        STRUCT{
          checksum = slider_thumb_properties
          x = 0.0
          y = 0.0
          type = imageelement
          noselect stretch draggable background foreground_colors = image_button_highlight_colors
          style = pushbutton
          texture_list = ARRAY(

            "GSpyMenu\scroll.png" "GSpyMenu\scroll.png" "GSpyMenu\scroll.png"
          )
          }

#00000  slider_button_properties =
#00000
        STRUCT{
          checksum = slider_button_properties
          x = 0.0
          y = 0.0
          type = imageelement
          noselect stretch repeattime = 100
          foreground_colors = image_button_highlight_colors
          style = pushbutton
          texture_list = ARRAY(

            "GSpyMenu\arrow.png"
          )
          }

#00000  slider_element_properties =
#00000
        STRUCT{
          checksum = slider_element_properties
          type = sliderelement
          style = scrollbar
          x = 0.0
          y = 0.0
          size = 14
          background_colors = element_colors
          border_colors = element_colors
          vertical noselect repeattime = 100
          thumb_style = slider_thumb_properties
          button_style = slider_button_properties
          forceclip drawfront }

#00000  background_window_properties =
#00000
        STRUCT{
          checksum = background_window_properties
          type = imageelement
          style = background
          scalex = 0.5
          scaley = 0.5
          windowclip static dont_gray texture_list = ARRAY(

            "GSpyMenu\stretchmenu1.png" "GSpyMenu\stretchmenu1.png" "GSpyMenu\stretchmenu1.png" "GSpyMenu\stretchmenu1.png" "GSpyMenu\lowercorner4.png" "GSpyMenu\stretchmenu1.png" "GSpyMenu\lowercorner.png" "GSpyMenu\stretchmenu1.png" "GSpyMenu\stretchmenu1.png"
          )
          foreground_colors = bg_window_foreground_colors
          drawbehind align_x = STRUCT{
            parent full }
          align_y = STRUCT{
            parent full }
          }

#00000  background_full_round_window_properties =
#00000
        STRUCT{
          checksum = background_full_round_window_properties
          type = imageelement
          style = background
          scalex = 0.5
          scaley = 0.5
          windowclip static dont_gray texture_list = ARRAY(

            "GSpyMenu\lowercorner2.png" "GSpyMenu\stretchmenu1.png" "GSpyMenu\lowercorner3.png" "GSpyMenu\stretchmenu1.png" "GSpyMenu\lowercorner4.png" "GSpyMenu\stretchmenu1.png" "GSpyMenu\lowercorner.png" "GSpyMenu\stretchmenu1.png" "GSpyMenu\stretchmenu1.png"
          )
          foreground_colors = bg_window_foreground_colors
          align_x = STRUCT{
            parent full }
          align_y = STRUCT{
            parent full }
          }

#00000  background_title_window_properties =
#00000
        STRUCT{
          checksum = background_title_window_properties
          type = imageelement
          style = background
          windowclip static dont_gray texture_list = ARRAY(

            "GSpyMenu\topper2.png" "GSpyMenu\topperstretch.png" "GSpyMenu\topper1.png" "GSpyMenu\topperstretch.png" "GSpyMenu\topperstretch.png" "GSpyMenu\topperstretch.png" "GSpyMenu\topperstretch.png" "GSpyMenu\topperstretch.png" "GSpyMenu\topperstretch.png"
          )
          foreground_colors = bg_window_foreground_colors
          align_x = STRUCT{
            parent full }
          align_y = STRUCT{
            parent full }
          }

#00000  client_area_properties =
#00000
        STRUCT{
          checksum = client_area_properties
          type = uielement
          x = 0
          y = 0
          w = 1
          h = 1
          align_x = STRUCT{
            parent client full }
          align_y = STRUCT{
            parent client full }
          noselect static dont_gray background drawbehind background_colors = client_area_colors
          }

#00000  game_modeicon_properties =
#00000
        STRUCT{
          checksum = game_modeicon_properties
          type = imageelement
          w = 32.0
          h = 32.0
          noselect static dont_gray stretch foreground_colors = bright_colors
          background_colors = mode_icon_bg_colors
          background style = imagelist
          activetexture = 0
          texture_list = ARRAY(

            "GSpyMenu\icon-versus.png" "GSpyMenu\icon-versus.png" "GSpyMenu\icon-spray.png" "GSpyMenu\icon-slappers.png" "GSpyMenu\icon-koth.png" "GSpyMenu\icon-ball.png" "GSpyMenu\icon-otz.png" "GSpyMenu\icon-ctf.png"
          )
          }

#00000  game_status_properties =
#00000
        STRUCT{
          checksum = game_status_properties
          x = 40
          y = 2
          w = 16.0
          h = 16.0
          type = imageelement
          noselect static dont_gray stretch foreground_colors = bright_colors
          style = imagelist
          activetexture = 0
          texture_list = ARRAY(

            "GSpyMenu\no.png" "GSpyMenu\play.png"
          )
          }

#00000  game_lock_properties =
#00000
        STRUCT{
          checksum = game_lock_properties
          type = imageelement
          x = 14
          y = 5
          w = 8.0
          h = 8.0
          noselect static dont_gray stretch foreground_colors = bright_colors
          style = imagelist
          activetexture = 0
          texture_list = ARRAY(

            "GSpyMenu\locked.png"
          )
          }

#00000  game_players_properties =
#00000
        STRUCT{
          checksum = game_players_properties
          type = textelement
          y = 50
          w = 64.0
          h = 12.0
          texheight = 9
          spacing = 1
          align_x = STRUCT{
            parent client left_left right_right }
          just_top_y noselect static dont_gray foreground_colors = bright_colors
          truncate drawer = keyboard_property
          max_text = 1
          }

#00000  game_name_properties =
#00000
        STRUCT{
          checksum = game_name_properties
          type = textelement
          y = 38
          w = 64.0
          h = 12.0
          texheight = 9
          spacing = 1
          align_x = STRUCT{
            parent client left_left right_right }
          just_top_y noselect static dont_gray foreground_colors = bright_colors
          truncate drawer = keyboard_property
          max_text = 1
          }

#00000  game_item_properties =
#00000
        STRUCT{
          checksum = game_item_properties
          type = uielement
          w = 80.0
          h = 64.0
          parent_aligned border = 1.0
          padding_h = 0.0
          padding_v = 2.0
          border_colors = bright_colors
          border_when_selected children = ARRAY(

            STRUCT{
              checksum = game_name_properties
              }
            STRUCT{
              checksum = game_players_properties
              }
            STRUCT{
              checksum = game_lock_properties
              }
            STRUCT{
              checksum = game_ping_properties
              }
            STRUCT{
              checksum = game_status_properties
              }
            STRUCT{
              checksum = game_modeicon_properties
              parms = STRUCT{
                align_x = STRUCT{
                  parent client center }
                align_y = STRUCT{
                  parent client top_top }
                }
              }

          )
          }

#00000  game_ping_properties =
#00000
        STRUCT{
          checksum = game_ping_properties
          type = pingelement
          x = 58
          y = 2
          w = 12.0
          h = 22.0
          parent_aligned noselect static dont_gray value_table = ARRAY(

            STRUCT{
              dots = 8
              val = 20
              col = 1
              }
            STRUCT{
              dots = 7
              val = 50
              col = 1
              }
            STRUCT{
              dots = 6
              val = 100
              col = 1
              }
            STRUCT{
              dots = 5
              val = 150
              col = 2
              }
            STRUCT{
              dots = 4
              val = 200
              col = 2
              }
            STRUCT{
              dots = 3
              val = 300
              col = 2
              }
            STRUCT{
              dots = 2
              val = 400
              col = 3
              }
            STRUCT{
              dots = 1
              val = 500
              col = 3
              }

          )
          foreground_colors = STRUCT{
            normal = ARRAY(

              128 128 128 128
            )
            highlight = ARRAY(

              0 255 0 128
            )
            selected = ARRAY(

              255 128 0 128
            )
            gray = ARRAY(

              196 0 0 128
            )
            }
          }

#00000  window_title_properties =
#00000
        STRUCT{
          checksum = window_title_properties
          type = textelement
          w = 128.0
          h = 32.0
          texheight = 20
          just_center_y just_left_x padding_h = 20
          spacing = 0
          parent_aligned noselect static dont_gray foreground_colors = bright_colors
          background = background_title_window_properties
          truncate drawer = title
          max_text = 1
          }

#00000  game_server_list_scroller =
#00000
        STRUCT{
          checksum = game_server_list_scroller
          type = sliderelement
          style = scrollbar
          x = 0.0
          y = 0.0
          size = 14
          background_colors = element_colors
          vertical noselect ticks = PAIR[64.0; 192.0]
          repeattime = 100
          thumb_style = slider_thumb_properties
          button_style = slider_button_properties
          forceclip drawfront }

#00000  game_server_list =
#00000
        STRUCT{
          checksum = game_server_list
          id = gs_server_list
          type = scrollwindow
          style = scroll
          x = 0.0
          y = 0.0
          w = 400.0
          h = 220.0
          spacing_h = 8.0
          spacing_v = 4.0
          parent_aligned parent_resized border_colors = border_colors_2
          border = 1.0
          noselect scrollv = game_server_list_scroller
          children = ARRAY(

            STRUCT{
              checksum = client_area_properties
              }

          )
          }

#00000  game_create_window =
#00000
        STRUCT{
          checksum = game_create_window
          id = gs_create_window
          type = uielement
          x = 0.0
          y = 0.0
          w = 400.0
          h = 220.0
          parent_aligned parent_resized border_colors = border_colors_2
          border = 1.0
          noselect children = ARRAY(

            STRUCT{
              checksum = player_name_entry
              parms = STRUCT{
                id = gs_server_name
                x = 10
                y = 25
                text = "Gearbox"
                tip = "Enter a name for your server."
                caption = STRUCT{
                  checksum = text_caption
                  parms = STRUCT{
                    text = "Server Name"
                    }
                  }
                }
              }
            STRUCT{
              checksum = player_name_entry
              parms = STRUCT{
                id = gs_cr_password
                text = ""
                maxentrychars = 8
                tip = "Enter a password for your server."
                x = 10
                y = 70
                caption = STRUCT{
                  checksum = text_caption
                  parms = STRUCT{
                    text = "Password"
                    }
                  }
                }
              }
            STRUCT{
              checksum = full_combo_box_def
              parms = STRUCT{
                id = gs_max_players
                x = 180
                y = 25
                w = 170
                choices = choices_num_players
                tip = "Set the maximum number of players in your game."
                caption = STRUCT{
                  checksum = text_caption
                  parms = STRUCT{
                    text = "Max Players"
                    }
                  }
                }
              }
            STRUCT{
              checksum = client_area_properties
              }

          )
          }

#00000  game_staging_window =
#00000
        STRUCT{
          checksum = game_staging_window
          id = gs_staging_window
          type = uielement
          x = 0.0
          y = 0.0
          w = 400.0
          h = 220.0
          parent_aligned parent_resized border_colors = border_colors_2
          border = 1.0
          noselect children = ARRAY(

            STRUCT{
              checksum = full_combo_box_def_2
              parms = STRUCT{
                id = gs_staging_ready
                x = 10
                y = 25
                style = checkbox
                prompt = "Ready"
                }
              }
            STRUCT{
              checksum = room_players_list
              parms = STRUCT{
                id = gs_staging_players_list
                x = 180
                y = 25
                w = 190
                h = 140
                style = tiledvertical
                caption = STRUCT{
                  checksum = text_caption
                  parms = STRUCT{
                    text = "Joined Players"
                    }
                  }
                }
              }
            STRUCT{
              checksum = client_area_properties
              }

          )
          }

#00000  game_options_window =
#00000
        STRUCT{
          checksum = game_options_window
          id = gs_options_window
          type = uielement
          x = 0.0
          y = 0.0
          w = 400.0
          h = 220.0
          parent_aligned parent_resized border_colors = border_colors_2
          border = 1.0
          noselect children = ARRAY(

            STRUCT{
              checksum = player_name_entry
              parms = STRUCT{
                id = gs_nick_entry
                x = 10
                y = 25
                text = "Gearbox"
                tip = "Enter a nick for GameSpy."
                caption = STRUCT{
                  checksum = text_caption
                  parms = STRUCT{
                    text = "GameSpy Nick"
                    }
                  }
                }
              }
            STRUCT{
              checksum = full_combo_box_def
              parms = STRUCT{
                id = gs_update_speed
                style = dropdown
                choices = choices_update_speed
                x = 10
                y = 70
                h = 100
                tip = "Choose a higher setting for higher bandwidth connections."
                caption = STRUCT{
                  checksum = text_caption
                  parms = STRUCT{
                    text = "Server Update Speed"
                    }
                  }
                }
              }
            STRUCT{
              checksum = client_area_properties
              }

          )
          }

#00000  game_filters_window =
#00000
        STRUCT{
          checksum = game_filters_window
          id = gs_filters_window
          type = uielement
          x = 0.0
          y = 0.0
          w = 400.0
          h = 220.0
          parent_aligned parent_resized border_colors = border_colors_2
          border = 1.0
          noselect children = ARRAY(

            STRUCT{
              checksum = full_combo_box_def
              parms = STRUCT{
                id = gs_filter_ping
                x = 5
                y = 25
                h = 100
                style = dropdown
                choices = choices_connect_speed
                caption = STRUCT{
                  checksum = text_caption
                  parms = STRUCT{
                    text = "Connection speed"
                    }
                  }
                }
              }
            STRUCT{
              checksum = full_combo_box_def_2
              parms = STRUCT{
                id = gs_filter_empty
                x = 5
                y = 70
                style = checkbox
                prompt = "Show empty servers"
                caption = STRUCT{
                  checksum = text_caption
                  parms = STRUCT{
                    text = "Server filters"
                    }
                  }
                }
              }
            STRUCT{
              checksum = full_combo_box_def_2
              parms = STRUCT{
                id = gs_filter_full
                x = 5
                y = 90
                style = checkbox
                prompt = "Show full servers"
                }
              }
            STRUCT{
              checksum = full_combo_box_def_2
              parms = STRUCT{
                id = gs_filter_started
                x = 5
                y = 110
                style = checkbox
                prompt = "Show started games"
                }
              }
            STRUCT{
              checksum = full_combo_box_def_2
              parms = STRUCT{
                id = gs_filter_private
                x = 5
                y = 130
                style = checkbox
                prompt = "Show password games"
                }
              }
            STRUCT{
              checksum = full_combo_box_def_2
              parms = STRUCT{
                id = gs_filter_ta
                x = 170
                y = 25
                style = checkbox
                prompt = "Trick Attack"
                caption = STRUCT{
                  checksum = text_caption
                  parms = STRUCT{
                    text = "Show game types"
                    }
                  }
                }
              }
            STRUCT{
              checksum = full_combo_box_def_2
              parms = STRUCT{
                id = gs_filter_graffiti
                x = 170
                y = 45
                style = checkbox
                prompt = "Graffiti"
                }
              }
            STRUCT{
              checksum = full_combo_box_def_2
              parms = STRUCT{
                id = gs_filter_slap
                x = 170
                y = 65
                style = checkbox
                prompt = "Slap!"
                }
              }
            STRUCT{
              checksum = full_combo_box_def_2
              parms = STRUCT{
                id = gs_filter_koth
                x = 170
                y = 85
                style = checkbox
                prompt = "King of the Hill"
                }
              }
            STRUCT{
              checksum = full_combo_box_def_2
              parms = STRUCT{
                id = gs_filter_ball
                x = 170
                y = 105
                style = checkbox
                prompt = "Keep-Away"
                }
              }
            STRUCT{
              checksum = full_combo_box_def_2
              parms = STRUCT{
                id = gs_filter_zone
                x = 170
                y = 125
                style = checkbox
                prompt = "Control Zone"
                }
              }
            STRUCT{
              checksum = full_combo_box_def_2
              parms = STRUCT{
                id = gs_filter_ctf
                x = 170
                y = 145
                style = checkbox
                prompt = "Capture the Flag"
                }
              }
            STRUCT{
              checksum = client_area_properties
              }

          )
          }

#00000  game_serverinfo_window =
#00000
        STRUCT{
          checksum = game_serverinfo_window
          id = gs_serverinfo_window
          type = uielement
          x = 0.0
          y = 0.0
          w = 400.0
          h = 220.0
          parent_aligned parent_resized border_colors = border_colors_2
          border = 1.0
          noselect children = ARRAY(

            STRUCT{
              checksum = static_text
              parms = STRUCT{
                id = gs_si_name
                x = 5
                y = 5
                h = 20
                just_center_x align_x = STRUCT{
                  parent client full }
                texheight = 16
                text = "Server Name"
                truncate }
              }
            STRUCT{
              checksum = static_text
              parms = STRUCT{
                id = gs_si_game_name
                x = 5
                y = 75
                h = 16
                just_left_x texheight = 12
                text = "Trick Attack"
                }
              }
            STRUCT{
              checksum = static_text
              parms = STRUCT{
                id = gs_si_game_open
                x = 5
                y = 95
                h = 16
                just_left_x texheight = 12
                text = "Staging"
                }
              }
            STRUCT{
              checksum = player_name_entry
              parms = STRUCT{
                id = gs_join_password
                maxentrychars = 8
                text = ""
                tip = "This server requires a password to join."
                x = 10
                y = 150
                caption = STRUCT{
                  checksum = text_caption
                  parms = STRUCT{
                    text = "Password"
                    }
                  }
                }
              }
            STRUCT{
              checksum = game_ping_properties
              parms = STRUCT{
                id = gs_si_ping
                x = 5
                y = 35
                }
              }
            STRUCT{
              checksum = game_status_properties
              parms = STRUCT{
                id = gs_si_status
                x = 40
                y = 35
                }
              }
            STRUCT{
              checksum = game_modeicon_properties
              parms = STRUCT{
                id = gs_si_mode
                x = 24
                y = 35
                }
              }
            STRUCT{
              checksum = text_players_list
              parms = STRUCT{
                id = gs_si_players
                h = 120
                caption = STRUCT{
                  checksum = text_caption
                  parms = STRUCT{
                    text = "Players"
                    }
                  }
                }
              }
            STRUCT{
              checksum = client_area_properties
              }

          )
          }

#00000  text_players_list =
#00000
        STRUCT{
          checksum = text_players_list
          type = textelement
          x = 240
          y = 50
          w = 120
          h = 140
          drawer = keyboard_property
          texheight = 14
          truncate max_text = 8
          spacing = 2.0
          just_left_x just_top_y padding_h = 2.0
          padding_v = 2.0
          foreground_colors = bright_colors
          background_colors = black_colors
          border_colors = border_colors_2
          border = 1.0
          noselect }

#00000  gs_sb_text =
#00000
        STRUCT{
          checksum = gs_sb_text
          type = textelement
          w = 30.0
          texheight = 10
          padding_h = 1.0
          parent_aligned just_center_y static dont_gray foreground_colors = bright_colors
          background_colors = invisible_colors
          border_colors = border_colors_2
          border = 1.0
          noselect truncate drawer = keyboard_property
          max_text = 1
          }

#00000  gs_sb_progress =
#00000
        STRUCT{
          checksum = gs_sb_progress
          type = sliderelement
          style = progress
          parent_aligned w = 48
          padding_h = 2.0
          padding_v = 1.0
          static dont_gray background_colors = element_colors
          border_colors = border_colors_2
          border = 1.0
          noselect thumb_style = slider_thumb_properties
          forceclip }

#00000  server_statusbar =
#00000
        STRUCT{
          checksum = server_statusbar
          type = scrollwindow
          style = tiledhorizontal
          parent_aligned x = 0.0
          y = 0.0
          w = 400.0
          h = 18.0
          noselect background_colors = client_area_colors
          border_colors = border_colors_2
          noselect children = ARRAY(

            STRUCT{
              checksum = gs_sb_text
              parms = STRUCT{
                id = gs_tooltip
                parent_resized just_left_x text = "This is the help window"
                }
              }
            STRUCT{
              checksum = gs_sb_progress
              parms = STRUCT{
                id = gs_progress
                }
              }
            STRUCT{
              checksum = gs_sb_text
              parms = STRUCT{
                id = gs_server_count
                w = 64
                just_center_x text = "0"
                }
              }
            STRUCT{
              checksum = client_area_properties
              }

          )
          }

#00000  game_server_list_window =
#00000
        STRUCT{
          checksum = game_server_list_window
          type = scrollwindow
          style = tiledvertical
          parent_aligned parent_resized x = 0.0
          y = 270.0
          w = 400.0
          h = 80.0
          noselect background = background_window_properties
          padding_h = 8.0
          padding_v = 4.0
          children = ARRAY(

            STRUCT{
              checksum = game_options_window
              }
            STRUCT{
              checksum = game_serverinfo_window
              }
            STRUCT{
              checksum = game_filters_window
              }
            STRUCT{
              checksum = game_staging_window
              }
            STRUCT{
              checksum = game_create_window
              }
            STRUCT{
              checksum = game_server_list
              }
            STRUCT{
              checksum = server_statusbar
              }

          )
          }

#00000  server_info_window =
#00000
        STRUCT{
          checksum = server_info_window
          type = scrollwindow
          style = tiledvertical
          x = 10.0
          y = 0.0
          w = 400.0
          h = 265.0
          noselect border_colors = border_colors_1
          children = ARRAY(

            STRUCT{
              checksum = window_title_properties
              parms = STRUCT{
                id = gs_server_window_title
                text = "Server List"
                }
              }
            STRUCT{
              checksum = server_toolbar
              }
            STRUCT{
              checksum = game_server_list_window
              }

          )
          }

#00000  text_button =
#00000
        STRUCT{
          checksum = text_button
          type = textelement
          x = 0.0
          y = 0.0
          w = 32.0
          h = 32.0
          drawer = keyboard_property
          texheight = 12
          just_center_y hot parent_aligned border = 1.0
          background foreground_colors = button_fg_colors
          background_colors = button_bg_colors
          border_colors = border_colors_1
          }

#00000  simple_image_button =
#00000
        STRUCT{
          checksum = simple_image_button
          type = imageelement
          style = pushbutton
          stretch x = 0.0
          y = 0.0
          w = 32.0
          h = 32.0
          parent_aligned hot foreground_colors = img_fg_hilite_colors_1
          background_colors = button_bg_colors
          border_colors = border_colors_1
          }

#00000  text_caption =
#00000
        STRUCT{
          checksum = text_caption
          type = textelement
          x = 0.0
          y = 0.0
          w = 32.0
          h = 16.0
          align_y = STRUCT{
            parent bottom_top }
          align_x = STRUCT{
            parent full }
          nocliptoparent static dont_gray drawer = keyboard_property
          texheight = 10
          just_center_y just_left_x foreground_colors = bright_colors
          background_colors = black_colors
          border_colors = border_colors_1
          }

#00000  static_text =
#00000
        STRUCT{
          checksum = static_text
          type = textelement
          x = 0.0
          y = 0.0
          w = 32.0
          h = 16.0
          static dont_gray drawer = keyboard_property
          texheight = 10
          foreground_colors = bright_colors
          background_colors = black_colors
          border_colors = border_colors_1
          }

#00000  server_toolbar =
#00000
        STRUCT{
          checksum = server_toolbar
          type = scrollwindow
          style = tiledhorizontal
          x = 0.0
          y = 0.0
          w = 400.0
          h = 32.0
          parent_aligned spacing_h = 5.0
          padding_h = 8.0
          noselect background_colors = black_colors
          background children = ARRAY(

            STRUCT{
              checksum = simple_image_button
              parms = STRUCT{
                id = gs_connect
                texture_list = ARRAY(

                  "GSpyMenu\join.png"
                )
                tip = "Connect to GameSpy!"
                }
              }
            STRUCT{
              checksum = simple_image_button
              parms = STRUCT{
                id = gs_create_game
                texture_list = ARRAY(

                  "GSpyMenu\start.png"
                )
                tip = "Create a new staging room."
                }
              }
            STRUCT{
              checksum = simple_image_button
              parms = STRUCT{
                id = gs_start_game
                texture_list = ARRAY(

                  "GSpyMenu\start.png"
                )
                tip = "Start the staging room or game."
                }
              }
            STRUCT{
              checksum = simple_image_button
              parms = STRUCT{
                id = gs_join_game
                texture_list = ARRAY(

                  "GSpyMenu\join.png"
                )
                tip = "Join this game."
                }
              }
            STRUCT{
              checksum = simple_image_button
              parms = STRUCT{
                id = gs_filters
                texture_list = ARRAY(

                  "GSpyMenu\filter.png"
                )
                tip = "Customize server list filters."
                }
              }
            STRUCT{
              checksum = simple_image_button
              parms = STRUCT{
                id = gs_refresh
                texture_list = ARRAY(

                  "GSpyMenu\refresh.png"
                )
                tip = "Refresh the server list."
                }
              }
            STRUCT{
              checksum = simple_image_button
              parms = STRUCT{
                id = gs_stop
                texture_list = ARRAY(

                  "GSpyMenu\stop.png"
                )
                tip = "Stop refreshing the server list."
                }
              }
            STRUCT{
              checksum = simple_image_button
              parms = STRUCT{
                id = gs_back
                texture_list = ARRAY(

                  "GSpyMenu\back.png"
                )
                tip = "Go back to previous screen."
                }
              }
            STRUCT{
              checksum = simple_image_button
              parms = STRUCT{
                id = gs_options
                texture_list = ARRAY(

                  "GSpyMenu\settings.png"
                )
                tip = "Configure GameSpy."
                }
              }
            STRUCT{
              checksum = simple_image_button
              parms = STRUCT{
                id = gs_done
                texture_list = ARRAY(

                  "GSpyMenu\quit.png"
                )
                tip = "Return to the main menu."
                }
              }
            STRUCT{
              checksum = full_combo_box_def
              parms = STRUCT{
                id = gs_game_sort
                style = chooser
                choices = choices_sorting
                x = 170
                y = 13
                h = 120
                align_x = STRUCT{
                  parent client right_right }
                caption = STRUCT{
                  checksum = text_caption
                  parms = STRUCT{
                    text = "Sort"
                    }
                  }
                }
              }

          )
          }

#00000  text_entry_bar =
#00000
        STRUCT{
          checksum = text_entry_bar
          type = textelement
          x = 0.0
          y = 0.0
          w = 128.0
          h = 18.0
          parent_aligned hot drawer = keyboard_string
          texheight = 12
          border = 1.0
          background just_left_x foreground_colors = gamespy_colors
          background_colors = black_colors
          border_colors = border_colors_2
          max_text = 1
          padding_h = 2.0
          padding_v = 1.0
          maxentrychars = 200
          textentry truncate }

#00000  text_screen =
#00000
        STRUCT{
          checksum = text_screen
          type = textelement
          x = 0.0
          y = 0.0
          w = 400.0
          h = 100.0
          parent_aligned parent_resized drawer = keyboard_string
          texheight = 10
          just_left_x just_bottom_y foreground_colors = bright_colors
          background_colors = black_colors
          border_colors = border_colors_2
          border = 1.0
          noselect max_text = 200
          spacing = 2.0
          scrollv = slider_element_properties
          wrap children = ARRAY(

            STRUCT{
              checksum = client_area_properties
              }

          )
          }

#00000  chat_window =
#00000
        STRUCT{
          checksum = chat_window
          type = scrollwindow
          style = tiledvertical
          x = 10.0
          y = 270.0
          w = 400.0
          h = 175.0
          noselect children = ARRAY(

            STRUCT{
              checksum = window_title_properties
              parms = STRUCT{
                text = "Chat"
                }
              }
            STRUCT{
              checksum = chat_text_window
              parms = STRUCT{
                padding_h = 8.0
                padding_v = 4.0
                background = background_window_properties
                }
              }

          )
          }

#00000  gs_logo_properties =
#00000
        STRUCT{
          checksum = game_lock_properties
          type = imageelement
          w = 213.0
          h = 50.0
          x = 418
          y = 388
          noselect static dont_gray stretch foreground_colors = gamespy_colors
          style = imagelist
          activetexture = 0
          texture_list = ARRAY(

            "FrontEndSprites\gslogo.png"
          )
          }

#00000  gs_chat_window =
#00000
        STRUCT{
          checksum = gs_chat_window
          type = scrollwindow
          style = tiledvertical
          x = 10.0
          y = 270.0
          w = 400.0
          h = 175.0
          noselect children = ARRAY(

            STRUCT{
              checksum = window_title_properties
              parms = STRUCT{
                text = "Chat"
                }
              }
            STRUCT{
              checksum = chat_text_container
              }

          )
          }

#00000  chat_text_container =
#00000
        STRUCT{
          checksum = chat_text_container
          type = scrollwindow
          style = tiledhorizontal
          parent_aligned parent_resized x = 0.0
          y = 275.0
          w = 400.0
          h = 80.0
          noselect background = background_window_properties
          padding_h = 8.0
          padding_v = 4.0
          children = ARRAY(

            STRUCT{
              checksum = chat_text_window
              }
            STRUCT{
              checksum = room_players_list
              parms = STRUCT{
                id = gs_room_players_list
                style = scroll
                scrollv = slider_element_properties
                }
              }

          )
          }

#00000  chat_text_window =
#00000
        STRUCT{
          checksum = chat_text_window
          type = scrollwindow
          style = tiledvertical
          parent_aligned parent_resized x = 0.0
          y = 275.0
          w = 400.0
          h = 80.0
          noselect children = ARRAY(

            STRUCT{
              checksum = text_screen
              }
            STRUCT{
              checksum = text_entry_bar
              }

          )
          }

#00000  players_toolbar =
#00000
        STRUCT{
          checksum = players_toolbar
          type = scrollwindow
          style = tiledhorizontal
          x = 0.0
          y = 0.0
          w = 400.0
          h = 18.0
          parent_aligned padding_h = 8.0
          noselect background_colors = client_area_colors
          background children = ARRAY(

            STRUCT{
              checksum = text_button
              parms = STRUCT{
                static dont_gray text = "Ping"
                w = 30
                }
              }
            STRUCT{
              checksum = text_button
              parms = STRUCT{
                static dont_gray text = "Name"
                w = 64
                }
              }

          )
          }

#00000  generic_toolbar =
#00000
        STRUCT{
          checksum = generic_toolbar
          type = scrollwindow
          style = tiledhorizontal
          x = 0.0
          y = 0.0
          w = 400.0
          h = 18.0
          padding_h = 8.0
          noselect background_colors = client_area_colors
          border_colors = border_colors_1
          background }

#00000  players_window =
#00000
        STRUCT{
          checksum = players_window
          type = scrollwindow
          style = tiledvertical
          x = 420.0
          y = 10.0
          w = 200.0
          h = 400.0
          noselect children = ARRAY(

            STRUCT{
              checksum = window_title_properties
              parms = STRUCT{
                text = "Player List"
                }
              }
            STRUCT{
              checksum = players_toolbar
              }
            STRUCT{
              checksum = players_list
              parms = STRUCT{
                parent_resized style = tiledvertical
                }
              }

          )
          }

#00000  gamespy_player_list_scroller =
#00000
        STRUCT{
          checksum = gamespy_player_list_scroller
          type = sliderelement
          style = scrollbar
          x = 0.0
          y = 0.0
          size = 14
          background_colors = element_colors
          vertical noselect ticks = PAIR[20.0; 320.0]
          repeattime = 100
          thumb_style = slider_thumb_properties
          button_style = slider_button_properties
          forceclip drawfront }

#00000  gamespy_players_window =
#00000
        STRUCT{
          checksum = gamespy_players_window
          type = scrollwindow
          style = tiledvertical
          x = 410.0
          y = 0.0
          w = 225.0
          h = 380.0
          noselect children = ARRAY(

            STRUCT{
              checksum = window_title_properties
              parms = STRUCT{
                text = "Player List"
                texheight = 16
                }
              }
            STRUCT{
              checksum = generic_toolbar
              parms = STRUCT{
                background_colors = black_colors
                parent_aligned children = ARRAY(

                  STRUCT{
                    checksum = text_button
                    parms = STRUCT{
                      id = gs_player_sort_ping
                      text = "Ping"
                      w = 30
                      }
                    }
                  STRUCT{
                    checksum = text_button
                    parms = STRUCT{
                      id = gs_player_sort_name
                      text = "Name"
                      w = 64
                      }
                    }

                )
                }
              }
            STRUCT{
              checksum = players_list
              parms = STRUCT{
                parent_resized style = scroll
                scrollv = gamespy_player_list_scroller
                }
              }

          )
          }

#00000  players_list =
#00000
        STRUCT{
          checksum = players_list
          type = scrollwindow
          style = scroll
          x = 0.0
          y = 0.0
          w = 200.0
          h = 380.0
          parent_aligned noselect background = background_window_properties
          padding_h = 8.0
          padding_v = 4.0
          children = ARRAY(

            STRUCT{
              checksum = client_area_properties
              }

          )
          }

#00000  room_players_list =
#00000
        STRUCT{
          checksum = room_players_list
          type = scrollwindow
          x = 0.0
          y = 0.0
          w = 150.0
          h = 380.0
          parent_aligned noselect border = 1.0
          border_colors = border_colors_1
          padding_h = 1.0
          padding_v = 1.0
          children = ARRAY(

            STRUCT{
              checksum = client_area_properties
              }

          )
          }

#00000  player_name_properties =
#00000
        STRUCT{
          checksum = player_name_properties
          type = textelement
          y = 40
          w = 111.0
          h = 20.0
          texheight = 16
          spacing = 0
          padding_h = 6.0
          parent_aligned parent_resized just_center_y just_left_x noselect static dont_gray foreground_colors = bright_colors
          background_colors = invisible_colors
          background truncate drawer = keyboard_string
          max_text = 1
          }

#00000  player_team_properties =
#00000
        STRUCT{
          checksum = player_team_properties
          type = imageelement
          style = pushbutton
          w = 16.0
          h = 16.0
          parent_aligned noselect stretch foreground_colors = bright_colors
          activetexture = 0
          texture_list = ARRAY(

            "GSpyMenu\TH3hudFLAG.png"
          )
          }

#00000  player_msg_properties =
#00000
        STRUCT{
          checksum = player_msg_properties
          type = imageelement
          style = pushbutton
          w = 16.0
          h = 16.0
          parent_aligned hot stretch foreground_colors = playeritem_button_colors
          background_colors = playeritem_button_colors
          border_colors = border_colors_1
          activetexture = 0
          texture_list = ARRAY(

            "GSpyMenu\tinyiconsMSG.png"
          )
          }

#00000  player_ready_properties =
#00000
        STRUCT{
          checksum = player_ready_properties
          type = imageelement
          style = pushbutton
          w = 16.0
          h = 16.0
          parent_aligned noselect stretch foreground_colors = bright_colors
          activetexture = 0
          texture_list = ARRAY(

            "GSpyMenu\tinyiconsCHECK.png"
          )
          }

#00000  player_kick_properties =
#00000
        STRUCT{
          checksum = player_kick_properties
          type = imageelement
          style = pushbutton
          w = 16.0
          h = 16.0
          parent_aligned hot stretch foreground_colors = playeritem_button_colors
          background_colors = playeritem_button_colors
          border_colors = border_colors_1
          activetexture = 0
          texture_list = ARRAY(

            "GSpyMenu\tinyiconsKICK.png"
          )
          }

#00000  player_item =
#00000
        STRUCT{
          checksum = player_item
          type = scrollwindow
          style = tiledhorizontal
          parent_aligned x = 420.0
          y = 10.0
          w = 160.0
          h = 20.0
          align_x = STRUCT{
            parent client full }
          background_colors = list_item_highlight_colors
          noselect children = ARRAY(

            STRUCT{
              checksum = game_ping_properties
              parms = STRUCT{
                padding_v = 2.0
                w = 22
                h = 12
                horizontal parent_aligned }
              }
            STRUCT{
              checksum = player_name_properties
              }
            STRUCT{
              checksum = player_msg_properties
              }
            STRUCT{
              checksum = player_kick_properties
              }

          )
          handlers = ARRAY(

            STRUCT{
              sw_childchoose }

          )
          }

#00000  room_player_item =
#00000
        STRUCT{
          checksum = room_player_item
          type = scrollwindow
          style = tiledhorizontal
          parent_aligned x = 420.0
          y = 10.0
          w = 160.0
          h = 18.0
          align_x = STRUCT{
            parent client full }
          background_colors = list_item_highlight_colors
          noselect children = ARRAY(

            STRUCT{
              checksum = player_name_properties
              parms = STRUCT{
                h = 18
                texheight = 12
                }
              }
            STRUCT{
              checksum = player_msg_properties
              parms = STRUCT{
                w = 18
                h = 18
                }
              }
            STRUCT{
              checksum = player_kick_properties
              parms = STRUCT{
                w = 18
                h = 18
                }
              }

          )
          handlers = ARRAY(

            STRUCT{
              sw_childchoose }

          )
          }

#00000  gamespy_main_window =
#00000
        STRUCT{
          checksum = gamespy_main_window
          type = uielement
          id = gs_main_window
          x = 0.0
          y = 0.0
          w = 640.0
          h = 448.0
          noselect dont_gray background_colors = element_colors
          border_colors = border_colors_1
          children = ARRAY(

            STRUCT{
              checksum = server_info_window
              }
            STRUCT{
              checksum = gs_chat_window
              }
            STRUCT{
              checksum = gamespy_players_window
              }
            STRUCT{
              checksum = gs_logo_properties
              }

          )
          }

#00000  combo_box_def =
#00000
        STRUCT{
          checksum = combo_box_def
          type = scrollwindow
          style = tiledhorizontal
          x = 0.0
          y = 0.0
          w = 18.0
          h = 18.0
          parent_aligned align_x = STRUCT{
            parent full }
          noselect hot border = 1.0
          background background_colors = colors_scroll_background
          border_colors = border_colors_1
          }

#00000  combo_box_def_noborder =
#00000
        STRUCT{
          checksum = combo_box_def_noborder
          type = scrollwindow
          style = tiledhorizontal
          x = 0.0
          y = 0.0
          w = 18.0
          h = 18.0
          parent_aligned align_x = STRUCT{
            parent full }
          noselect hot background_colors = colors_scroll_background
          border_colors = border_colors_1
          }

#00000  combo_btn_def =
#00000
        STRUCT{
          checksum = combo_btn_def
          type = imageelement
          style = pushbutton
          stretch x = 0.0
          y = 0.0
          w = 16.0
          h = 16.0
          parent_aligned rotate = 180
          hot foreground_colors = image_button_highlight_colors
          texture_list = ARRAY(

            "GSpyMenu\arrow.png"
          )
          }

#00000  check_btn_def =
#00000
        STRUCT{
          checksum = check_btn_def
          type = imageelement
          style = imagelist
          just_center_x just_centery_y scalex = 0.8
          scaley = 0.8
          x = 0.0
          y = 0.0
          w = 16.0
          h = 16.0
          parent_aligned hot border = 1.0
          border_colors = border_colors_1
          foreground_colors = image_button_orange_highlight_colors
          texture_list = ARRAY(

            "GSpyMenu\tinyiconsX.png" "GSpyMenu\tinyiconsCHECK.png"
          )
          }

#00000  combo_text_def =
#00000
        STRUCT{
          checksum = combo_text_def
          type = textelement
          x = 0.0
          y = 0.0
          w = 96.0
          h = 16.0
          parent_aligned parent_resized just_center_y just_left_x padding_h = 2.0
          padding_v = 1.0
          noselect static dont_gray foreground_colors = bright_colors
          truncate drawer = keyboard_property
          texheight = 12
          max_text = 1
          }

#00000  combo_item_def =
#00000
        STRUCT{
          checksum = combo_item_def
          type = textelement
          x = 0.0
          y = 0.0
          w = 100.0
          h = 16.0
          parent_aligned just_center_y just_left_x padding_h = 2.0
          align_x = STRUCT{
            parent client full }
          foreground_colors = bright_colors
          hot background background_colors = list_item_highlight_colors
          truncate drawer = keyboard_property
          texheight = 12
          max_text = 1
          handlers = ARRAY(

            STRUCT{
              sw_childchoose }

          )
          }

#00000  combo_slider_element_properties =
#00000
        STRUCT{
          checksum = combo_slider_element_properties
          type = sliderelement
          style = scrollbar
          x = 0.0
          y = 0.0
          size = 14
          background_colors = element_colors
          border_colors = element_colors
          vertical noselect ticks = PAIR[17.0; 90.0]
          repeattime = 100
          thumb_style = slider_thumb_properties
          button_style = slider_button_properties
          forceclip drawfront }

#00000  combo_list_scroll_def =
#00000
        STRUCT{
          checksum = combo_list_scroll_def
          type = scrollwindow
          style = scroll
          x = 0.0
          y = 0.0
          w = 18.0
          h = 80.0
          parent_aligned parent_resized nocliptoparent noselect border = 1.0
          background background_colors = colors_scroll_background
          spacing_v = 1.0
          scrollv = combo_slider_element_properties
          align_x = STRUCT{
            parent full }
          }

#00000  combo_list_sized_def =
#00000
        STRUCT{
          checksum = combo_list_sized_def
          type = scrollwindow
          style = tiledvertical
          x = 0.0
          y = 0.0
          w = 18.0
          h = 40.0
          parent_aligned nocliptoparent noselect border = 1.0
          background background_colors = colors_scroll_background
          spacing_v = 1.0
          align_x = STRUCT{
            parent full }
          }

#00000  combo_layout_def =
#00000
        STRUCT{
          checksum = combo_layout_def
          type = scrollwindow
          style = tiledvertical
          x = 0.0
          y = 0.0
          w = 1.0
          h = 1.0
          noselect align_x = STRUCT{
            parent full }
          align_y = STRUCT{
            parent full }
          }

#00000  full_combo_box_def =
#00000
        STRUCT{
          checksum = full_combo_box_def
          type = selectionelement
          style = chooser
          x = 80.0
          y = 80.0
          w = 150.0
          h = 30.0
          combodef = combo_box_def
          ddownDef = combo_btn_def
          selDef = combo_text_def
          listDef = combo_list_sized_def
          layoutDef = combo_layout_def
          itemDef = combo_item_def
          checkDef = check_btn_def
          choices = empty_choices
          }

#00000  full_combo_box_def_2 =
#00000
        STRUCT{
          checksum = full_combo_box_def_2
          type = selectionelement
          style = chooser
          x = 80.0
          y = 80.0
          w = 150.0
          h = 30.0
          combodef = combo_box_def_noborder
          ddownDef = combo_btn_def
          selDef = combo_text_def
          listDef = combo_list_sized_def
          layoutDef = combo_layout_def
          itemDef = combo_item_def
          checkDef = check_btn_def
          choices = empty_choices
          }

#00000  str_team_blue = 'Blue Team'

#00000  str_team_red = 'Red Team'

#00000  choices_none =
#00000
        ARRAY(
          STRUCT{
            name = "None"
            checksum = choice_none
            }

        )

#00000  empty_choices =
#00000
        ARRAY(
          STRUCT{
            name = "None"
            checksum = choice_none
            value = choices_none
            }

        )

#00000  choices_boolean =
#00000
        ARRAY(
          STRUCT{
            name = "No"
            checksum = choice_no
            value = 0
            }
          STRUCT{
            name = "Yes"
            checksum = choice_yes
            value = 1
            }

        )

#00000  choices_team =
#00000
        ARRAY(
          STRUCT{
            name = "Automatic"
            checksum = choice_team_automatic
            value = -1
            }
          STRUCT{
            name = "Blue Team"
            checksum = choice_team_blue
            value = 0
            }
          STRUCT{
            name = "Red Team"
            checksum = choice_team_red
            value = 1
            }

        )

#00000  choices_endgame_ctf =
#00000
        ARRAY(
          STRUCT{
            name = "Timed"
            checksum = choice_timed
            value = empty_choices
            }
          STRUCT{
            name = "Capture Limit"
            checksum = ctf_capture_limit
            value = choices_capture_limit
            }

        )

#00000  choices_endgame_zone =
#00000
        ARRAY(
          STRUCT{
            name = "Timed"
            checksum = choice_timed
            value = empty_choices
            }
          STRUCT{
            name = "Control All Zones"
            checksum = zone_control_limit
            value = choices_zone_control_limit
            }
          STRUCT{
            name = "Zone Score Limit"
            checksum = zone_time_control_limit
            value = choices_zone_score_limit
            }

        )

#00000  choices_endgame_other =
#00000
        ARRAY(
          STRUCT{
            name = "Timed"
            checksum = choice_timed
            value = empty_choices
            }
          STRUCT{
            name = "Score Limit"
            checksum = choice_score_limit
            value = choices_score_limit
            }

        )

#00000  choices_capture_limit =
#00000
        ARRAY(
          STRUCT{
            name = "5 Captures"
            checksum = capture_limit_5
            value = 5
            }
          STRUCT{
            name = "10 Captures"
            checksum = capture_limit_10
            value = 10
            }
          STRUCT{
            name = "15 Captures"
            checksum = capture_limit_15
            value = 15
            }
          STRUCT{
            name = "20 Captures"
            checksum = capture_limit_20
            value = 20
            }

        )

#00000  choices_zone_control_limit =
#00000
        ARRAY(
          STRUCT{
            name = "1 Time"
            checksum = zone_control_limit_1
            value = 1
            }
          STRUCT{
            name = "2 Times"
            checksum = zone_control_limit_2
            value = 2
            }
          STRUCT{
            name = "5 Times"
            checksum = zone_control_limit_5
            value = 5
            }
          STRUCT{
            name = "10 Times"
            checksum = zone_control_limit_10
            value = 10
            }

        )

#00000  choices_score_limit =
#00000
        ARRAY(
          STRUCT{
            name = "250,000 pts"
            checksum = score_250k
            value = 250000
            }
          STRUCT{
            name = "500,000 pts"
            checksum = score_500k
            value = 500000
            }
          STRUCT{
            name = "2,000,000 pts"
            checksum = score_2m
            value = 2000000
            }
          STRUCT{
            name = "5,000,000 pts"
            checksum = score_5m
            value = 5000000
            }
          STRUCT{
            name = "10,000,000 pts"
            checksum = score_10m
            value = 10000000
            }
          STRUCT{
            name = "20,000,000 pts"
            checksum = score_20m
            value = 20000000
            }
          STRUCT{
            name = "50,000,000 pts"
            checksum = score_50m
            value = 50000000
            }

        )

#00000  choices_zone_score_limit =
#00000
        ARRAY(
          STRUCT{
            name = "500 pts"
            checksum = score_500
            value = 500
            }
          STRUCT{
            name = "750 pts"
            checksum = score_750
            value = 750
            }
          STRUCT{
            name = "1,500 pts"
            checksum = score_1500
            value = 1500
            }
          STRUCT{
            name = "3,000 pts"
            checksum = score_3000
            value = 3000
            }
          STRUCT{
            name = "5,000 pts"
            checksum = score_5000
            value = 5000
            }
          STRUCT{
            name = "10,000 pts"
            checksum = score_10000
            value = 10000
            }

        )

#00000  choices_level_type =
#00000
        ARRAY(
          STRUCT{
            name = "Regular Levels"
            checksum = level_type_regular
            }
          STRUCT{
            name = "Custom Levels"
            checksum = level_type_custom
            }

        )

#00000  choices_connect_speed =
#00000
        ARRAY(
          STRUCT{
            name = "All"
            checksum = ping_0
            value = 0
            }
          STRUCT{
            name = "Less than 50ms"
            checksum = ping_50
            value = 50
            }
          STRUCT{
            name = "Less than 150ms"
            checksum = ping_150
            value = 150
            }
          STRUCT{
            name = "Less than 250ms"
            checksum = ping_250
            value = 250
            }

        )

#00000  choices_update_speed =
#00000
        ARRAY(
          STRUCT{
            name = "Slow"
            checksum = update_slow
            value = 5
            }
          STRUCT{
            name = "Normal"
            checksum = update_normal
            value = 15
            }
          STRUCT{
            name = "Fast"
            checksum = update_fast
            value = 20
            }
          STRUCT{
            name = "Fastest"
            checksum = update_fastest
            value = 30
            }

        )

#00000  choices_sorting =
#00000
        ARRAY(
          STRUCT{
            name = "Name"
            checksum = sort_name
            }
          STRUCT{
            name = "Ping"
            checksum = sort_ping
            }
          STRUCT{
            name = "Players"
            checksum = sort_nplayers
            }
          STRUCT{
            name = "Max Players"
            checksum = sort_mplayers
            }
          STRUCT{
            name = "Game Type"
            checksum = sort_type
            }

        )

#00000  choices_num_players = ARRAY(

          STRUCT{
            name = "2 Players"
            checksum = num_2
            value = 2
            }
          STRUCT{
            name = "3 Players"
            checksum = num_3
            value = 3
            }
          STRUCT{
            name = "4 Players"
            checksum = num_4
            value = 4
            }
          STRUCT{
            name = "5 Players"
            checksum = num_5
            value = 5
            }
          STRUCT{
            name = "6 Players"
            checksum = num_6
            value = 6
            }
          STRUCT{
            name = "7 Players"
            checksum = num_7
            value = 7
            }
          STRUCT{
            name = "8 Players"
            checksum = num_8
            value = 8
            }

        )

#00000  level_pic_properties =
#00000
        STRUCT{
          checksum = level_pic_properties
          type = imageelement
          style = imagelist
          x = 0
          y = 0
          w = 200.0
          h = 160.0
          noselect dont_gray stretch border = 1.0
          foreground_colors = bright_colors
          activetexture = 0
          texture_list = ARRAY(

            "loadscrn_editor_play.png" "loadscrn_Foundry_Small.png" "loadscrn_Can_Small.png" "loadscrn_Rio_Small.png" "loadscrn_Sub_Small.png" "loadscrn_AP_Small.png" "loadscrn_SI_Small.png" "loadscrn_LA_Small.png" "loadscrn_Tok_Small.png" "loadscrn_Ship_Small.png" "loadscrn_Warehouse_Small.png" "loadscrn_burnside_Small.png" "loadscrn_roswell_Small.png"
          )
          children = ARRAY(


          )
          }

#00000  level_capabilities_item =
#00000
        STRUCT{
          checksum = level_capabilities_item
          type = imageelement
          style = imagelist
          w = 28.0
          h = 28.0
          parent_aligned noselect stretch border = 1.0
          border_colors = bright_colors
          foreground_colors = on_off_colors
          activetexture = 0
          texture_list = ARRAY(

            "GSpyMenu\icon-ball.png"
          )
          }

#00000  level_capabilities_properties =
#00000
        STRUCT{
          checksum = level_capabilities_properties
          type = scrollwindow
          style = tiledhorizontal
          x = 0.0
          y = 0.0
          w = 1.0
          h = 30.0
          spacing_h = 2.0
          padding_h = 2.0
          padding_v = 1.0
          align_x = STRUCT{
            parent client full }
          noselect children = ARRAY(

            STRUCT{
              checksum = level_capabilities_item
              parms = STRUCT{
                id = ss_caps_trick
                texture_list = ARRAY(

                  "GSpyMenu\icon-versus.png"
                )
                }
              }
            STRUCT{
              checksum = level_capabilities_item
              parms = STRUCT{
                id = ss_caps_graffiti
                texture_list = ARRAY(

                  "GSpyMenu\icon-spray.png"
                )
                }
              }
            STRUCT{
              checksum = level_capabilities_item
              parms = STRUCT{
                id = ss_caps_slap
                texture_list = ARRAY(

                  "GSpyMenu\icon-slappers.png"
                )
                }
              }
            STRUCT{
              checksum = level_capabilities_item
              parms = STRUCT{
                id = ss_caps_koth
                texture_list = ARRAY(

                  "GSpyMenu\icon-koth.png"
                )
                }
              }
            STRUCT{
              checksum = level_capabilities_item
              parms = STRUCT{
                id = ss_caps_ball
                texture_list = ARRAY(

                  "GSpyMenu\icon-ball.png"
                )
                }
              }
            STRUCT{
              checksum = level_capabilities_item
              parms = STRUCT{
                id = ss_caps_otz
                texture_list = ARRAY(

                  "GSpyMenu\icon-otz.png"
                )
                }
              }
            STRUCT{
              checksum = level_capabilities_item
              parms = STRUCT{
                id = ss_caps_ctf
                texture_list = ARRAY(

                  "GSpyMenu\icon-ctf.png"
                )
                }
              }

          )
          }

#00000  game_settings_window =
#00000
        STRUCT{
          checksum = game_settings_window
          type = scrollwindow
          style = tiledvertical
          x = 10.0
          y = 10.0
          w = 180.0
          h = 250.0
          spacing = 0
          noselect children = ARRAY(

            STRUCT{
              checksum = window_title_properties
              parms = STRUCT{
                text = "Game"
                }
              }
            STRUCT{
              checksum = game_settings_choices_window
              }

          )
          }

#00000  game_settings_choices_window =
#00000
        STRUCT{
          checksum = game_settings_choices_window
          type = uielement
          x = 0.0
          y = 0.0
          w = 1
          h = 1
          parent_aligned parent_resized background = background_window_properties
          padding_h = 8.0
          padding_v = 4.0
          children = ARRAY(

            STRUCT{
              checksum = full_combo_box_def
              parms = STRUCT{
                id = ss_game_type_choice
                x = 5
                y = 20
                h = 140
                align_x = STRUCT{
                  parent client center }
                style = dropdown
                choices = game_type_info
                caption = STRUCT{
                  checksum = text_caption
                  parms = STRUCT{
                    text = "Game Type"
                    }
                  }
                }
              }
            STRUCT{
              checksum = full_combo_box_def
              parms = STRUCT{
                id = ss_end_game_options_choice
                x = 5
                y = 60
                align_x = STRUCT{
                  parent client center }
                caption = STRUCT{
                  checksum = text_caption
                  parms = STRUCT{
                    text = "End Game Options"
                    }
                  }
                }
              }
            STRUCT{
              checksum = full_combo_box_def
              parms = STRUCT{
                id = ss_end_game_cond_choice
                x = 5
                y = 80
                align_x = STRUCT{
                  parent client center }
                }
              }
            STRUCT{
              checksum = full_combo_box_def
              parms = STRUCT{
                id = ss_time_limit_choice
                x = 5
                y = 120
                align_x = STRUCT{
                  parent client center }
                choices = time_limit_options
                caption = STRUCT{
                  checksum = text_caption
                  parms = STRUCT{
                    text = "Time Limit"
                    }
                  }
                }
              }
            STRUCT{
              checksum = text_button
              parms = STRUCT{
                id = ss_start_game
                text = "Start Game"
                h = 18
                y = 143
                w = 128
                align_x = STRUCT{
                  parent client center }
                }
              }
            STRUCT{
              checksum = text_button
              parms = STRUCT{
                id = ss_return_to_game
                text = "Return to Game"
                h = 18
                y = 164
                w = 128
                align_x = STRUCT{
                  parent client center }
                }
              }
            STRUCT{
              checksum = text_button
              parms = STRUCT{
                id = ss_quit
                text = "Quit"
                h = 18
                y = 185
                w = 128
                align_x = STRUCT{
                  parent client center }
                }
              }
            STRUCT{
              checksum = client_area_properties
              }

          )
          }

#00000  ss_str_change_level = 'Change Level'

#00000  ss_str_start_game = 'Start Game'

#00000  choose_level_window =
#00000
        STRUCT{
          checksum = choose_level_window
          type = scrollwindow
          style = tiledvertical
          x = 190.0
          y = 10.0
          w = 230.0
          h = 250.0
          spacing = 0
          noselect children = ARRAY(

            STRUCT{
              checksum = window_title_properties
              parms = STRUCT{
                text = "Level"
                }
              }
            STRUCT{
              checksum = choose_level_choices_window
              }

          )
          }

#00000  choose_level_choices_window =
#00000
        STRUCT{
          checksum = choose_level_choices_window
          type = uielement
          x = 0.0
          y = 0.0
          w = 1
          h = 1
          parent_aligned parent_resized background = background_window_properties
          padding_h = 8.0
          padding_v = 4.0
          children = ARRAY(

            STRUCT{
              checksum = full_combo_box_def
              parms = STRUCT{
                id = ss_level_type_choice
                x = 0
                y = 10
                h = 17
                w = 200
                align_x = STRUCT{
                  parent client center }
                choices = choices_level_type
                }
              }
            STRUCT{
              checksum = full_combo_box_def
              parms = STRUCT{
                id = ss_level_choice
                x = 0
                y = 27
                h = 122
                w = 200
                align_x = STRUCT{
                  parent client center }
                style = dropdown
                listDef = combo_list_scroll_def
                }
              }
            STRUCT{
              checksum = level_pic_properties
              parms = STRUCT{
                id = ss_level_pic
                x = 0
                y = 44
                w = 200
                h = 135
                align_x = STRUCT{
                  parent client center }
                }
              }
            STRUCT{
              checksum = level_capabilities_properties
              parms = STRUCT{
                y = 180
                }
              }
            STRUCT{
              checksum = client_area_properties
              }

          )
          }

#00000  player_settings_window =
#00000
        STRUCT{
          checksum = player_settings_window
          type = scrollwindow
          style = tiledvertical
          x = 420.0
          y = 275.0
          w = 180.0
          h = 160.0
          spacing = 0
          noselect children = ARRAY(

            STRUCT{
              checksum = window_title_properties
              parms = STRUCT{
                text = "Player"
                }
              }
            STRUCT{
              checksum = player_settings_choices_window
              }

          )
          }

#00000  player_settings_choices_window =
#00000
        STRUCT{
          checksum = player_settings_choices_window
          type = uielement
          x = 0.0
          y = 0.0
          w = 1
          h = 1
          parent_aligned parent_resized background = background_window_properties
          padding_h = 8.0
          padding_v = 4.0
          children = ARRAY(

            STRUCT{
              checksum = full_combo_box_def_2
              parms = STRUCT{
                id = ss_player_ready
                x = 5
                y = 10
                align_x = STRUCT{
                  parent client center }
                style = checkbox
                prompt = "Ready"
                }
              }
            STRUCT{
              checksum = full_combo_box_def
              parms = STRUCT{
                id = ss_player_team
                x = 5
                y = 50
                align_x = STRUCT{
                  parent client center }
                choices = choices_team
                caption = STRUCT{
                  checksum = text_caption
                  parms = STRUCT{
                    text = "Team"
                    }
                  }
                }
              }
            STRUCT{
              checksum = client_area_properties
              }

          )
          }

#00000  player_name_entry =
#00000
        STRUCT{
          checksum = player_name_entry
          type = textelement
          x = 0.0
          y = 20.0
          w = 150.0
          h = 18.0
          hot border = 1.0
          background foreground_colors = bright_colors
          background_colors = black_colors
          border_colors = border_colors_1
          just_left_x max_text = 1
          drawer = keyboard_property
          texheight = 12
          padding_h = 2.0
          padding_v = 1.0
          maxentrychars = 15
          textentry truncate }

#00000  setup_window =
#00000
        STRUCT{
          checksum = setup_window
          type = uielement
          id = ss_main_window
          x = 0.0
          y = 0.0
          w = 640.0
          h = 448.0
          noselect children = ARRAY(

            STRUCT{
              checksum = game_settings_window
              }
            STRUCT{
              checksum = choose_level_window
              }
            STRUCT{
              checksum = players_window
              parms = STRUCT{
                h = 250.0
                }
              }
            STRUCT{
              checksum = chat_window
              }
            STRUCT{
              checksum = player_settings_window
              }

          )
          }

#00000  dialog_main_window =
#00000
        STRUCT{
          checksum = dialog_main_window
          type = uielement
          x = 0
          y = 0
          w = 640.0
          h = 448.0
          noselect children = ARRAY(

            STRUCT{
              checksum = dialog_template
              }

          )
          }

#00000  dialog_client_window =
#00000
        STRUCT{
          checksum = dialog_client_window
          type = scrollwindow
          style = tiledvertical
          x = 0.0
          y = 0.0
          w = 1
          h = 1
          parent_aligned parent_resized spacing_v = 5.0
          background = background_window_properties
          padding_h = 8.0
          padding_v = 4.0
          children = ARRAY(

            STRUCT{
              checksum = client_area_properties
              }

          )
          }

#00000  dialog_template =
#00000
        STRUCT{
          checksum = dialog_template
          type = scrollwindow
          style = tiledvertical
          x = 50
          y = 50
          w = 200.0
          h = 250.0
          align_x = STRUCT{
            parent client center }
          align_y = STRUCT{
            parent client center }
          noselect children = ARRAY(

            STRUCT{
              checksum = window_title_properties
              }
            STRUCT{
              checksum = dialog_client_window
              }

          )
          }

#00000  dialog_main_children =
#00000
        STRUCT{
          children = ARRAY(

            STRUCT{
              checksum = dialog_template
              }

          )
          }

#00000  dialog_button_props =
#00000
        STRUCT{
          checksum = dialog_button_props
          type = textelement
          x = 0.0
          y = 0.0
          w = 85.0
          h = 20.0
          parent_aligned align_x = STRUCT{
            parent client center }
          drawer = keyboard_property
          texheight = 12
          just_center_y max_text = 1
          hot border = 1.0
          background foreground_colors = button_fg_colors
          background_colors = button_bg_colors
          border_colors = border_colors_1
          }

#00000  dialog_prompt_props =
#00000
        STRUCT{
          checksum = dialog_prompt_props
          type = textelement
          x = 0.0
          y = 0.0
          w = 400.0
          h = 100.0
          parent_aligned parent_resized drawer = keyboard_property
          texheight = 16
          max_text = 1
          spacing = 2.0
          wrap just_center_x just_center_y foreground_colors = bright_colors
          background_colors = black_colors
          border_colors = border_colors_2
          noselect }

#00000  dialog_quit_yes_no =
#00000
        STRUCT{
          caption = 'Quit?'
          prompt = 'Would you like to exit the game?'
          buttons = ARRAY(

            'Yes' 'No'
          )
          }

#00000  dialog_ban_yes_no =
#00000
        STRUCT{
          caption = 'Ban Player?'
          prompt = 'Would you like to remove %s from the game?'
          buttons = ARRAY(

            'Yes' 'No'
          )
          }

#00000  gamespy_preferences = STRUCT{
          gs_update_speed = STRUCT{
            ui_string = "Normal"
            checksum = update_normal
            value = 15
            }
          gs_sort = STRUCT{
            ui_string = "Name"
            checksum = sort_name
            value = 0
            }
          gs_password = STRUCT{
            ui_string = ""
            }
          gs_server_name = STRUCT{
            ui_string = "Gearbox"
            }
          gs_players = STRUCT{
            ui_string = "8"
            checksum = num_8
            value = 8
            }
          gs_skill = STRUCT{
            ui_string = "Trick Attack"
            checksum = nettrickattack
            }
          gs_filter_ping = STRUCT{
            ui_string = "Yes"
            checksum = ping_0
            value = 0
            }
          gs_filter_empty = STRUCT{
            ui_string = "Yes"
            checksum = choice_yes
            value = 1
            }
          gs_filter_full = STRUCT{
            ui_string = "No"
            checksum = choice_no
            value = 0
            }
          gs_filter_started = STRUCT{
            ui_string = "No"
            checksum = choice_no
            value = 0
            }
          gs_filter_private = STRUCT{
            ui_string = "Yes"
            checksum = choice_yes
            value = 1
            }
          gs_filter_ta = STRUCT{
            ui_string = "Yes"
            checksum = choice_yes
            value = 1
            }
          gs_filter_graffiti = STRUCT{
            ui_string = "Yes"
            checksum = choice_yes
            value = 1
            }
          gs_filter_slap = STRUCT{
            ui_string = "Yes"
            checksum = choice_yes
            value = 1
            }
          gs_filter_koth = STRUCT{
            ui_string = "Yes"
            checksum = choice_yes
            value = 1
            }
          gs_filter_ball = STRUCT{
            ui_string = "Yes"
            checksum = choice_yes
            value = 1
            }
          gs_filter_zone = STRUCT{
            ui_string = "Yes"
            checksum = choice_yes
            value = 1
            }
          gs_filter_ctf = STRUCT{
            ui_string = "Yes"
            checksum = choice_yes
            value = 1
            }
          }

#00000
