FUNCTION start_main_menu
#00000    SetFrontEndPad 0
#00000    Request_Level level = Load_SkateShop

#00000    SetGameType SkateShop
#00000    SetGameState on
#00000    reset_skateshop_skater
#00000    HideLoadingScreen
#00000    PlaySkaterCamAnim skater = 0
          name = "Cam_MainMenu01"
          play_hold
#00000    spawnscript main_menu_first_frame
#00000  END FUNCTION

#00000  DoAutoLoad = 1

#00000  AutoLoadRetryContinueVisible = 0

#00000  FUNCTION AutoLoad
#00000    IF PAL
#00000      Change MinimumSpaceNeeded = 65

#00000    END IF
#00000    IF MemCardFileExists name = "Options and Pros"
            Type = OptionsAndPros

#00000      DisplayMessage MessageScript = Message_LoadingData
            PauseLength = MemCardMessageShortPause

#00000      Change MemCardLoadFailed = 0

#00000      IF LoadFromMemoryCard name = "Options and Pros"
              Type = OptionsAndPros

#00000      ELSE
#00000        Change MemCardLoadFailed = 1

#00000      END IF
#00000      IF MemCardFileExists name = "Network settings"
              Type = NetworkSettings

#00000        IF LoadFromMemoryCard name = "Network settings"
                Type = NetworkSettings

#00000        ELSE
#00000          Change MemCardLoadFailed = 1

#00000        END IF
#00000      END IF
#00000      IF CurrentSkaterIsPro
#00000      ELSE
#00000        IF CustomSkaterFilenameDefined
#00000          GetCustomSkaterFilename
#00000          IF LoadFromMemoryCard name = GLOBAL.string
                  Type = cas

#00000          ELSE
#00000            Change MemCardLoadFailed = 1

#00000          END IF
#00000        END IF
#00000      END IF
#00000      RemoveAllSkaters
#00000      ToggleSkater
#00000      FireMenuEvent Type = refreshdecktextures
            Id = deck_menu
            target = deck_menu

#00000      PlaySkaterCamAnim skater = 0
            name = "Cam_MainMenu01"
            play_hold
#00000      IF istrue MemCardLoadFailed
#00000        DisplayMessage MessageScript = Message_LoadFailed
              PauseLength = MemCardMessageErrorPause

#00000      ELSE
#00000        movies_menu_create
#00000        DisplayMessage MessageScript = Message_LoadSuccessful

#00000      END IF
#00000    END IF
#00000    SwitchToMenu menu = frontend_menu
          DoNotMakeRoot
#00000    Change DoAutoLoad = 0

#00000    goto main_menu_first_frame
#00000  END FUNCTION

#00000  FUNCTION _ReSpawnAutoload
#00000    EnableBackEvent
#00000    spawnscript AutoLoad
#00000  END FUNCTION

#00000  FUNCTION _BackToMainMenuFirstFrame
#00000    EnableBackEvent
#00000    spawnscript BackToMainMenuFirstFrame
#00000  END FUNCTION

#00000  FUNCTION BackToMainMenuFirstFrame
#00000    SwitchToMenu menu = frontend_menu
          DoNotMakeRoot
#00000    Change DoAutoLoad = 0

#00000    goto main_menu_first_frame
#00000  END FUNCTION

#00000  FUNCTION main_menu_first_frame
#00000    IF istrue run_viewer
#00000      Change DoAutoLoad = 0

#00000    END IF
#00000    IF istrue DoAutoLoad
#00000      goto AutoLoad
#00000    END IF
#00000    Change FirstTimeInSplitscreen = 1

#00000    Change FirstTimeFromSkateshop = 1

#00000    IF DoDeferredInternetConnect
#00000    ELSE
#00000      IF DeferredLaunchServer
#00000      ELSE
#00000        IF istrue AutoLinkToCareerScreen
#00000          Change AutoLinkToCareerScreen = 0

#00000          SetCareerMode
#00000          SwitchToMenu menu = career_menu
                DoNotMakeRoot
#00000        END IF
#00000      END IF
#00000    END IF
#00000  END FUNCTION

#00000  FUNCTION reset_skateshop_skater
#00000    IF CurrentSkaterProfileIs 0
#00000      PlaySkaterCamAnim skater = 0
            name = "Cam_MainMenu01"
            play_hold
#00000    END IF
#00000    MakeSkaterGoto skater = 0
          SkateShopDummyAI
#00000    MakeSkaterGoto skater = 1
          SkateShopDummyAI
#00000  END FUNCTION

#00000  FUNCTION exit_main_menu
#00000    UninitializeFrontEndSprites
#00000  END FUNCTION

#00000  FUNCTION SkateShopDummyAI
#00000    SwitchOnBoard
#00000    SwitchOffAtomic special_item
#00000    ClearExceptions
#00000    SetQueueTricks NoTricks
#00000    DisablePlayerInput
#00000    SetRollingFriction 10000
#00000    BlendPeriodOut 0
#00000    LOOP
#00000      IF ProfileEquals is_named = wolverine

#00000        PlayAnim Anim = WolverineIdle
              Cycle NoRestart Blendperiod = 0.0

#00000      ELSE
#00000        IF ProfileEquals is_named = demoness

#00000          PlayAnim Anim = DemonessIdle
                Cycle NoRestart Blendperiod = 0.0

#00000        ELSE
#00000          IF ProfileEquals is_named = maul

#00000            IF flipped
#00000            ELSE
#00000              flip
#00000            END IF
#00000            SwitchOffAtomic special_item
#00000            PlayAnim Anim = MaulIdle
                  Cycle NoRestart Blendperiod = 0.0

#00000            Wait 60 frames
#00000            SwitchOnAtomic special_item
#00000            PlaySound SaberHIT1
#00000          ELSE
#00000            IF ProfileEquals is_named = slater

#00000              PlayAnim Anim = SlaterIdle
                    Cycle NoRestart Blendperiod = 0.0

#00000            ELSE
#00000              IF ProfileEquals is_named = ollie

#00000                PlayAnim Anim = OllieIdle
                      Cycle NoRestart Blendperiod = 0.0

#00000              ELSE
#00000                IF ProfileEquals is_named = dick

#00000                  goto DickIdle
#00000                ELSE
#00000                  IF ProfileEquals is_named = steamer

#00000                    goto StandIdle
#00000                  ELSE
#00000                    IF ProfileEquals is_named = muska

#00000                      IF flipped
#00000                      ELSE
#00000                        flip
#00000                      END IF
#00000                      GotoRandomScript ARRAY(
                              MuskaIdle
                            )

#00000                    ELSE
#00000                      IF ProfileEquals is_named = margera

#00000                        PlayAnim RANDOM[7][24; 36; 48; 60; 72; 84; 96]
                              Anim = BoardIdle
                              JUMP 0x5b000000 Anim = BoardIdle
                              JUMP 0x4b000000 Anim = BoardIdle
                              JUMP 0x3b000000 Anim = BoardIdle
                              JUMP 0x2b000000 Anim = BamScratch
                              JUMP 0x1b000000 Anim = BoardLook
                              JUMP 0x0b000000 Anim = BoardMove
                              Blendperiod = 0.0

#00000                      ELSE
#00000                        IF ProfileEquals body_type = female

#00000                          GotoRandomScript ARRAY(
                                  FemaleIdle1 FemaleIdle2
                                )

#00000                        ELSE
#00000                          GotoRandomScript ARRAY(
                                  StandIdle OtherIdle BoardIdle
                                )

#00000                        END IF
#00000                      END IF
#00000                    END IF
#00000                  END IF
#00000                END IF
#00000              END IF
#00000            END IF
#00000          END IF
#00000        END IF
#00000      END IF
#00000      WaitAnimFinished
#00000    END LOOP
#00000  END FUNCTION

#00000  FUNCTION StandIdle
#00000    LOOP
#00000      PlayAnim Anim = StandIdle
            Blendperiod = 0.0

#00000      WaitAnimFinished
#00000      PlayAnim RANDOM[7][24; 36; 48; 60; 72; 84; 96]
            Anim = StandIdle
            JUMP 0x5b000000 Anim = StandIdle
            JUMP 0x4b000000 Anim = StandIdle
            JUMP 0x3b000000 Anim = StandIdle
            JUMP 0x2b000000 Anim = StandLeftRight
            JUMP 0x1b000000 Anim = StandCheckBoard
            JUMP 0x0b000000 Anim = StandShoulder
            Blendperiod = 0.0

#00000      IF AnimEquals StandSwap
#00000        FlipAfter
#00000        BlendPeriodOut 0.0
#00000      END IF
#00000      WaitAnimFinished
#00000    END LOOP
#00000  END FUNCTION

#00000  FUNCTION MuskaIdle
#00000    SwitchOnAtomic special_item
#00000    PlayAnim Anim = MuskaIdle
          Cycle Blendperiod = 0.0
          Speed = 0.7

#00000  END FUNCTION

#00000  FUNCTION FemaleIdle1
#00000    PlayAnim Anim = FemaleIdle
          Cycle Blendperiod = 0.0

#00000  END FUNCTION

#00000  FUNCTION FemaleIdle2
#00000    PlayAnim Anim = LeanIdle
          Cycle Blendperiod = 0.0

#00000  END FUNCTION

#00000  FUNCTION BoardIdle
#00000    LOOP
#00000      PlayAnim RANDOM[7][24; 36; 48; 60; 72; 84; 96]
            Anim = BoardIdle
            JUMP 0x5b000000 Anim = BoardIdle
            JUMP 0x4b000000 Anim = BoardIdle
            JUMP 0x3b000000 Anim = BoardIdle
            JUMP 0x2b000000 Anim = BoardIdle
            JUMP 0x1b000000 Anim = BoardMove
            JUMP 0x0b000000 Anim = BoardLook
            Blendperiod = 0.0

#00000      IF CurrentSkaterProfileIs 0
#00000        IF AnimEquals BoardMove
#00000        END IF
#00000      END IF
#00000      WaitAnimFinished
#00000    END LOOP
#00000  END FUNCTION

#00000  FUNCTION BoardMove_SFX
#00000    LOOP
#00000      IF FrameIS 30
#00000        PlaySound skater_boarddown vol = 30

#00000      END IF
#00000      IF FrameIS 110
#00000        PlaySound skater_boardup vol = 40

#00000        BREAK

#00000      END IF
#00000      Wait 1 Frame
#00000    END LOOP
#00000  END FUNCTION

#00000  FUNCTION OtherIdle
#00000    PlayAnim Anim = StartIdle
          Cycle Blendperiod = 0.0

#00000  END FUNCTION

#00000  FUNCTION DickIdle
#00000    LOOP
#00000      IF AnimEquals DickBeckon
#00000        PlayAnim Anim = DickIdle
              Blendperiod = 0.0

#00000      ELSE
#00000        PlayAnim RANDOM[3][8; 20; 32]
              Anim = DickIdle
              JUMP 0x1b000000 Anim = DickIdle
              JUMP 0x0b000000 Anim = DickBeckon
              Blendperiod = 0.0

#00000      END IF
#00000      WaitAnimFinished
#00000    END LOOP
#00000  END FUNCTION

#00000  FUNCTION reset_parkeditor_skater
#00000    printf "reset park editor skater"
#00000    MakeSkaterGoto skater = 0
          FreezeSkater
#00000    MakeSkaterGoto skater = 1
          FreezeSkater
#00000  END FUNCTION

#00000  FUNCTION MainMenuCam
#00000    PlaySkaterCamAnim skater = 0
          name = "Cam_Default01"
          play_hold
#00000  END FUNCTION

#00000  FUNCTION MainMenuToOptionsCamAnim
#00000    PlaySkaterCamAnim skater = 0
          name = "Cam_Options01_Anim"
          play_hold
#00000  END FUNCTION

#00000  FUNCTION FrontEndFlash
#00000    DoFlash duration = 1.0
          start_r = 255
          start_g = 255
          start_b = 255
          start_a = 255
          end_r = 255
          end_g = 255
          end_b = 255
          end_a = 0

#00000  END FUNCTION

#00000  FUNCTION OptionsToMainMenuCamAnim
#00000    MoveMenu Id = net_network_setup_menu
          x = 45

#00000    IF istrue ReturnedFromLevelRecords
#00000      Change ReturnedFromLevelRecords = 0

#00000    ELSE
#00000      PlaySkaterCamAnim skater = 0
            name = "Cam_Options01_Back"
            play_hold
#00000    END IF
#00000  END FUNCTION

#00000  FUNCTION MainMenuToPlayer1CamAnim
#00000    PlaySkaterCamAnim skater = 0
          name = "Cam_MainMenu01_Anim"
          play_hold
#00000    EnableSkaterRotation
#00000    SetCurrentSkaterProfile 0
#00000  END FUNCTION

#00000  FUNCTION Player1ToMainMenuCamAnim
#00000    PlaySkaterCamAnim skater = 0
          name = "Cam_MainMenu01_BackAnim"
          play_hold
#00000    ResetSkaterRotation
#00000    DisableSkaterRotation
#00000  END FUNCTION

#00000  FUNCTION LevelSelectToPlayer1CamAnim
#00000    PlaySkaterCamAnim skater = 0
          name = "Cam_LevelSelect01_BackAnim"
          play_hold
#00000  END FUNCTION

#00000  FUNCTION Player1ToLevelSelectCamAnim
#00000    PlaySkaterCamAnim skater = 0
          name = "Cam_LevelSelect01_Anim"
          play_hold
#00000    BuildCassetteMenu
#00000    killspawnedscript name = WaitThenEnableCassettes

#00000    spawnscript WaitThenEnableCassettes Params = NULL

#00000  END FUNCTION

#00000  FUNCTION Player1ToPlayer2CamAnim
#00000    PlaySkaterCamAnim skater = 0
          name = "Cam_MainMenu02_Anim"
          play_hold
#00000    ResetSkaterRotation
#00000  END FUNCTION

#00000  FUNCTION Player2ToPlayer1CamAnim
#00000    PlaySkaterCamAnim skater = 0
          name = "Cam_MainMenu02_BackAnim"
          play_hold
#00000    ResetSkaterRotation
#00000  END FUNCTION

#00000  FUNCTION Player2ToLevelSelectCamAnim
#00000    PlaySkaterCamAnim skater = 0
          name = "Cam_LevelSelect02_Anim"
          play_hold
#00000    BuildCassetteMenu
#00000    killspawnedscript name = WaitThenEnableCassettes

#00000    spawnscript WaitThenEnableCassettes
#00000    DisableSkaterRotation
#00000  END FUNCTION

#00000  FUNCTION LevelSelectToPlayer2CamAnim
#00000    PlaySkaterCamAnim skater = 0
          name = "Cam_LevelSelect02_BackAnim"
          play_hold
#00000    ResetSkaterRotation
#00000    EnableSkaterRotation
#00000  END FUNCTION

#00000  FUNCTION Player1ToBoardShopCamAnim
#00000    PlaySkaterCamAnim skater = 0
          name = "Cam_BoardSelect01_Anim"
          play_hold
#00000  END FUNCTION

#00000  FUNCTION BoardShopToPlayer1CamAnim
#00000    PlaySkaterCamAnim skater = 0
          name = "Cam_BoardSelect01_BackAnim"
          play_hold
#00000  END FUNCTION

#00000  FUNCTION Player2ToBoardShopCamAnim
#00000    PlaySkaterCamAnim skater = 0
          name = "Cam_BoardSelect02_Anim"
          play_hold
#00000  END FUNCTION

#00000  FUNCTION BoardShopToPlayer2CamAnim
#00000    PlaySkaterCamAnim skater = 0
          name = "Cam_BoardSelect02_BackAnim"
          play_hold
#00000  END FUNCTION

#00000  FUNCTION WaitThenEnableCassettes
#00000    DisableSkaterRotation
#00000    PollUntilFinished func = SkaterCamAnimHeld
          skater = 0

#00000    IF menuisshown cassette_menu
#00000      FireMenuEvent Type = MAKECASSETTESFANOUT
            Id = cassette_menu
            target = cassette_menu

#00000    END IF
#00000  END FUNCTION

#00000  ShouldShowCareerInfo = 1

#00000  AutoLinkToCareerScreen = 0

#00000  FUNCTION SetCareerMode
#00000    SetNetworkMode
#00000    SetGameType Career
#00000    MainMenuToPlayer1CamAnim
#00000    Change ShouldShowCareerInfo = 1

#00000  END FUNCTION

#00000  FUNCTION SetSingleSessionMode
#00000    SetNetworkMode
#00000    SetGameType SingleSession
#00000    MainMenuToPlayer1CamAnim
#00000    Change ShouldShowCareerInfo = 0

#00000  END FUNCTION

#00000  FUNCTION SetFreeSkateMode
#00000    SetNetworkMode
#00000    SetGameType FreeSkate
#00000    MainMenuToPlayer1CamAnim
#00000    Change ShouldShowCareerInfo = 0

#00000  END FUNCTION

#00000  FUNCTION SetFreeSkate2pMode
#00000    SetNetworkMode
#00000    SetGameType FreeSkate2p
#00000    MainMenuToPlayer1CamAnim
#00000    Change ShouldShowCareerInfo = 0

#00000    SetSkaterRotationPad 0
#00000    SyncPlayer2Profile
#00000  END FUNCTION

#00000  FUNCTION SetNetworkPlayMode
#00000    test_network_settings
#00000    Change ShouldShowCareerInfo = 0

#00000  END FUNCTION

#00000  FUNCTION Player1ToPlayer2
#00000    Player1ToPlayer2CamAnim
#00000    SetFrontEndPad 1
#00000    SetSkaterRotationPad 1
#00000    SetCurrentSkaterProfile 1
#00000    SliderShow
#00000    reload_cas
#00000  END FUNCTION

#00000  FUNCTION Player2ToPlayer1
#00000    Player2ToPlayer1CamAnim
#00000    SetFrontEndPad 0
#00000    SetSkaterRotationPad 0
#00000    SetCurrentSkaterProfile 0
#00000    SliderHide
#00000  END FUNCTION

#00000  FUNCTION Player2ToLevelSelect
#00000    UseBothPadsInFrontEnd
#00000    Player2ToLevelSelectCamAnim
#00000  END FUNCTION

#00000  FUNCTION Player1ToBoardshop
#00000    Player1ToBoardShopCamAnim
#00000    MakeSkaterGoto MoveToCounter skater = 0

#00000  END FUNCTION

#00000  FUNCTION Player2ToBoardshop
#00000    Player2ToBoardShopCamAnim
#00000    MakeSkaterGoto MoveToCounter skater = 1

#00000  END FUNCTION

#00000  FUNCTION Player1ToChangeAppearance
#00000    SetCurrentSkaterProfile 0
#00000  END FUNCTION

#00000  FUNCTION Player2ToChangeAppearance
#00000    SetCurrentSkaterProfile 1
#00000  END FUNCTION

#00000  FUNCTION TutorialLaunch
#00000    SetNetworkMode
#00000    SetGameType FreeSkate
#00000    SetCurrentGameType
#00000    SetCurrentSkaterProfile 0
#00000    LevelSelectStartGame level = Load_Tut

#00000  END FUNCTION

#00000  FUNCTION ParkEditorLaunch
#00000    SetFrontEndPad 0
#00000    SetNetworkMode
#00000    AutoLaunch level = custom_park
          game = parkeditor

#00000  END FUNCTION

#00000  FUNCTION player_one_menu_on_show
#00000    SetFrontEndPad 0
#00000    SliderShow
#00000  END FUNCTION

#00000  FUNCTION player_two_menu_on_show
#00000    update_pro_display_info NULL
#00000    SliderShow
#00000  END FUNCTION

#00000  FUNCTION frontend_menu_on_show
#00000    IF CD
#00000      DestroyElement Id = mainmenu_debug

#00000    END IF
#00000    UseBothPadsInFrontEnd
#00000    SetSkaterRotationPad Both
#00000  END FUNCTION

#00000  FUNCTION CareerMenuBack
#00000    Player1ToMainMenuCamAnim
#00000  END FUNCTION

#00000  FUNCTION free_skate_menu_on_show
#00000    update_pro_display_info NULL
#00000    SliderShow
#00000  END FUNCTION

#00000  FUNCTION MenuQuitGame
#00000    QuitGame
#00000  END FUNCTION

#00000  FUNCTION single_session_menu_on_show
#00000    update_pro_display_info NULL
#00000    SliderShow
#00000  END FUNCTION

#00000  FUNCTION invokeUIScreen
#00000    InvokeScreen NULL
#00000  END FUNCTION

#00000  FUNCTION get_version_number
#00000    GetVersionNumber NULL
#00000  END FUNCTION

#00000  FUNCTION main_menu_create
#00000    CreateAndAttachMenu STRUCT{
            Type = verticalmenu
            Id = frontend_menu
            parent = contain1
            x = 45.0
            y = 90.0
            w = 300.0
            h = 400.0
            just_center_x just_center_y blue_top eventhandler = STRUCT{
              Type = showeventhandler
              target = "frontend_menu_on_show"
              }
            children = ARRAY(

              STRUCT{
                Type = textmenuelement
                auto_id text = "Main Menu"
                static dont_gray drawer = title
                dont_gray }
              STRUCT{
                Type = textmenuelement
                auto_id text = "Career"
                link = career_menu
                target = "SetCareerMode"
                }
              STRUCT{
                Type = textmenuelement
                auto_id text = "Single Session"
                link = single_session_menu
                target = "SetSingleSessionMode"
                }
              STRUCT{
                Type = textmenuelement
                auto_id text = "Free Skate"
                link = free_skate_menu
                target = "SetFreeSkateMode"
                }
              STRUCT{
                Type = textmenuelement
                Id = network_play_option
                text = "Network Play"
                target = "SetNetworkPlayMode"
                }
              STRUCT{
                Type = textmenuelement
                auto_id text = "Create-a-Skater"
                link = pre_cas_main_menu
                target = "link_to_cas"
                }
              STRUCT{
                Type = textmenuelement
                auto_id text = "Park Editor"
                target = "ParkEditorLaunch"
                }
              STRUCT{
                Type = textmenuelement
                auto_id text = "Tutorials"
                target = "TutorialLaunch"
                }
              STRUCT{
                Type = textmenuelement
                auto_id text = "Options"
                target = "MainMenuToOptionsCamAnim"
                link = options_main_menu
                }
              STRUCT{
                Type = textmenuelement
                auto_id text = " "
                x = -45.0
                y = 330.0
                w = 200
                drawer = keyboard_property
                static dont_gray just_left_x dontdrawrect lock_layout lock_width eventhandler = STRUCT{
                  Type = showeventhandler
                  target = "get_version_number"
                  }
                }
              STRUCT{
                Type = textmenuelement
                auto_id text = "Quit"
                link = menuquitgame_yesno_menu
                }
              STRUCT{
                Type = textmenuelement
                Id = mainmenu_debug
                text = "Debug"
                link = debug_main_menu
                }

            )
            }

#00000    CreateAndAttachMenu STRUCT{
            Type = verticalmenu
            Id = menuquitgame_yesno_menu
            x = 170.0
            y = 150.0
            w = 300.0
            h = 336.0
            just_center_x just_center_y blue_top eventhandler = STRUCT{
              Type = showeventhandler
              target = "Select_no"
              }
            parent = contain1
            children = ARRAY(

              STRUCT{
                Type = textmenuelement
                auto_id text = "Quit?"
                static dont_gray drawer = title
                }
              STRUCT{
                Type = textmenuelement
                Id = quit_yes
                text = "Yes"
                target = "MenuQuitGame"
                }
              STRUCT{
                Type = textmenuelement
                Id = quit_no
                text = "No"
                link = frontend_menu
                }

            )
            }

#00000    createmenu STRUCT{
            Type = verticalmenu
            Id = player_one_menu
            x = 45.0
            y = 90.0
            w = 300.0
            h = 400.0
            just_center_x just_center_y blue_top eventhandlers = ARRAY(

              STRUCT{
                Type = backeventhandler
                target = "Player1ToMainMenuCamAnim"
                }
              STRUCT{
                Type = showeventhandler
                target = "player_one_menu_on_show"
                }
              STRUCT{
                Type = showeventhandler
                target = "update_pro_display_info"
                Params = STRUCT{
                  name_menu_item = pro_current_name_player_one
                  }
                }
              STRUCT{
                Type = hideeventhandler
                target = "SliderHide"
                }

            )
            children = ARRAY(

              STRUCT{
                Type = textmenuelement
                auto_id text = "Player 1"
                static dont_gray drawer = title
                dont_gray }
              STRUCT{
                Type = textmenuelement
                auto_id text = "Continue"
                link = player_two_menu
                target = "Player1ToPlayer2"
                }
              STRUCT{
                Type = textmenuelement
                auto_id text = "Change Appearance"
                link = cas_menu_container
                target = "Player1ToChangeAppearance"
                }
              STRUCT{
                Type = textmenuelement
                auto_id text = "Change Board"
                link = boardshop_menu
                target = "Player1ToBoardshop"
                }
              STRUCT{
                Type = textmenuelement
                auto_id text = "Edit Tricks"
                link = trick_menu_container
                }
              STRUCT{
                Type = textmenuelement
                auto_id text = "-------"
                static }
              STRUCT{
                Type = textmenuelement
                auto_id text = "Choose Skater"
                link = pro_menu
                }
              STRUCT{
                Type = textmenuelement
                auto_id text = "Load Skater"
                target = "_Player1LoadCAS"
                }

            )
            }

#00000    createmenu STRUCT{
            Type = verticalmenu
            Id = player_two_menu
            x = 295.0
            y = 90.0
            w = 300.0
            h = 400.0
            just_center_x just_center_y blue_top eventhandlers = ARRAY(

              STRUCT{
                Type = backeventhandler
                target = "Player2ToPlayer1"
                }
              STRUCT{
                Type = showeventhandler
                target = "player_two_menu_on_show"
                Params = STRUCT{
                  name_menu_item = pro_current_name_player_two
                  }
                }
              STRUCT{
                Type = hideeventhandler
                target = "SliderHide"
                }

            )
            children = ARRAY(

              STRUCT{
                Type = textmenuelement
                auto_id text = "Player 2"
                static dont_gray drawer = title
                dont_gray }
              STRUCT{
                Type = textmenuelement
                auto_id text = "Continue"
                link = cassette_menu
                target = "Player2ToLevelSelect"
                }
              STRUCT{
                Type = textmenuelement
                auto_id text = "Change Appearance"
                link = cas_menu_container
                target = "Player2ToChangeAppearance"
                }
              STRUCT{
                Type = textmenuelement
                auto_id text = "Change Board"
                link = boardshop_menu
                target = "Player2ToBoardshop"
                }
              STRUCT{
                Type = textmenuelement
                auto_id text = "Edit Tricks"
                link = trick_menu_container
                }
              STRUCT{
                Type = textmenuelement
                auto_id text = "-------"
                static }
              STRUCT{
                Type = textmenuelement
                auto_id text = "Choose Skater"
                link = pro_menu
                }
              STRUCT{
                Type = textmenuelement
                auto_id text = "Load Skater"
                target = "_Player2LoadCAS"
                }

            )
            }

#00000    createmenu STRUCT{
            Type = verticalmenu
            Id = career_menu
            x = 45.0
            y = 90.0
            w = 300.0
            h = 400.0
            just_center_x just_center_y blue_top eventhandlers = ARRAY(

              STRUCT{
                Type = backeventhandler
                target = "CareerMenuBack"
                }
              STRUCT{
                Type = showeventhandler
                target = "CareerMenuShow"
                }
              STRUCT{
                Type = hideeventhandler
                target = "CareerMenuBackOut"
                }
              STRUCT{
                Type = showeventhandler
                target = "update_pro_display_info"
                Params = STRUCT{
                  name_menu_item = pro_current_name_career
                  }
                }

            )
            children = ARRAY(

              STRUCT{
                Type = textmenuelement
                auto_id text = "Career"
                static dont_gray drawer = title
                }
              STRUCT{
                Type = textmenuelement
                auto_id text = "Play Level"
                link = cassette_menu
                target = "Player1ToLevelSelectCamAnim"
                }
              STRUCT{
                Type = textmenuelement
                auto_id text = "Change Appearance"
                link = cas_menu_container
                target = "Player1ToChangeAppearance"
                }
              STRUCT{
                Type = textmenuelement
                auto_id text = "Change Board"
                link = boardshop_menu
                target = "Player1ToBoardshop"
                }
              STRUCT{
                Type = textmenuelement
                auto_id text = "Edit Tricks"
                link = trick_menu_container
                }
              STRUCT{
                Type = textmenuelement
                auto_id text = "-------"
                static }
              STRUCT{
                Type = textmenuelement
                auto_id text = "Choose Skater"
                link = pro_menu
                }
              STRUCT{
                Type = textmenuelement
                auto_id text = "Load Skater"
                target = "_CareerMenuLoadCAS"
                }
              STRUCT{
                Type = textmenuelement
                auto_id text = "Done"
                target = "go_back"
                Params = STRUCT{
                  Id = career_menu
                  }
                }

            )
            }

#00000    IF istrue run_viewer
#00000      createmenu STRUCT{
              Type = verticalmenu
              Id = single_session_menu
              x = 45.0
              y = 90.0
              w = 300.0
              h = 400.0
              just_center_x just_center_y blue_top eventhandlers = ARRAY(

                STRUCT{
                  Type = backeventhandler
                  target = "Player1ToMainMenuCamAnim"
                  }
                STRUCT{
                  Type = showeventhandler
                  target = "update_pro_display_info"
                  Params = STRUCT{
                    name_menu_item = pro_current_name_single_session
                    }
                  }

              )
              children = ARRAY(

                STRUCT{
                  Type = textmenuelement
                  auto_id text = "Session"
                  static dont_gray drawer = title
                  }
                STRUCT{
                  Type = textmenuelement
                  auto_id text = "Play Level"
                  link = level_main_menu
                  }
                STRUCT{
                  Type = textmenuelement
                  auto_id text = "Change Appearance"
                  link = cas_menu_container
                  target = "Player1ToChangeAppearance"
                  }
                STRUCT{
                  Type = textmenuelement
                  auto_id text = "Change Board"
                  link = boardshop_menu
                  target = "Player1ToBoardshop"
                  }
                STRUCT{
                  Type = textmenuelement
                  auto_id text = "Edit Tricks"
                  link = trick_menu_container
                  }
                STRUCT{
                  Type = textmenuelement
                  auto_id text = "-------"
                  static }
                STRUCT{
                  Type = textmenuelement
                  auto_id text = "Choose Skater"
                  link = pro_menu
                  }
                STRUCT{
                  Type = textmenuelement
                  auto_id text = "Load Skater"
                  target = "_SingleSessionLoadCAS"
                  }
                STRUCT{
                  Type = textmenuelement
                  auto_id text = "Done"
                  target = "go_back"
                  Params = STRUCT{
                    Id = single_session_menu
                    }
                  }

              )
              }

#00000    ELSE
#00000      createmenu STRUCT{
              Type = verticalmenu
              Id = single_session_menu
              x = 45.0
              y = 90.0
              w = 300.0
              h = 400.0
              just_center_x just_center_y blue_top eventhandlers = ARRAY(

                STRUCT{
                  Type = backeventhandler
                  target = "Player1ToMainMenuCamAnim"
                  }
                STRUCT{
                  Type = showeventhandler
                  target = "single_session_menu_on_show"
                  Params = STRUCT{
                    name_menu_item = pro_current_name_single_session
                    }
                  }
                STRUCT{
                  Type = hideeventhandler
                  target = "SliderHide"
                  }

              )
              children = ARRAY(

                STRUCT{
                  Type = textmenuelement
                  auto_id text = "Session"
                  static dont_gray drawer = title
                  }
                STRUCT{
                  Type = textmenuelement
                  auto_id text = "Play Level"
                  link = cassette_menu
                  target = "Player1ToLevelSelectCamAnim"
                  }
                STRUCT{
                  Type = textmenuelement
                  auto_id text = "Change Appearance"
                  link = cas_menu_container
                  target = "Player1ToChangeAppearance"
                  }
                STRUCT{
                  Type = textmenuelement
                  auto_id text = "Change Board"
                  link = boardshop_menu
                  target = "Player1ToBoardshop"
                  }
                STRUCT{
                  Type = textmenuelement
                  auto_id text = "Edit Tricks"
                  link = trick_menu_container
                  }
                STRUCT{
                  Type = textmenuelement
                  auto_id text = "-------"
                  static }
                STRUCT{
                  Type = textmenuelement
                  auto_id text = "Choose Skater"
                  link = pro_menu
                  }
                STRUCT{
                  Type = textmenuelement
                  auto_id text = "Load Skater"
                  target = "_SingleSessionLoadCAS"
                  }
                STRUCT{
                  Type = textmenuelement
                  auto_id text = "Done"
                  target = "go_back"
                  Params = STRUCT{
                    Id = single_session_menu
                    }
                  }

              )
              }

#00000    END IF
#00000    IF istrue run_viewer
#00000      createmenu STRUCT{
              Type = verticalmenu
              Id = free_skate_menu
              x = 45.0
              y = 90.0
              w = 300.0
              h = 400.0
              just_center_x just_center_y blue_top eventhandlers = ARRAY(

                STRUCT{
                  Type = backeventhandler
                  target = "Player1ToMainMenuCamAnim"
                  }
                STRUCT{
                  Type = showeventhandler
                  target = "update_pro_display_info"
                  Params = STRUCT{
                    name_menu_item = pro_current_name_free_skate
                    }
                  }

              )
              children = ARRAY(

                STRUCT{
                  Type = textmenuelement
                  auto_id text = "Free Skate"
                  static dont_gray drawer = title
                  }
                STRUCT{
                  Type = textmenuelement
                  auto_id text = "Play Level"
                  link = level_main_menu
                  }
                STRUCT{
                  Type = textmenuelement
                  auto_id text = "Change Appearance"
                  link = cas_menu_container
                  target = "Player1ToChangeAppearance"
                  }
                STRUCT{
                  Type = textmenuelement
                  auto_id text = "Change Board"
                  link = boardshop_menu
                  target = "Player1ToBoardshop"
                  }
                STRUCT{
                  Type = textmenuelement
                  auto_id text = "Edit Tricks"
                  link = trick_menu_container
                  }
                STRUCT{
                  Type = textmenuelement
                  auto_id text = "-------"
                  static }
                STRUCT{
                  Type = textmenuelement
                  auto_id text = "Choose Skater"
                  link = pro_menu
                  }
                STRUCT{
                  Type = textmenuelement
                  auto_id text = "Load Skater"
                  target = "_FreeSkateLoadCAS"
                  }
                STRUCT{
                  Type = textmenuelement
                  auto_id text = "Done"
                  target = "go_back"
                  Params = STRUCT{
                    Id = free_skate_menu
                    }
                  }

              )
              }

#00000    ELSE
#00000      createmenu STRUCT{
              Type = verticalmenu
              Id = free_skate_menu
              x = 45.0
              y = 90.0
              w = 300.0
              h = 400.0
              just_center_x just_center_y blue_top eventhandlers = ARRAY(

                STRUCT{
                  Type = backeventhandler
                  target = "Player1ToMainMenuCamAnim"
                  }
                STRUCT{
                  Type = showeventhandler
                  target = "free_skate_menu_on_show"
                  Params = STRUCT{
                    name_menu_item = pro_current_name_free_skate
                    }
                  }
                STRUCT{
                  Type = hideeventhandler
                  target = "SliderHide"
                  }

              )
              children = ARRAY(

                STRUCT{
                  Type = textmenuelement
                  auto_id text = "Free Skate"
                  static dont_gray drawer = title
                  }
                STRUCT{
                  Type = textmenuelement
                  auto_id text = "Play Level"
                  link = cassette_menu
                  target = "Player1ToLevelSelectCamAnim"
                  }
                STRUCT{
                  Type = textmenuelement
                  auto_id text = "Change Appearance"
                  link = cas_menu_container
                  target = "Player1ToChangeAppearance"
                  }
                STRUCT{
                  Type = textmenuelement
                  auto_id text = "Change Board"
                  link = boardshop_menu
                  target = "Player1ToBoardshop"
                  }
                STRUCT{
                  Type = textmenuelement
                  auto_id text = "Edit Tricks"
                  link = trick_menu_container
                  }
                STRUCT{
                  Type = textmenuelement
                  auto_id text = "-------"
                  static }
                STRUCT{
                  Type = textmenuelement
                  auto_id text = "Choose Skater"
                  link = pro_menu
                  }
                STRUCT{
                  Type = textmenuelement
                  auto_id text = "Load Skater"
                  target = "_FreeSkateLoadCAS"
                  }
                STRUCT{
                  Type = textmenuelement
                  auto_id text = "Done"
                  target = "go_back"
                  Params = STRUCT{
                    Id = free_skate_menu
                    }
                  }

              )
              }

#00000    END IF
#00000    createmenu STRUCT{
            Type = verticalmenu
            Id = load_career_menu
            x = 45.0
            y = 90.0
            w = 300.0
            h = 400.0
            just_center_x just_center_y blue_top children = ARRAY(

              STRUCT{
                Type = textmenuelement
                auto_id text = "Load Skater"
                static dont_gray drawer = title
                }
              STRUCT{
                Type = textmenuelement
                auto_id text = "Tony Hawk 1"
                }
              STRUCT{
                Type = textmenuelement
                auto_id text = "Tony Hawk 2"
                }
              STRUCT{
                Type = textmenuelement
                auto_id text = "Rune Glifberg"
                }
              STRUCT{
                Type = textmenuelement
                auto_id text = "Created 1"
                }
              STRUCT{
                Type = textmenuelement
                auto_id text = "Created 2"
                }

            )
            }

#00000    createmenu STRUCT{
            Type = verticalmenu
            Id = career_info
            x = 45.0
            y = 290.0
            w = 300.0
            h = 400.0
            just_center_x just_center_y static dont_gray children = ARRAY(

              STRUCT{
                Type = textmenuelement
                Id = career_info_line_1
                text = "Poo poo pants"
                static dont_gray drawer = goals_text
                drawer = title_medium
                truncate_to_width }
              STRUCT{
                Type = textmenuelement
                Id = career_info_line_2
                text = "Goals: 12 of 35"
                static dont_gray drawer = goals_text
                }
              STRUCT{
                Type = horizontalmenu
                Id = career_info_horizontal_menu
                static dont_gray children = ARRAY(

                  STRUCT{
                    Type = textmenuelement
                    Id = career_info_line_3
                    text = "Medals:"
                    static dont_gray drawer = goals_text
                    lock_layout x = 40
                    y = 8
                    }
                  STRUCT{
                    Type = iconmenuelement
                    Id = career_info_rio_medal_1
                    image = "panelsprites\medal_1.png"
                    rectScaleX = 1.3
                    lock_layout x = 120
                    y = 2
                    IconColor_Gold dontdrawrect static dont_gray }
                  STRUCT{
                    Type = iconmenuelement
                    Id = career_info_rio_medal_2
                    image = "panelsprites\medal_2.png"
                    rectScaleX = 1.3
                    lock_layout x = 120
                    y = 2
                    IconColor_Silver dontdrawrect static dont_gray }
                  STRUCT{
                    Type = iconmenuelement
                    Id = career_info_rio_medal_3
                    image = "panelsprites\medal_3.png"
                    rectScaleX = 1.3
                    lock_layout x = 120
                    y = 2
                    IconColor_Bronze dontdrawrect static dont_gray }
                  STRUCT{
                    Type = iconmenuelement
                    Id = career_info_rio_medal_4
                    image = "panelsprites\medal_locked.png"
                    rectScaleX = 1.3
                    lock_layout x = 120
                    y = 2
                    IconColor_NoMedal dontdrawrect static dont_gray }
                  STRUCT{
                    Type = iconmenuelement
                    Id = career_info_si_medal_1
                    image = "panelsprites\medal_1.png"
                    rectScaleX = 1.3
                    lock_layout x = 180
                    y = 2
                    IconColor_Gold dontdrawrect static dont_gray }
                  STRUCT{
                    Type = iconmenuelement
                    Id = career_info_si_medal_2
                    image = "panelsprites\medal_2.png"
                    rectScaleX = 1.3
                    lock_layout x = 180
                    y = 2
                    IconColor_Silver dontdrawrect static dont_gray }
                  STRUCT{
                    Type = iconmenuelement
                    Id = career_info_si_medal_3
                    image = "panelsprites\medal_3.png"
                    rectScaleX = 1.3
                    lock_layout x = 180
                    y = 2
                    IconColor_Bronze dontdrawrect static dont_gray }
                  STRUCT{
                    Type = iconmenuelement
                    Id = career_info_si_medal_4
                    image = "panelsprites\medal_locked.png"
                    rectScaleX = 1.3
                    lock_layout x = 180
                    y = 2
                    IconColor_NoMedal dontdrawrect static dont_gray }
                  STRUCT{
                    Type = iconmenuelement
                    Id = career_info_tokyo_medal_1
                    image = "panelsprites\medal_1.png"
                    rectScaleX = 1.3
                    lock_layout x = 240
                    y = 2
                    IconColor_Gold dontdrawrect static dont_gray }
                  STRUCT{
                    Type = iconmenuelement
                    Id = career_info_tokyo_medal_2
                    image = "panelsprites\medal_2.png"
                    rectScaleX = 1.3
                    lock_layout x = 240
                    y = 2
                    IconColor_Silver dontdrawrect static dont_gray }
                  STRUCT{
                    Type = iconmenuelement
                    Id = career_info_tokyo_medal_3
                    image = "panelsprites\medal_3.png"
                    rectScaleX = 1.3
                    lock_layout x = 240
                    y = 2
                    IconColor_Bronze dontdrawrect static dont_gray }
                  STRUCT{
                    Type = iconmenuelement
                    Id = career_info_tokyo_medal_4
                    image = "panelsprites\medal_locked.png"
                    rectScaleX = 1.3
                    lock_layout x = 240
                    y = 2
                    IconColor_NoMedal dontdrawrect static dont_gray }

                )
                }

            )
            }

#00000    createmenu STRUCT{
            Type = verticalmenu
            Id = slider_info
            x = 45.0
            y = 290.0
            w = 300.0
            h = 400.0
            just_center_x just_center_y children = ARRAY(

              STRUCT{
                Type = textmenuelement
                Id = slider_info_line_1
                text = "Poo poo pants"
                static dont_gray drawer = goals_text
                drawer = title_medium
                truncate_to_width }
              STRUCT{
                Type = textmenuelement
                Id = slider_info_line_2
                text = "Trickstyle: Vert"
                static dont_gray drawer = goals_text
                }
              STRUCT{
                Type = textmenuelement
                Id = slider_info_line_3
                text = "Stance: Goofy"
                static dont_gray drawer = goals_text
                }

            )
            }

#00000    CreateBoardShopMenu
#00000    CreateDeckMenu
#00000    CreateWheelColorMenu
#00000    pre_cas_menu_create
#00000    attachchild parent = contain1
          child = career_menu

#00000    attachchild parent = contain1
          child = single_session_menu

#00000    attachchild parent = contain1
          child = free_skate_menu

#00000    attachchild parent = contain1
          child = load_career_menu

#00000    attachchild parent = contain1
          child = player_one_menu

#00000    attachchild parent = contain1
          child = player_two_menu

#00000    attachchild parent = contain1
          child = boardshop_menu

#00000    attachchild parent = contain1
          child = pre_cas_main_menu

#00000    attachchild parent = contain1
          child = deck_menu

#00000    attachchild parent = contain1
          child = career_info

#00000    attachchild parent = contain1
          child = slider_info

#00000    attachchild parent = contain1
          child = wheel_color_menu

#00000    helper_menu_create
#00000    pro_menu_create
#00000    cassette_menu_create
#00000  END FUNCTION

#00000  FUNCTION LevelSelectBackOut
#00000    ClearCassetteMenu
#00000    IF CurrentSkaterProfileIs 1
#00000      LevelSelectToPlayer2CamAnim
#00000      SetFrontEndPad 1
#00000    ELSE
#00000      LevelSelectToPlayer1CamAnim
#00000    END IF
#00000    ResetSkaterRotation
#00000    EnableSkaterRotation
#00000    InitTVScreensVisibility
#00000  END FUNCTION

#00000  FUNCTION InitTVScreensVisibility
#00000    invisible prefix = "ss_go_TV_"

#00000    visible name = ss_go_TV_THPScreen

#00000  END FUNCTION

#00000  FUNCTION LevelSelectStartGame
#00000    IF CurrentSkaterProfileIs 1
#00000      SetGameType trickattack
#00000      UseBothPadsInFrontEnd
#00000    ELSE
#00000    END IF
#00000    SetCurrentSkaterProfile 0
#00000    SetSkaterRotationPad 0
#00000    immediately_start_game NULL
#00000  END FUNCTION

#00000  ParkEditorCassetteTurnRate = -0.05

#00000  FUNCTION SwitchOffCassetteMenuHeading
#00000    FireMenuEvent Type = HIDE
          Id = cassette_menu_level_name
          target = cassette_menu_level_name

#00000    FireMenuEvent Type = HIDE
          Id = cassette_menu_dummy_line
          target = cassette_menu_dummy_line

#00000  END FUNCTION

#00000  FUNCTION SwitchOnCassetteMenuHeading
#00000    FireMenuEvent Type = SHOW
          Id = cassette_menu_level_name
          target = cassette_menu_level_name

#00000    FireMenuEvent Type = SHOW
          Id = cassette_menu_dummy_line
          target = cassette_menu_dummy_line

#00000  END FUNCTION

#00000  FUNCTION PlayCustomParkFromCassetteMenu
#00000    ClearCassetteMenu
#00000    immediately_start_game NULL
#00000  END FUNCTION

#00000  FUNCTION UpdateParkNameInMenuTitles
#00000    GetParkName
#00000    SetMenuElementText Id = cassette_menu_park_editor_menu_title
          GLOBAL.ParkName

#00000    SetMenuElementText Id = cassette_menu_dummy_line
          GLOBAL.ParkName

#00000  END FUNCTION

#00000  FUNCTION cassette_menu_create
#00000    createmenu STRUCT{
            Type = cassettemenu
            Id = cassette_menu
            eventhandlers = ARRAY(

              STRUCT{
                Type = backeventhandler
                target = "LevelSelectBackOut"
                }
              STRUCT{
                Type = showeventhandler
                target = "UpdateParkNameInMenuTitles"
                }

            )
            AppearanceParams = CassetteMenuParams
            }

#00000    createmenu STRUCT{
            Type = verticalmenu
            Id = cassette_menu_park_editor_menu
            x = 255.0
            y = 50.0
            w = 360.0
            h = 230.0
            just_center_x just_center_y blue_top eventhandler = STRUCT{
              Type = backeventhandler
              target = "SwitchOnCassetteMenuHeading"
              }
            children = ARRAY(

              STRUCT{
                Type = textmenuelement
                Id = cassette_menu_park_editor_menu_title
                text = " "
                static dont_gray drawer = title
                truncate_to_width }
              STRUCT{
                Type = textmenuelement
                auto_id text = "Play Park"
                target = "PlayCustomParkFromCassetteMenu"
                Params = STRUCT{
                  level = custom_park
                  string = "Play custom park"
                  }
                }
              STRUCT{
                Type = textmenuelement
                auto_id text = "Load Custom Park"
                target = "_CassetteMenuParkEditorLoad"
                }
              STRUCT{
                Type = textmenuelement
                auto_id text = "Pre-made parks"
                link = cassette_menu_parked_load_menu
                }
              STRUCT{
                Type = textmenuelement
                auto_id text = "Back"
                target = "go_back"
                Params = STRUCT{
                  Id = cassette_menu_park_editor_menu
                  }
                }

            )
            }

#00000    attachchild parent = contain1
          child = cassette_menu

#00000    attachchild parent = contain1
          child = cassette_menu_park_editor_menu

#00000  END FUNCTION

#00000  FUNCTION _LoadParkFromDisc
#00000    SwitchOffMenu Id = cassette_menu_parked_load_menu

#00000    spawnscript LoadParkFromDisc Params = NULL

#00000  END FUNCTION

#00000  FUNCTION LoadParkFromDisc
#00000    Message_LoadingParkFromDisc
#00000    IF ParkEditorCommand command = accessDisk
            file = GLOBAL.file
            DoNotCleanupAndInitialize
#00000      Message_LoadSuccessful
#00000    ELSE
#00000      Message_LoadParkFromDiscFailed
#00000    END IF
#00000    UpdateParkNameInMenuTitles
#00000    Wait 0.5 seconds
#00000    SwitchToMenu DoNotMakeRoot menu = cassette_menu_park_editor_menu

#00000  END FUNCTION

#00000  FUNCTION ClearCassetteMenu
#00000    DestroyElement Id = cassette_menu_heading

#00000    DestroyElement Id = cassette_menu_goals_left

#00000    DestroyElement Id = cassette_menu_records_1

#00000    DestroyElement Id = cassette_menu_records_2

#00000    DestroyElement Id = cassette_menu_stat_points_text

#00000    DestroyElement Id = cassette_menu_stat_points_pips

#00000    DestroyElement Id = cassette_menu_got_deck_text

#00000    DestroyElement Id = cassette_menu_line_1

#00000    DestroyElement Id = cassette_menu_line_2

#00000    DestroyElement Id = cassette_menu_best_medal_text

#00000    DestroyElement Id = cassette_menu_best_medal_gold

#00000    DestroyElement Id = cassette_menu_best_medal_silver

#00000    DestroyElement Id = cassette_menu_best_medal_bronze

#00000    DestroyElement Id = cassette_menu_best_medal_none

#00000    DestroyElement Id = cassette_menu_parked_load_menu

#00000    DestroyElement Id = cassette_editor

#00000    DestroyElement Id = cassette_foundry

#00000    DestroyElement Id = cassette_canada

#00000    DestroyElement Id = cassette_rio

#00000    DestroyElement Id = cassette_suburbia

#00000    DestroyElement Id = cassette_airport

#00000    DestroyElement Id = cassette_skater_island

#00000    DestroyElement Id = cassette_los_angeles

#00000    DestroyElement Id = cassette_tokyo

#00000    DestroyElement Id = cassette_oil

#00000    DestroyElement Id = cassette_rooftops

#00000    DestroyElement Id = cassette_ship

#00000    DestroyElement Id = cassette_warehouse

#00000    DestroyElement Id = cassette_burnside

#00000    DestroyElement Id = cassette_roswell

#00000  END FUNCTION

#00000  UnlockRequirements =
#00000
        ARRAY(
          STRUCT{
            level = LevelNum_Canada
            3 Goals }
          STRUCT{
            level = LevelNum_Rio
            10 Goals }
          STRUCT{
            level = LevelNum_Suburbia
            1 Medal }
          STRUCT{
            level = LevelNum_Airport
            18 Goals }
          STRUCT{
            level = LevelNum_SkaterIsland
            26 Goals }
          STRUCT{
            level = LevelNum_LA
            2 Medals }
          STRUCT{
            level = LevelNum_Tokyo
            35 Goals }
          STRUCT{
            level = LevelNum_Ship
            3 Medals }

        )

#00000  FUNCTION BuildCassetteMenu
#00000    createmenu STRUCT{
            Type = verticalmenu
            Id = cassette_menu_heading
            x = 280.0
            y = 50.0
            w = 300.0
            h = 230.0
            just_center_x just_center_y blue_top children = ARRAY(

              STRUCT{
                Type = textmenuelement
                Id = cassette_menu_level_name
                text = "Custom Park"
                static dont_gray drawer = title
                }
              STRUCT{
                Type = textmenuelement
                Id = cassette_menu_dummy_line
                text = " "
                static dont_gray drawer = goals_text
                }

            )
            }

#00000    createmenu STRUCT{
            Type = textmenuelement
            Id = cassette_menu_stat_points_text
            text = "Stat points:"
            just_center_x lock_layout static dont_gray drawer = goals_text
            x = 280
            y = 80
            w = 150
            }

#00000    createmenu STRUCT{
            Type = statsmenuelement
            Id = cassette_menu_stat_points_pips
            text = "---"
            implemented_property just_center_x x = 430
            y = 80
            w = 70
            h = 23
            ghosted dont_gray pip_spacing = cas_pip_spacing
            lower = 0
            upper = 5
            start_value = 0
            }

#00000    createmenu STRUCT{
            Type = textmenuelement
            Id = cassette_menu_got_deck_text
            text = "Deck: Yes"
            just_center_x lock_layout x = 500
            y = 80
            w = 80
            h = 23
            static dont_gray drawer = goals_text
            }

#00000    createmenu STRUCT{
            Type = textmenuelement
            Id = cassette_menu_line_1
            text = "Goals completed:"
            static dont_gray drawer = goals_text
            just_center_x x = 280
            y = 103
            w = 150
            }

#00000    createmenu STRUCT{
            Type = textmenuelement
            Id = cassette_menu_line_2
            text = " "
            static dont_gray drawer = goals_text
            just_center_x x = 430
            y = 103
            w = 150
            }

#00000    createmenu STRUCT{
            Type = textmenuelement
            Id = cassette_menu_best_medal_text
            text = "Best medal:"
            static dont_gray drawer = goals_text
            lock_layout just_center_x x = 320
            y = 115
            w = 150
            }

#00000    createmenu STRUCT{
            Type = iconmenuelement
            Id = cassette_menu_best_medal_gold
            image = "panelsprites\medal_1.png"
            rectScaleX = 1.3
            x = 490
            y = 110
            IconColor_Gold dontdrawrect }

#00000    createmenu STRUCT{
            Type = iconmenuelement
            Id = cassette_menu_best_medal_silver
            image = "panelsprites\medal_2.png"
            rectScaleX = 1.3
            x = 490
            y = 110
            IconColor_Silver dontdrawrect }

#00000    createmenu STRUCT{
            Type = iconmenuelement
            Id = cassette_menu_best_medal_bronze
            image = "panelsprites\medal_3.png"
            rectScaleX = 1.3
            x = 490
            y = 110
            IconColor_Bronze dontdrawrect }

#00000    createmenu STRUCT{
            Type = iconmenuelement
            Id = cassette_menu_best_medal_none
            image = "panelsprites\medal_locked.png"
            rectScaleX = 1.3
            x = 490
            y = 110
            IconColor_NoMedal dontdrawrect }

#00000    createmenu STRUCT{
            Type = verticalmenu
            Id = cassette_menu_goals_left
            x = 280.0
            y = 170.0
            w = 296.0
            h = 250.0
            just_center_x just_center_y children = ARRAY(

              STRUCT{
                Type = textmenuelement
                Id = cassette_goals_line_1
                text = "Level is locked !!!"
                static dont_gray drawer = goals_text
                }
              STRUCT{
                Type = textmenuelement
                Id = cassette_goals_line_2
                text = " "
                static dont_gray drawer = goals_text
                }

            )
            }

#00000    createmenu STRUCT{
            x = 280
            y = 80
            w = 300
            just_center_x just_center_y drawer = goals_text
            Type = textmenuelement
            Id = cassette_menu_records_1
            text = "Records:"
            static dont_gray }

#00000    createmenu STRUCT{
            x = 280
            y = 102
            w = 300
            just_center_x just_center_y drawer = goals_text
            Type = textmenuelement
            Id = cassette_menu_records_2
            text = " "
            static dont_gray }

#00000    createmenu STRUCT{
            Type = verticalmenu
            Id = cassette_menu_parked_load_menu
            x = 255.0
            y = 50.0
            w = 360.0
            h = 230.0
            just_center_x just_center_y blue_top children = ARRAY(

              STRUCT{
                Type = textmenuelement
                auto_id text = "Pre-Made Parks"
                static dont_gray drawer = title
                }
              STRUCT{
                Type = scrollingmenu
                auto_id x = 0.0
                y = 0.0
                w = 350.0
                h = 400.0
                just_center_x just_center_y num_visible = 9
                children = ARRAY(

                  STRUCT{
                    Type = textmenuelement
                    Id = parked_load1
                    text = "Park 1"
                    target = "_LoadParkFromDisc"
                    Params = STRUCT{
                      file = 1
                      }
                    }
                  STRUCT{
                    Type = textmenuelement
                    Id = parked_load2
                    text = "Park 2"
                    target = "_LoadParkFromDisc"
                    Params = STRUCT{
                      file = 2
                      }
                    }
                  STRUCT{
                    Type = textmenuelement
                    Id = parked_load3
                    text = "Park 3"
                    target = "_LoadParkFromDisc"
                    Params = STRUCT{
                      file = 3
                      }
                    }
                  STRUCT{
                    Type = textmenuelement
                    Id = parked_load4
                    text = "Park 4"
                    target = "_LoadParkFromDisc"
                    Params = STRUCT{
                      file = 4
                      }
                    }
                  STRUCT{
                    Type = textmenuelement
                    Id = parked_load5
                    text = "Park 5"
                    target = "_LoadParkFromDisc"
                    Params = STRUCT{
                      file = 5
                      }
                    }
                  STRUCT{
                    Type = textmenuelement
                    Id = parked_load6
                    text = "Park 6"
                    target = "_LoadParkFromDisc"
                    Params = STRUCT{
                      file = 6
                      }
                    }
                  STRUCT{
                    Type = textmenuelement
                    Id = parked_load7
                    text = "Park 7"
                    target = "_LoadParkFromDisc"
                    Params = STRUCT{
                      file = 7
                      }
                    }
                  STRUCT{
                    Type = textmenuelement
                    Id = parked_load8
                    text = "Park 8"
                    target = "_LoadParkFromDisc"
                    Params = STRUCT{
                      file = 8
                      }
                    }
                  STRUCT{
                    Type = textmenuelement
                    Id = parked_load9
                    text = "Park 9"
                    target = "_LoadParkFromDisc"
                    Params = STRUCT{
                      file = 9
                      }
                    }
                  STRUCT{
                    Type = textmenuelement
                    Id = parked_load10
                    text = "Park 10"
                    target = "_LoadParkFromDisc"
                    Params = STRUCT{
                      file = 10
                      }
                    }
                  STRUCT{
                    Type = textmenuelement
                    Id = parked_load11
                    text = "Park 11"
                    target = "_LoadParkFromDisc"
                    Params = STRUCT{
                      file = 11
                      }
                    }
                  STRUCT{
                    Type = textmenuelement
                    Id = parked_load12
                    text = "Park 12"
                    target = "_LoadParkFromDisc"
                    Params = STRUCT{
                      file = 12
                      }
                    }
                  STRUCT{
                    Type = textmenuelement
                    Id = parked_load13
                    text = "Park 13"
                    target = "_LoadParkFromDisc"
                    Params = STRUCT{
                      file = 13
                      }
                    }
                  STRUCT{
                    Type = textmenuelement
                    Id = parked_load14
                    text = "Park 14"
                    target = "_LoadParkFromDisc"
                    Params = STRUCT{
                      file = 14
                      }
                    }
                  STRUCT{
                    Type = textmenuelement
                    Id = parked_load15
                    text = "Park 15"
                    target = "_LoadParkFromDisc"
                    Params = STRUCT{
                      file = 15
                      }
                    }
                  STRUCT{
                    Type = textmenuelement
                    Id = parked_load16
                    text = "Park 16"
                    target = "_LoadParkFromDisc"
                    Params = STRUCT{
                      file = 16
                      }
                    }
                  STRUCT{
                    Type = textmenuelement
                    Id = parked_load17
                    text = "Park 17"
                    target = "_LoadParkFromDisc"
                    Params = STRUCT{
                      file = 17
                      }
                    }
                  STRUCT{
                    Type = textmenuelement
                    Id = parked_load18
                    text = "Park 18"
                    target = "_LoadParkFromDisc"
                    Params = STRUCT{
                      file = 18
                      }
                    }
                  STRUCT{
                    Type = textmenuelement
                    Id = parked_load19
                    text = "Park 19"
                    target = "_LoadParkFromDisc"
                    Params = STRUCT{
                      file = 19
                      }
                    }
                  STRUCT{
                    Type = textmenuelement
                    Id = parked_load20
                    text = "Park 20"
                    target = "_LoadParkFromDisc"
                    Params = STRUCT{
                      file = 20
                      }
                    }

                )
                }

            )
            }

#00000    attachchild parent = contain1
          child = cassette_menu_heading

#00000    attachchild parent = contain1
          child = cassette_menu_goals_left

#00000    attachchild parent = contain1
          child = cassette_menu_records_1

#00000    attachchild parent = contain1
          child = cassette_menu_records_2

#00000    attachchild parent = contain1
          child = cassette_menu_stat_points_text

#00000    attachchild parent = contain1
          child = cassette_menu_stat_points_pips

#00000    attachchild parent = contain1
          child = cassette_menu_got_deck_text

#00000    attachchild parent = contain1
          child = cassette_menu_line_1

#00000    attachchild parent = contain1
          child = cassette_menu_line_2

#00000    attachchild parent = contain1
          child = cassette_menu_best_medal_text

#00000    attachchild parent = contain1
          child = cassette_menu_best_medal_gold

#00000    attachchild parent = contain1
          child = cassette_menu_best_medal_silver

#00000    attachchild parent = contain1
          child = cassette_menu_best_medal_bronze

#00000    attachchild parent = contain1
          child = cassette_menu_best_medal_none

#00000    attachchild parent = contain1
          child = cassette_menu_parked_load_menu

#00000    spawnscript PositionStatPips
#00000    SetGlobalFlag flag = LEVEL_UNLOCKED_FOUNDRY

#00000    IF TestRequestedGameType Career
#00000    ELSE
#00000      createmenu STRUCT{
              Type = cassettemenuelement
              Id = cassette_editor
              ModelName = Editor
              TVImageName = ss_go_TV_editor
              LockedTVImageName = ss_go_TV_editor
              LevelName = ''
              LevelNumber = 0
              parkeditor eventhandler = STRUCT{
                Type = ChooseEventHandler
                target = "SwitchOffCassetteMenuHeading"
                link = cassette_menu_park_editor_menu
                }
              }

#00000      attachchild child = cassette_editor
            parent = cassette_menu

#00000    END IF
#00000    createmenu STRUCT{
            Type = cassettemenuelement
            Id = cassette_foundry
            ModelName = Foundry
            TVImageName = ss_go_TV_foundry
            LockedTVImageName = ss_go_TV_foundry_l
            LevelName = 'Foundry'
            LevelNumber = LevelNum_Foundry
            GoalParams = FoundryGoalParams
            eventhandler = STRUCT{
              Type = ChooseEventHandler
              target = "LevelSelectStartGame"
              kill_menu use_loading_screen Params = STRUCT{
                level = Load_Foun
                }
              }
            }

#00000    attachchild child = cassette_foundry
          parent = cassette_menu

#00000    createmenu STRUCT{
            Type = cassettemenuelement
            Id = cassette_canada
            ModelName = Canada
            TVImageName = ss_go_TV_Can
            LockedTVImageName = ss_go_TV_Can_l
            LevelName = 'Canada'
            LevelNumber = LevelNum_Canada
            GlobalFlag = LEVEL_UNLOCKED_CANADA
            GoalParams = CanadaGoalParams
            eventhandler = STRUCT{
              Type = ChooseEventHandler
              target = "LevelSelectStartGame"
              kill_menu use_loading_screen Params = STRUCT{
                level = Load_Can
                }
              }
            }

#00000    attachchild child = cassette_canada
          parent = cassette_menu

#00000    createmenu STRUCT{
            Type = cassettemenuelement
            Id = cassette_rio
            ModelName = Rio
            TVImageName = ss_go_TV_Rio
            LockedTVImageName = ss_go_TV_Rio_l
            LevelName = 'Rio'
            LevelNumber = LevelNum_Rio
            GlobalFlag = LEVEL_UNLOCKED_RIO
            GoalParams = DefaultGoalParams
            CompetitionLevel eventhandler = STRUCT{
              Type = ChooseEventHandler
              target = "LevelSelectStartGame"
              kill_menu use_loading_screen Params = STRUCT{
                level = Load_Rio
                }
              }
            }

#00000    attachchild child = cassette_rio
          parent = cassette_menu

#00000    createmenu STRUCT{
            Type = cassettemenuelement
            Id = cassette_suburbia
            ModelName = Suburbia
            TVImageName = ss_go_TV_Sub
            LockedTVImageName = ss_go_TV_Sub_l
            LevelName = 'Suburbia'
            LevelNumber = LevelNum_Suburbia
            GlobalFlag = LEVEL_UNLOCKED_SUBURBIA
            GoalParams = SuburbiaGoalParams
            eventhandler = STRUCT{
              Type = ChooseEventHandler
              target = "LevelSelectStartGame"
              kill_menu use_loading_screen Params = STRUCT{
                level = Load_Sub
                }
              }
            }

#00000    attachchild child = cassette_suburbia
          parent = cassette_menu

#00000    createmenu STRUCT{
            Type = cassettemenuelement
            Id = cassette_airport
            ModelName = Airport
            TVImageName = ss_go_TV_ap
            LockedTVImageName = ss_go_TV_ap_l
            LevelName = 'Airport'
            LevelNumber = LevelNum_Airport
            GlobalFlag = LEVEL_UNLOCKED_AIRPORT
            GoalParams = AirportGoalParams
            eventhandler = STRUCT{
              Type = ChooseEventHandler
              target = "LevelSelectStartGame"
              kill_menu use_loading_screen Params = STRUCT{
                level = Load_Ap
                }
              }
            }

#00000    attachchild child = cassette_airport
          parent = cassette_menu

#00000    createmenu STRUCT{
            Type = cassettemenuelement
            Id = cassette_skater_island
            ModelName = Skater_Island
            TVImageName = ss_go_TV_si
            LockedTVImageName = ss_go_TV_si_l
            LevelName = 'Skater Island'
            LevelNumber = LevelNum_SkaterIsland
            GlobalFlag = LEVEL_UNLOCKED_SKATERISLAND
            GoalParams = DefaultGoalParams
            CompetitionLevel eventhandler = STRUCT{
              Type = ChooseEventHandler
              target = "LevelSelectStartGame"
              kill_menu use_loading_screen Params = STRUCT{
                level = Load_Si
                }
              }
            }

#00000    attachchild child = cassette_skater_island
          parent = cassette_menu

#00000    createmenu STRUCT{
            Type = cassettemenuelement
            Id = cassette_los_angeles
            ModelName = Los_Angeles
            TVImageName = ss_go_TV_la
            LockedTVImageName = ss_go_TV_la_l
            LevelName = 'Los Angeles'
            LevelNumber = LevelNum_LA
            GlobalFlag = LEVEL_UNLOCKED_LOSANGELES
            GoalParams = LosAngelesGoalParams
            eventhandler = STRUCT{
              Type = ChooseEventHandler
              target = "LevelSelectStartGame"
              kill_menu use_loading_screen Params = STRUCT{
                level = Load_La
                }
              }
            }

#00000    attachchild child = cassette_los_angeles
          parent = cassette_menu

#00000    createmenu STRUCT{
            Type = cassettemenuelement
            Id = cassette_tokyo
            ModelName = Tokyo
            TVImageName = ss_go_TV_tok
            LockedTVImageName = ss_go_TV_tok_l
            LevelName = 'Tokyo'
            LevelNumber = LevelNum_Tokyo
            GlobalFlag = LEVEL_UNLOCKED_TOKYO
            GoalParams = DefaultGoalParams
            CompetitionLevel eventhandler = STRUCT{
              Type = ChooseEventHandler
              target = "LevelSelectStartGame"
              kill_menu use_loading_screen Params = STRUCT{
                level = Load_Tok
                }
              }
            }

#00000    attachchild child = cassette_tokyo
          parent = cassette_menu

#00000    IF istrue AllLevelsUnlocked
#00000      CreateShipCassette
#00000    ELSE
#00000      IF GetGlobalFlag flag = SPECIAL_HAS_SEEN_SHIP

#00000        CreateShipCassette
#00000      END IF
#00000    END IF
#00000    IF TestRequestedGameType Career
#00000    ELSE
#00000      IF istrue AllLevelsUnlocked
#00000        CreateWarehouseCassette
#00000        CreateBurnsideCassette
#00000        CreateRoswellCassette
#00000      ELSE
#00000        IF GetGlobalFlag flag = LEVEL_UNLOCKED_WAREHOUSE

#00000          CreateWarehouseCassette
#00000        END IF
#00000        IF GetGlobalFlag flag = LEVEL_UNLOCKED_BURNSIDE

#00000          CreateBurnsideCassette
#00000        END IF
#00000        IF GetGlobalFlag flag = LEVEL_UNLOCKED_ROSWELL

#00000          CreateRoswellCassette
#00000        END IF
#00000      END IF
#00000    END IF
#00000    IF istrue XBox
#00000      IF TestRequestedGameType Career
#00000      ELSE
#00000        createmenu STRUCT{
                Type = cassettemenuelement
                Id = cassette_oil
                ModelName = Ship
                TVImageName = ss_go_TV_THPScreen
                LockedTVImageName = ss_go_TV_THPScreen
                LevelName = 'Oil Rig'
                GoalParams = DefaultGoalParams
                SpecialLevel LevelNumber = 0
                eventhandler = STRUCT{
                  Type = ChooseEventHandler
                  target = "LevelSelectStartGame"
                  kill_menu use_loading_screen Params = STRUCT{
                    level = Load_Oil
                    }
                  }
                }

#00000        attachchild child = cassette_oil
              parent = cassette_menu

#00000      END IF
#00000    END IF
#00000    IF istrue GameCube
#00000      IF TestRequestedGameType Career
#00000      ELSE
#00000        createmenu STRUCT{
                Type = cassettemenuelement
                Id = cassette_rooftops
                ModelName = Ship
                TVImageName = ss_go_TV_THPScreen
                LockedTVImageName = ss_go_TV_THPScreen
                LevelName = 'Rooftops'
                GoalParams = DefaultGoalParams
                SpecialLevel LevelNumber = 0
                eventhandler = STRUCT{
                  Type = ChooseEventHandler
                  target = "LevelSelectStartGame"
                  kill_menu use_loading_screen Params = STRUCT{
                    level = Load_Roof
                    }
                  }
                }

#00000        attachchild child = cassette_rooftops
              parent = cassette_menu

#00000      END IF
#00000    END IF
#00000  END FUNCTION

#00000  FUNCTION CreateShipCassette
#00000    createmenu STRUCT{
            Type = cassettemenuelement
            Id = cassette_ship
            ModelName = Ship
            TVImageName = ss_go_TV_ship
            LockedTVImageName = ss_go_TV_ship_l
            LevelName = 'Cruise Ship'
            LevelNumber = LevelNum_Ship
            GlobalFlag = LEVEL_UNLOCKED_SHIP
            GoalParams = DefaultGoalParams
            eventhandler = STRUCT{
              Type = ChooseEventHandler
              target = "LevelSelectStartGame"
              kill_menu use_loading_screen Params = STRUCT{
                level = Load_Shp
                }
              }
            }

#00000    attachchild child = cassette_ship
          parent = cassette_menu

#00000  END FUNCTION

#00000  FUNCTION CreateWarehouseCassette
#00000    createmenu STRUCT{
            Type = cassettemenuelement
            Id = cassette_warehouse
            ModelName = Special1_WH
            TVImageName = ss_go_TV_sp1
            LockedTVImageName = ss_go_TV_THPScreen
            LevelName = 'Warehouse'
            LevelNumber = LevelNum_Warehouse
            GlobalFlag = LEVEL_UNLOCKED_WAREHOUSE
            GoalParams = DefaultGoalParams
            SpecialLevel eventhandler = STRUCT{
              Type = ChooseEventHandler
              target = "LevelSelectStartGame"
              kill_menu use_loading_screen Params = STRUCT{
                level = Load_Ware
                }
              }
            }

#00000    attachchild child = cassette_warehouse
          parent = cassette_menu

#00000  END FUNCTION

#00000  FUNCTION CreateBurnsideCassette
#00000    createmenu STRUCT{
            Type = cassettemenuelement
            Id = cassette_burnside
            ModelName = Special2_BS
            TVImageName = ss_go_TV_sp2
            LockedTVImageName = ss_go_TV_THPScreen
            LevelName = 'Burnside'
            LevelNumber = LevelNum_Burnside
            GlobalFlag = LEVEL_UNLOCKED_BURNSIDE
            GoalParams = DefaultGoalParams
            SpecialLevel eventhandler = STRUCT{
              Type = ChooseEventHandler
              target = "LevelSelectStartGame"
              kill_menu use_loading_screen Params = STRUCT{
                level = Load_Burn
                }
              }
            }

#00000    attachchild child = cassette_burnside
          parent = cassette_menu

#00000  END FUNCTION

#00000  FUNCTION CreateRoswellCassette
#00000    createmenu STRUCT{
            Type = cassettemenuelement
            Id = cassette_roswell
            ModelName = Special3_ros
            TVImageName = ss_go_TV_sp3
            LockedTVImageName = ss_go_TV_THPScreen
            LevelName = 'Roswell'
            LevelNumber = LevelNum_Roswell
            GlobalFlag = LEVEL_UNLOCKED_ROSWELL
            GoalParams = DefaultGoalParams
            SpecialLevel eventhandler = STRUCT{
              Type = ChooseEventHandler
              target = "LevelSelectStartGame"
              kill_menu use_loading_screen Params = STRUCT{
                level = Load_Ros
                }
              }
            }

#00000    attachchild child = cassette_roswell
          parent = cassette_menu

#00000  END FUNCTION

#00000  FUNCTION PositionStatPips
#00000    MoveMenu Id = cassette_menu_stat_points_pips
          x = 430
          y = 80
          w = 70
          h = 23

#00000  END FUNCTION

#00000  CassetteMenuParams =
#00000
        STRUCT{
          SourceNodeName = TRG_Videxplode
          NumFramesToFanOut = 20
          FanOutPause = 1
          NumFramesToFanIn = 20
          FanInPause = 1
          NumVisible = 6
          XSeparation = 90
          NumFramesToMoveSideways = 10
          YCoord = 330
          UnselectedZ = 40
          SelectedZ = 20
          NumFramesToFlip = 50
          BigX = 320
          BigY = 240
          BigZ = 5
          NumFramesToGetBig = 20
          }

#00000  GoalInfoTopY = 60

#00000  GoalInfoDY = 35

#00000  FUNCTION CareerMenuShow
#00000    IF menuisshown pro_menu
#00000    ELSE
#00000      MakeMenuPopOffScreen Id = career_info
            Left
#00000    END IF
#00000    FireMenuEvent Type = SHOW
          Id = career_info
          target = career_info

#00000    FireMenuEvent Type = HIDE
          Id = career_info_rio_medal_1
          target = career_info_rio_medal_1

#00000    FireMenuEvent Type = HIDE
          Id = career_info_rio_medal_2
          target = career_info_rio_medal_2

#00000    FireMenuEvent Type = HIDE
          Id = career_info_rio_medal_3
          target = career_info_rio_medal_3

#00000    FireMenuEvent Type = HIDE
          Id = career_info_rio_medal_4
          target = career_info_rio_medal_4

#00000    FireMenuEvent Type = HIDE
          Id = career_info_si_medal_1
          target = career_info_si_medal_1

#00000    FireMenuEvent Type = HIDE
          Id = career_info_si_medal_2
          target = career_info_si_medal_2

#00000    FireMenuEvent Type = HIDE
          Id = career_info_si_medal_3
          target = career_info_si_medal_3

#00000    FireMenuEvent Type = HIDE
          Id = career_info_si_medal_4
          target = career_info_si_medal_4

#00000    FireMenuEvent Type = HIDE
          Id = career_info_tokyo_medal_1
          target = career_info_tokyo_medal_1

#00000    FireMenuEvent Type = HIDE
          Id = career_info_tokyo_medal_2
          target = career_info_tokyo_medal_2

#00000    FireMenuEvent Type = HIDE
          Id = career_info_tokyo_medal_3
          target = career_info_tokyo_medal_3

#00000    FireMenuEvent Type = HIDE
          Id = career_info_tokyo_medal_4
          target = career_info_tokyo_medal_4

#00000    UpdateCareerInfoMenu
#00000    spawnscript MaybeWhizz
#00000  END FUNCTION

#00000  FUNCTION MaybeWhizz
#00000    IF ControllerPressed Left
#00000      MoveMenu Id = career_info
            x = 45

#00000    ELSE
#00000      IF ControllerPressed Right
#00000        MoveMenu Id = career_info
              x = 45

#00000      ELSE
#00000        MakeMenuZoomOn Id = career_info
              FromLeft
#00000      END IF
#00000    END IF
#00000  END FUNCTION

#00000  FUNCTION CareerMenuBackOut
#00000    FireMenuEvent Type = HIDE
          Id = career_info
          target = career_info

#00000  END FUNCTION

#00000  FUNCTION SetDefaultSliderPos
#00000    IF CurrentSkaterProfileIs 1
#00000      MoveMenu Id = slider_info
            x = 295

#00000    ELSE
#00000      MoveMenu Id = slider_info
            x = 45

#00000    END IF
#00000  END FUNCTION

#00000  FUNCTION SliderShow
#00000    SetDefaultSliderPos
#00000    IF menuisshown pro_menu
#00000    ELSE
#00000      IF CurrentSkaterProfileIs 1
#00000        MakeMenuPopOffScreen Id = slider_info
              Right
#00000      ELSE
#00000        MakeMenuPopOffScreen Id = slider_info
              Left
#00000      END IF
#00000    END IF
#00000    FireMenuEvent Type = SHOW
          Id = slider_info
          target = slider_info

#00000    UpdateSliderInfoMenu
#00000    spawnscript SliderMaybeWhizz
#00000  END FUNCTION

#00000  FUNCTION SliderMaybeWhizz
#00000    IF ControllerPressed Left
#00000      SetDefaultSliderPos
#00000    ELSE
#00000      IF ControllerPressed Right
#00000        SetDefaultSliderPos
#00000      ELSE
#00000        IF CurrentSkaterProfileIs 1
#00000          MakeMenuPopOffScreen Id = slider_info
                Right
#00000          MakeMenuZoomOn Id = slider_info
                FromRight
#00000        ELSE
#00000          MakeMenuZoomOn Id = slider_info
                FromLeft
#00000        END IF
#00000      END IF
#00000    END IF
#00000  END FUNCTION

#00000  FUNCTION SliderHide
#00000    FireMenuEvent Type = HIDE
          Id = slider_info
          target = slider_info

#00000  END FUNCTION

#00000  TotalGoals = 54

#00000  IconColor_Gold = STRUCT{
          r = 234
          g = 190
          b = 92
          a = 115
          }

#00000  IconColor_Silver = STRUCT{
          r = 167
          g = 225
          b = 236
          a = 115
          }

#00000  IconColor_Bronze = STRUCT{
          r = 118
          g = 72
          b = 21
          a = 115
          }

#00000  IconColor_NoMedal = STRUCT{
          r = 67
          g = 125
          b = 176
          a = 115
          }

#00000  LeftArrowIconElement = STRUCT{
          Type = iconmenuelement
          image = "panelsprites\arrow_menu.png"
          rotate = -90
          x = 350.0
          y = 180.0
          lock_layout dontdrawrect dont_gray r = 255
          g = 255
          b = 255
          a = 115
          }

#00000  RightArrowIconElement = STRUCT{
          Type = iconmenuelement
          image = "panelsprites\arrow_menu.png"
          rotate = 90
          x = 530.0
          y = 180.0
          lock_layout dontdrawrect dont_gray r = 255
          g = 255
          b = 255
          a = 115
          }

#00000  FUNCTION attach_back_button
#00000    CreateAndAttachMenu STRUCT{
            Type = textmenuelement
            auto_id parent = GLOBAL.menu_id
            text = "Back"
            target = "go_back"
            Params = STRUCT{
              Id = GLOBAL.menu_id
              }
            }

#00000  END FUNCTION

#00000
