
#00001  load_icon_properties = STRUCT{
          x = 50.0
          y = 50.0
          anim_delay = 16
          images = ARRAY(

            "images/panelsprites/wheel_001.png" "images/panelsprites/wheel_002.png" "images/panelsprites/wheel_003.png" "images/panelsprites/wheel_004.png" "images/panelsprites/wheel_005.png" "images/panelsprites/wheel_006.png"
          )
          }

#00016  game_menu_properties = STRUCT{
          x = 150.0
          y = 90.0
          w = 320.0
          h = 336.0
          just_center_x just_center_y }

#00022  EnteringStatsMenuFromGameFlow = 0

#00024  FUNCTION PauseMusicAndStreams
#00026    PauseMusic 1
#00028    PauseStream 1
#00029  END FUNCTION

#00030  FUNCTION UnPauseMusicAndStreams
#00032    PauseMusic 0
#00034    PauseStream 0
#00035  END FUNCTION

#00036  FUNCTION do_backend_retry
#00038    SpawnScript do_screen_freeze
#00042  END FUNCTION

#00044  FUNCTION do_screen_freeze
#00046    PauseGame
#00047    IF InNetGame
#00048      StartNetworkLobby
#00049    END IF
#00050    Wait 2 gameframe
#00051    DisplayLoadingScreen CurrentScreen
#00052    unpausegame
#00053    retry
#00054  END FUNCTION

#00055  FUNCTION do_backend_end_run
#00056    IF InSplitScreenGame
#00057      UseBothPadsInFrontEnd
#00058    END IF
#00059    EndRun
#00060  END FUNCTION

#00061  FUNCTION Paused_menu_backevent
#00063    IF CareerLevelIs LevelNum_Tutorials
#00064      PauseStream 0
#00065    ELSE
#00066      UnPauseMusicAndStreams
#00067    END IF
#00068  END FUNCTION

#00069  FUNCTION do_backend_continue
#00072    IF CareerLevelIs LevelNum_Tutorials
#00073      PauseStream 0
#00074    ELSE
#00075      UnPauseMusicAndStreams
#00076    END IF
#00078  END FUNCTION

#00081  FUNCTION do_backend_continue_delay
#00084    Wait 0.2 seconds
#00093  END FUNCTION

#00094  FUNCTION View_Goal_movies
#00097    printf "viewing movies -----------------------"
#00098    SpawnSkaterScript StartRunScript params = STRUCT{
            from_menu }

#00103  END FUNCTION

#00104  FUNCTION View_ListAllGoals
#00106    SpawnSkaterScript MidLevel_GoalCheck params = STRUCT{
            from_pause_menu }

#00107  END FUNCTION

#00108  FUNCTION ResetLevelGoals
#00114    UnSetGoal goal = GOAL_HIGHSCORE

#00115    UnSetGoal goal = GOAL_PROSCORE

#00116    UnSetGoal goal = GOAL_SICKSCORE

#00117    UnSetGoal goal = GOAL_SKATE

#00118    UnSetGoal goal = GOAL_TRICKSPOT

#00119    UnSetGoal goal = GOAL_TAPE

#00120    UnSetGoal goal = GOAL_SCRIPTED1

#00121    UnSetGoal goal = GOAL_SCRIPTED2

#00122    UnSetGoal goal = GOAL_SCRIPTED3

#00123    UnSetFlag flag = GOAL_STAT_POINT1

#00124    UnSetFlag flag = GOAL_STAT_POINT2

#00125    UnSetFlag flag = GOAL_STAT_POINT3

#00126    UnSetFlag flag = GOAL_STAT_POINT4

#00127    UnSetFlag flag = GOAL_STAT_POINT5

#00128    UnSetFlag flag = GOAL_STAT_POINTS

#00129    UnSetFlag flag = GOAL_DECK

#00130    LaunchLocalMessage "Goals reset"
#00132    IF CareerLevelIs LevelNum_Canada
#00133      UnSetFlag flag = LEVEL_FLAG_AJC_CAN_LOG_LOADER_SEQUENCE_PLAYED_ALREADY

#00134      UnSetFlag flag = LEVEL_FLAG_AJC_CAN_LOG_LOADER_IS_UP

#00135      SetFlag flag = LEVEL_FLAG_AJC_CAN_LOG_LOADER_IS_DOWN

#00136    END IF
#00137    IF CareerLevelIs LevelNum_Ship
#00138      UnSetFlag flag = BDJ_SHP_POOL

#00139      UnSetFlag flag = BDJ_SHP_FERRY

#00140      UnSetFlag flag = BDJ_SHP_NETS

#00141      BDJ_SHP_RestartSetup
#00142    END IF
#00143  END FUNCTION

#00144  FUNCTION do_end_comp
#00147    EndCompetition
#00148  END FUNCTION

#00149  FUNCTION test_fragmentation
#00151    LOOP
#00152      Wait 0.05 second
#00153      printf "Launching Message"
#00154      LaunchLocalMessage id = BottomInfo
            "Press X to Continue" panel_message_XtoContinue
#00155    END LOOP
#00156  END FUNCTION

#00157  FUNCTION RefreshGameMenu_Replay
#00160    PauseMusicAndStreams
#00161    AddLine parent = game_menu
          id = backend_continue
          text = "Continue"
          target = "do_backend_continue"
          kill_menu
#00162    AddLine parent = end_run_menu
          id = backend_watchreplay
          text = "Restart Replay"
          target = "WatchEndOfRunReplay"
          kill_menu
#00163    IF ReplayModeEquals REPLAY_MODE_PLAY_AFTER_RUN
#00164      AddLine parent = game_menu
            id = backend_retry
            text = "Retry"
            target = "do_backend_retry"
            kill_menu
#00165      AddLine parent = game_menu
            id = save_replay_from_pause
            text = "Save Replay"
            link = "_EndRunSaveReplay"

#00166      AddLine parent = game_menu
            id = exit_replay_from_pause
            text = "Exit"
            link = "ExitReplayAfterEndOfRun"

#00167    ELSE
#00168      AddLine parent = game_menu
            id = exit_replay_from_pause
            text = "Exit"
            link = "ExitSavedReplay"

#00169    END IF
#00170  END FUNCTION

#00171  FUNCTION RefreshGameMenu
#00174    printf "refreshing"
#00175    helper_select_choose_back_centered
#00176    IF InNetGame
#00177    ELSE
#00178      PauseMusicAndStreams
#00179    END IF
#00180    AddLine parent = game_menu
          id = backend_continue
          text = "Continue"
          target = "do_backend_continue"
          kill_menu
#00181    AddLine parent = game_menu
          id = backend_retry
          text = "Retry"
          target = "do_backend_retry"
          kill_menu
#00182    IF InSplitScreenGame
#00184      DestroyElement id = goto_trickset_menu

#00185    ELSE
#00186      AddLine parent = game_menu
            id = goto_trickset_menu
            text = "Edit Tricks"
            link = trick_menu_container

#00187    END IF
#00188    IF IsCareerMode
#00189      IF IsCompetition
#00190        DestroyElement id = backend_resetgoals

#00191        DestroyElement id = ListAllGoals

#00192      ELSE
#00193        AddLine parent = game_menu
              id = ListAllGoals
              text = "View Goals List"
              target = "View_ListAllGoals"
              kill_menu
#00194        IF CD
#00195          DestroyElement id = backend_resetgoals

#00196        ELSE
#00197          AddLine parent = game_menu
                id = backend_resetgoals
                text = "Reset Level Goals"
                target = "ResetLevelGoals"
                kill_menu
#00198        END IF
#00199      END IF
#00200    ELSE
#00201      DestroyElement id = backend_resetgoals

#00202      DestroyElement id = ListAllGoals

#00203    END IF
#00204    AddLine parent = game_menu
          id = backend_sound_options
          text = "Sound Options"
          link = sfx_menu_container

#00206    DestroyElement id = backend_cheat_menu

#00208    IF InNetGame
#00209    ELSE
#00210      IF GetGlobalFlag flag = CHEAT_UNLOCKED_1

#00211        AddLine parent = game_menu
              id = backend_cheat_menu
              text = "Cheats"
              link = cheat_menu

#00212      END IF
#00213    END IF
#00214    AddLine parent = game_menu
          id = backend_end_run
          text = "End Run"
          target = "do_backend_end_run"
          kill_menu
#00216    IF CD
#00217      DestroyElement id = goto_restart_menu

#00218      DestroyElement id = game_menu_debug

#00219    ELSE
#00220      AddLine parent = game_menu
            id = goto_restart_menu
            text = "Skip to Restart"
            link = restart_menu

#00221      AddLine parent = game_menu
            id = game_menu_debug
            text = "debug menu"
            link = debug_main_menu

#00222    END IF
#00223    IF IsCompetition
#00224      AddLine parent = game_menu
            id = end_comp
            text = "End Competition"
            target = "do_end_comp"
            kill_menu
#00225    ELSE
#00226      DestroyElement id = end_comp

#00227    END IF
#00228    SelectElement id = backend_continue

#00229    IF CareerLevelIs LevelNum_Tutorials
#00231      IF GetFlag flag = TUTORIAL_RUNNING

#00232        AddLine parent = game_menu
              id = end_tutorial_item
              text = "Tutorials Menu"
              target = "EndCurrentTutorial"
              kill_menu
#00233      END IF
#00234      DestroyElement id = goto_trickset_menu

#00236      DestroyElement id = backend_cheat_menu

#00237      DestroyElement id = backend_retry

#00238      DestroyElement id = goto_restart_menu

#00239      DestroyElement id = game_menu_debug

#00240      DestroyElement id = backend_end_run

#00241    ELSE
#00242    END IF
#00243  END FUNCTION

#00244  FUNCTION EndofRun_helper
#00246    helper_hide
#00247    helper_set_positions x1 = 190
          x2 = 330

#00250    SetMenuElementText id = helper_menu_1
          "бе Select"
#00251    SetMenuElementText id = helper_menu_2
          "м Accept"
#00252  END FUNCTION

#00253  FUNCTION Refresh_EndofRunMenu
#00256    EndofRun_helper
#00257    IF InNetGame
#00259    ELSE
#00260      PauseMusicAndStreams
#00261    END IF
#00262    IF IsCareerMode
#00263      IF GetGlobalFlag flag = JUST_UNLOCKED_LEVEL

#00266        SelectElement id = backend_change_level

#00267      ELSE
#00268        SelectElement id = backend_retry2

#00269      END IF
#00270    ELSE
#00271      SelectElement id = backend_retry2

#00272    END IF
#00273    IF IsCompetition
#00274      AddLine parent = end_run_menu
            id = backend_retry2
            text = "Restart Comp"
            target = "do_backend_retry"
            kill_menu
#00275    ELSE
#00276      AddLine parent = end_run_menu
            id = backend_retry2
            text = "Retry"
            target = "do_backend_retry"
            kill_menu
#00277    END IF
#00278    IF InSplitScreenGame
#00280      AddLine parent = end_run_menu
            id = gameoptions_item
            text = "Game options"
            link = splitscreen_setup_menu

#00281    ELSE
#00282      DestroyElement id = gameoptions_item

#00283    END IF
#00284    IF IsCareerMode
#00287      IF IsCompetition
#00288        DestroyElement id = backend_watchreplay

#00289      ELSE
#00290        AddLine parent = end_run_menu
              id = backend_watchreplay
              text = "Watch Replay"
              target = "WatchEndOfRunReplay"
              kill_menu
#00291      END IF
#00292    ELSE
#00293      IF GameModeEquals is_singlesession
#00294        IF IsCustomPark
#00295          DestroyElement id = backend_watchreplay

#00296        ELSE
#00297          AddLine parent = end_run_menu
                id = backend_watchreplay
                text = "Watch Replay"
                target = "WatchEndOfRunReplay"
                kill_menu
#00298        END IF
#00299      ELSE
#00300        DestroyElement id = backend_watchreplay

#00301      END IF
#00302    END IF
#00303    IF IsTrue ShouldDisableReplays
#00306      DestroyElement id = backend_watchreplay

#00307    END IF
#00308    DestroyElement id = backend_watchreplay

#00310    IF IsCareerMode
#00313      IF IsCompetition
#00314        DestroyElement id = view_goals_movies_element

#00315      ELSE
#00316        AddLine parent = end_run_menu
              id = view_goals_movies_element
              text = "View Goal Movies"
              target = "View_Goal_movies"
              kill_menu
#00317      END IF
#00318    ELSE
#00319      DestroyElement id = view_goals_movies_element

#00320    END IF
#00321    IF InSplitScreenGame
#00322      DestroyElement id = goto_trickset_menu

#00323    ELSE
#00324    END IF
#00325    IF IsCareerMode
#00326      AddLine parent = end_run_menu
            id = backend_change_level
            text = "Change Level"
            link = career_change_level_menu

#00327    ELSE
#00328      AddLine parent = end_run_menu
            id = backend_change_level
            text = "Change Level"
            link = change_level_menu

#00329    END IF
#00330    IF IsCustomPark
#00331      DestroyElement id = backend_change_level

#00332    END IF
#00333    IF InSplitScreenGame
#00334      DestroyElement id = edit_stats

#00335      DestroyElement id = goto_trickset_menu

#00336      DestroyElement id = save_game

#00337    ELSE
#00338      AddLine parent = end_run_menu
            id = edit_stats
            text = "Edit stats"
            link = stats_menu

#00339      AddLine parent = end_run_menu
            id = goto_trickset_menu
            text = "Edit Tricks"
            link = trick_menu_container

#00340      AddLine parent = end_run_menu
            id = save_game
            text = "Save game"
            target = "InGameSave"

#00341    END IF
#00342    DestroyElement id = endrun_cheat_menu

#00344    IF InNetGame
#00345    ELSE
#00346      IF GetGlobalFlag flag = CHEAT_UNLOCKED_1

#00347        AddLine parent = end_run_menu
              id = endrun_cheat_menu
              text = "Cheats"
              link = cheat_menu

#00348      END IF
#00349    END IF
#00350    AddLine parent = end_run_menu
          id = main_menu
          text = "Quit"
          link = quitgame_yesno_menu

#00358    IF CD
#00359      DestroyElement id = backend_debug_menu

#00360      DestroyElement id = backend_change_test_level

#00361    ELSE
#00362      AddLine parent = end_run_menu
            id = backend_debug_menu
            text = "Debug Menu"
            link = debug_main_menu

#00363      AddLine parent = end_run_menu
            id = backend_change_test_level
            text = "Change Test Level"
            link = test_level_menu

#00364    END IF
#00365  END FUNCTION

#00367  FUNCTION goto_skateshop
#00369    Change AutoLinkToCareerScreen = 1

#00372    chosen_leave_server
#00373  END FUNCTION

#00374  FUNCTION InGameEndMemCardSaveLoad
#00376    SwitchToMenu menu = end_run_menu

#00377  END FUNCTION

#00383  FUNCTION _InGameEndMemCardSaveLoad
#00385    SpawnScript InGameEndMemCardSaveLoad params = NULL

#00386  END FUNCTION

#00387  FUNCTION InGameSave
#00389    helper_hide
#00390    SpawnScript SaveOptionsAndPros params = STRUCT{
            EndScr = InGameEndMemCardSaveLoad
            }

#00391  END FUNCTION

#00392  FUNCTION Continue_to_endofrun
#00394    SwitchToMenu menu = end_run_menu

#00395  END FUNCTION

#00396  FUNCTION front_end_set_inactive
#00398    FrontEndSetInactive
#00399    IF CareerLevelIs LevelNum_Tutorials
#00401      PauseStream 0
#00402    ELSE
#00403      UnPauseMusicAndStreams
#00404    END IF
#00405  END FUNCTION

#00406  FUNCTION Select_No
#00408    SelectElement id = quit_no

#00409    helper_select_choose_back_centered
#00410  END FUNCTION

#00411  FUNCTION Server_Select_No
#00413    SelectElement id = server_quit_no

#00414    helper_select_choose_back_centered
#00415  END FUNCTION

#00416  FUNCTION Client_Select_No
#00418    SelectElement id = client_quit_no

#00419    helper_select_choose_back_centered
#00420  END FUNCTION

#00421  FUNCTION setup_backend_menu
#00423    setdefaultproperty type = textdrawer
          name = main

#00433    createmenu STRUCT{
            type = menucontainer
            id = contain1
            dynamic_children = ARRAY(

              STRUCT{
                id = sfx_menu_container
                target_script = sfx_menu_create
                }
              STRUCT{
                id = trick_menu_container
                target_script = trick_menu_create
                }

            )
            }

#00442    CreateAndAttachMenu STRUCT{
            type = verticalmenu
            id = game_menu
            game_menu_properties blue_top eventhandlers = ARRAY(

              STRUCT{
                type = showeventhandler
                target = "RefreshGameMenu"
                }
              STRUCT{
                type = backeventhandler
                target = "front_end_set_inactive"
                }

            )
            children = ARRAY(

              STRUCT{
                type = textmenuelement
                auto_id text = "paused"
                static dont_gray drawer = title
                }

            )
            parent = contain1
            }

#00461    CreateAndAttachMenu STRUCT{
            type = verticalmenu
            id = restart_menu
            x = 100.0
            y = 70.0
            w = 410.0
            h = 224.0
            parent = contain1
            }

#00469    CreateAndAttachMenu STRUCT{
            type = verticalmenu
            id = savegame_yesno_menu
            x = 170.0
            y = 150.0
            w = 300.0
            h = 336.0
            just_center_x just_center_y blue_top eventhandler = STRUCT{
              type = showeventhandler
              target = "EndofRun_helper"
              }
            parent = contain1
            children = ARRAY(

              STRUCT{
                type = textmenuelement
                auto_id text = "Save Game"
                static dont_gray drawer = title
                }
              STRUCT{
                type = textmenuelement
                id = savegame_yes
                text = "Yes"
                target = "InGameSave"
                }
              STRUCT{
                type = textmenuelement
                id = savegame_no
                text = "No"
                target = "Continue_to_endofrun"
                kill_menu }

            )
            }

#00494    CreateAndAttachMenu STRUCT{
            type = verticalmenu
            id = quitgame_yesno_menu
            x = 170.0
            y = 150.0
            w = 300.0
            h = 336.0
            just_center_x just_center_y blue_top eventhandler = STRUCT{
              type = showeventhandler
              target = "Select_no"
              }
            parent = contain1
            children = ARRAY(

              STRUCT{
                type = textmenuelement
                auto_id text = "Quit?"
                static dont_gray drawer = title
                }
              STRUCT{
                type = textmenuelement
                id = quit_yes
                text = "Yes"
                target = "chosen_leave_server"
                kill_menu }
              STRUCT{
                type = textmenuelement
                id = quit_no
                text = "No"
                link = end_run_menu
                }

            )
            }

#00520    IF ENGLISH
#00525      CreateAndAttachMenu STRUCT{
              type = verticalmenu
              id = end_run_menu
              game_menu_properties blue_top eventhandler = STRUCT{
                type = showeventhandler
                target = "Refresh_EndofRunMenu"
                }
              children = ARRAY(

                STRUCT{
                  type = textmenuelement
                  auto_id text = "end of run"
                  static dont_gray drawer = title
                  }

              )
              parent = contain1
              }

#00541    ELSE
#00542      CreateAndAttachMenu STRUCT{
              type = verticalmenu
              id = end_run_menu
              game_menu_properties w = 340
              x = 150
              blue_top eventhandler = STRUCT{
                type = showeventhandler
                target = "Refresh_EndofRunMenu"
                }
              children = ARRAY(

                STRUCT{
                  type = textmenuelement
                  auto_id text = "end of run"
                  static dont_gray drawer = title
                  }

              )
              parent = contain1
              }

#00559    END IF
#00560    CreateAndAttachMenu STRUCT{
            type = verticalmenu
            id = victorycondition_menu
            x = 120.0
            y = 70.0
            w = 420.0
            h = 336.0
            just_center_x just_center_y blue_top children = ARRAY(

              STRUCT{
                type = textmenuelement
                auto_id text = "set victory"
                static dont_gray drawer = title
                }
              STRUCT{
                type = textmenuelement
                id = victorycondition_highestscore
                text = "Highest Score Wins"
                target = "do_victorycondition_highestscore"
                adds_task }
              STRUCT{
                type = textmenuelement
                id = victorycondition_target10000
                text = "First Skater to 10000 Wins"
                target = "do_victorycondition_target10000"
                adds_task }
              STRUCT{
                type = textmenuelement
                id = victorycondition_target50000
                text = "First Skater to 50000 Wins"
                target = "do_victorycondition_target50000"
                adds_task }

            )
            parent = contain1
            }

#00590    CreateAndAttachMenu STRUCT{
            type = verticalmenu
            id = gameoptions_menu
            x = 120.0
            y = 70.0
            w = 400.0
            h = 336.0
            just_center_x just_center_y blue_top children = ARRAY(

              STRUCT{
                type = textmenuelement
                auto_id text = "game options"
                static dont_gray drawer = title
                }
              STRUCT{
                type = textmenuelement
                id = gameoptions_victorycondition
                text = "Set Victory Conditions"
                link = victorycondition_menu
                }

            )
            parent = contain1
            }

#00608    CreateAndAttachMenu STRUCT{
            type = verticalmenu
            id = trickset_menu
            game_menu_properties blue_top children = ARRAY(

              STRUCT{
                type = textmenuelement
                auto_id text = "trickset"
                static dont_gray drawer = title
                }
              STRUCT{
                type = textmenuelement
                id = airtricks1
                text = "Left+Circle"
                target = "change_airtricks1"
                kill_menu }
              STRUCT{
                type = textmenuelement
                id = airtricks2
                text = "Right+Circle"
                target = "change_airtricks2"
                kill_menu }

            )
            parent = contain1
            }

#00631    create_splitscreen_menu
#00633    create_and_attach_generic_array_menu STRUCT{
            menu_id = network_time_limit_menu
            array_name = time_limit_options
            field = time_limit
            title = "Time Limit"
            prefs = network
            x = 170.0
            y = 90.0
            w = 300.0
            h = 400.0
            }

#00644    CreateAndAttachMenu STRUCT{
            type = verticalmenu
            id = server_pause_menu
            x = 120.0
            y = 80.0
            w = 400.0
            h = 336.0
            blue_top eventhandler = STRUCT{
              type = backeventhandler
              target = "front_end_set_inactive"
              }
            children = ARRAY(

              STRUCT{
                type = textmenuelement
                auto_id text = "Server Pause"
                static dont_gray drawer = title
                }
              STRUCT{
                type = textmenuelement
                auto_id text = "Settings (TEMP)"
                kill_menu eventhandler = STRUCT{
                  type = ChooseEventHandler
                  target = "invokeUIScreen"
                  params = STRUCT{
                    screen = ss_main_window
                    }
                  }
                }
              STRUCT{
                type = textmenuelement
                id = server_pause_menu_continue_item
                text = "Continue"
                eventhandler = STRUCT{
                  type = ChooseEventHandler
                  }
                }
              STRUCT{
                type = textmenuelement
                id = server_pause_menu_start_game_item
                text = "Start Game"
                eventhandler = STRUCT{
                  type = ChooseEventHandler
                  }
                }
              STRUCT{
                type = textmenuelement
                id = server_choose_team_item
                text = "Choose Team"
                eventhandlers = ARRAY(

                  STRUCT{
                    type = ChooseEventHandler
                    link = server_choose_team_menu
                    }

                )
                }
              STRUCT{
                type = textmenuelement
                id = server_game_options_item
                text = "Game Options"
                eventhandler = STRUCT{
                  type = ChooseEventHandler
                  link = net_game_options_menu
                  }
                }
              STRUCT{
                type = textmenuelement
                id = server_change_level_item
                text = "Change Level"
                eventhandler = STRUCT{
                  type = ChooseEventHandler
                  link = net_level_menu
                  }
                }
              STRUCT{
                type = textmenuelement
                id = server_pause_menu_ban_player_item
                text = "Ban Player..."
                eventhandler = STRUCT{
                  type = ChooseEventHandler
                  link = ban_player_menu
                  }
                }
              STRUCT{
                type = textmenuelement
                id = server_pause_menu_toggle_names_item
                text = "Toggle Player Names"
                }
              STRUCT{
                type = textmenuelement
                id = server_pause_menu_toggle_scores_item
                text = "Toggle Scores"
                }
              STRUCT{
                type = textmenuelement
                id = server_pause_menu_chat_item
                text = "Enter Chat Message"
                eventhandler = STRUCT{
                  type = ChooseEventHandler
                  link = chat_message_control
                  }
                }
              STRUCT{
                type = textmenuelement
                id = server_pause_sound_options
                text = "Sound Options"
                eventhandler = STRUCT{
                  type = ChooseEventHandler
                  link = sfx_menu_container
                  }
                }
              STRUCT{
                type = textmenuelement
                id = server_pause_menu_quit_item
                text = "Quit"
                eventhandler = STRUCT{
                  type = ChooseEventHandler
                  link = server_quitgame_yesno_menu
                  }
                }

            )
            parent = contain1
            }

#00702    CreateAndAttachMenu STRUCT{
            type = verticalmenu
            id = server_choose_team_menu
            x = 170.0
            y = 80.0
            w = 300.0
            h = 400.0
            just_center_x just_center_y blue_top children = ARRAY(

              STRUCT{
                type = textmenuelement
                auto_id text = "Choose Team"
                static dont_gray drawer = title
                }
              STRUCT{
                type = textmenuelement
                auto_id text = "Automatic"
                eventhandler = STRUCT{
                  type = ChooseEventHandler
                  link = server_pause_menu
                  target = "do_choose_team"
                  params = STRUCT{
                    automatic }
                  }
                }
              STRUCT{
                type = textmenuelement
                auto_id text = "Blue"
                eventhandler = STRUCT{
                  type = ChooseEventHandler
                  link = server_pause_menu
                  target = "do_choose_team"
                  params = STRUCT{
                    blue }
                  }
                }
              STRUCT{
                type = textmenuelement
                auto_id text = "Red"
                eventhandler = STRUCT{
                  type = ChooseEventHandler
                  link = server_pause_menu
                  target = "do_choose_team"
                  params = STRUCT{
                    red }
                  }
                }

            )
            parent = contain1
            }

#00742    CreateAndAttachMenu STRUCT{
            type = verticalmenu
            id = client_choose_team_menu
            x = 170.0
            y = 80.0
            w = 300.0
            h = 400.0
            just_center_x just_center_y blue_top children = ARRAY(

              STRUCT{
                type = textmenuelement
                auto_id text = "Choose Team"
                static dont_gray drawer = title
                }
              STRUCT{
                type = textmenuelement
                auto_id text = "Automatic"
                eventhandler = STRUCT{
                  type = ChooseEventHandler
                  link = server_pause_menu
                  target = "do_choose_team"
                  params = STRUCT{
                    automatic }
                  }
                }
              STRUCT{
                type = textmenuelement
                auto_id text = "Blue"
                eventhandler = STRUCT{
                  type = ChooseEventHandler
                  link = server_pause_menu
                  target = "do_choose_team"
                  params = STRUCT{
                    blue }
                  }
                }
              STRUCT{
                type = textmenuelement
                auto_id text = "Red"
                eventhandler = STRUCT{
                  type = ChooseEventHandler
                  link = server_pause_menu
                  target = "do_choose_team"
                  params = STRUCT{
                    red }
                  }
                }

            )
            parent = contain1
            }

#00782    CreateAndAttachMenu STRUCT{
            type = verticalmenu
            id = net_level_menu
            x = 170.0
            y = 80.0
            w = 300.0
            h = 400.0
            just_center_x just_center_y blue_top eventhandlers = ARRAY(

              STRUCT{
                type = showeventhandler
                target = "populate_level_menu"
                params = STRUCT{
                  choose_script = "change_level"
                  parent_menu = net_level_menu
                  }
                }

            )
            children = ARRAY(

              STRUCT{
                type = textmenuelement
                auto_id text = "Levels"
                static dont_gray drawer = title
                }
              STRUCT{
                type = textmenuelement
                auto_id text = "Play Custom Park"
                target = "_NetMenuParkEditorLoad"
                }

            )
            parent = contain1
            }

#00811    CreateAndAttachMenu STRUCT{
            type = verticalmenu
            id = client_pause_menu
            x = 120.0
            y = 80.0
            w = 400.0
            h = 336.0
            blue_top eventhandler = STRUCT{
              type = backeventhandler
              target = "front_end_set_inactive"
              }
            children = ARRAY(

              STRUCT{
                type = textmenuelement
                auto_id text = "Client Pause"
                static dont_gray drawer = title
                }
              STRUCT{
                type = textmenuelement
                auto_id text = "Settings (TEMP)"
                eventhandler = STRUCT{
                  kill_menu type = ChooseEventHandler
                  target = "invokeUIScreen"
                  params = STRUCT{
                    screen = ss_main_window
                    }
                  }
                }
              STRUCT{
                type = textmenuelement
                id = client_pause_menu_continue_item
                text = "Continue"
                eventhandler = STRUCT{
                  type = ChooseEventHandler
                  }
                }
              STRUCT{
                type = textmenuelement
                id = client_choose_team_item
                text = "Choose Team"
                eventhandlers = ARRAY(

                  STRUCT{
                    type = ChooseEventHandler
                    link = client_choose_team_menu
                    }

                )
                }
              STRUCT{
                type = textmenuelement
                id = client_pause_menu_toggle_names_item
                text = "Toggle Player Names"
                }
              STRUCT{
                type = textmenuelement
                id = client_pause_menu_toggle_scores_item
                text = "Toggle Scores"
                }
              STRUCT{
                type = textmenuelement
                id = client_pause_menu_chat_item
                text = "Enter Chat Message"
                eventhandler = STRUCT{
                  type = ChooseEventHandler
                  link = chat_message_control
                  }
                }
              STRUCT{
                type = textmenuelement
                id = client_pause_sound_options
                text = "Sound Options"
                eventhandler = STRUCT{
                  type = ChooseEventHandler
                  link = sfx_menu_container
                  }
                }
              STRUCT{
                type = textmenuelement
                id = client_pause_menu_quit_item
                text = "Quit"
                eventhandler = STRUCT{
                  type = ChooseEventHandler
                  link = client_quitgame_yesno_menu
                  }
                }

            )
            parent = contain1
            }

#00866    CreateAndAttachMenu STRUCT{
            type = verticalmenu
            id = server_quitgame_yesno_menu
            x = 170.0
            y = 150.0
            w = 300.0
            h = 336.0
            just_center_x just_center_y blue_top eventhandler = STRUCT{
              type = showeventhandler
              target = "Server_Select_No"
              }
            parent = contain1
            children = ARRAY(

              STRUCT{
                type = textmenuelement
                auto_id text = "Quit?"
                static dont_gray drawer = title
                }
              STRUCT{
                type = textmenuelement
                id = server_quit_yes
                text = "Yes"
                target = "chosen_leave_server"
                }
              STRUCT{
                type = textmenuelement
                id = server_quit_no
                text = "No"
                link = server_pause_menu
                }

            )
            }

#00892    CreateAndAttachMenu STRUCT{
            type = verticalmenu
            id = client_quitgame_yesno_menu
            x = 170.0
            y = 150.0
            w = 300.0
            h = 336.0
            just_center_x just_center_y blue_top eventhandler = STRUCT{
              type = showeventhandler
              target = "Client_Select_No"
              }
            parent = contain1
            children = ARRAY(

              STRUCT{
                type = textmenuelement
                auto_id text = "Quit?"
                static dont_gray drawer = title
                }
              STRUCT{
                type = textmenuelement
                id = client_quit_yes
                text = "Yes"
                target = "chosen_leave_server"
                }
              STRUCT{
                type = textmenuelement
                id = client_quit_no
                text = "No"
                link = client_pause_menu
                }

            )
            }

#00918    CreateAndAttachMenu STRUCT{
            type = keyboardcontrol
            id = chat_message_control
            x = 160.0
            y = 56.0
            w = 320.0
            h = 336.0
            just_center_x just_center_y num_columns = 13
            standard_charset allow_uppercase allow_lowercase min_chars = 0
            max_chars = 30
            title_string = "Enter chat message:"
            default_string = ""
            eventhandlers = ARRAY(

              STRUCT{
                type = showeventhandler
                target = "clear_keyboard_string"
                params = STRUCT{
                  control_id = chat_message_control
                  }
                }
              STRUCT{
                type = contentschangedeventhandler
                target = "send_chat_message"
                }
              STRUCT{
                type = showeventhandler
                target = "helper_on_keyboard_control"
                }

            )
            kill_on_close parent = contain1
            }

#00942    CreateAndAttachMenu STRUCT{
            type = keyboardcontrol
            id = kb_chat_message_control
            x = 160.0
            y = 56.0
            w = 320.0
            h = 336.0
            just_center_x just_center_y num_columns = 13
            no_gui allow_uppercase allow_lowercase allow_slashes min_chars = 0
            max_chars = 30
            title_string = "Enter chat message:"
            default_string = ""
            eventhandlers = ARRAY(

              STRUCT{
                type = showeventhandler
                target = "clear_keyboard_string"
                params = STRUCT{
                  control_id = kb_chat_message_control
                  }
                }
              STRUCT{
                type = contentschangedeventhandler
                target = "send_chat_message"
                }
              STRUCT{
                type = showeventhandler
                target = "helper_on_keyboard_control_no_gui"
                }

            )
            kill_on_close parent = contain1
            }

#00967    CreateAndAttachMenu STRUCT{
            type = verticalmenu
            id = net_game_options_menu
            x = 160.0
            y = 56.0
            w = 320.0
            h = 336.0
            just_center_x just_center_y blue_top children = ARRAY(

              STRUCT{
                type = textmenuelement
                auto_id text = "Game Options"
                static dont_gray drawer = title
                }
              STRUCT{
                type = textmenuelement
                auto_id text = "Server Name"
                eventhandler = STRUCT{
                  type = ChooseEventHandler
                  link = opts_net_server_name_control
                  }
                }
              STRUCT{
                type = textmenuelement
                auto_id text = "Current Server Name"
                static dont_gray drawer = keyboard_property
                eventhandler = STRUCT{
                  type = showeventhandler
                  target = "set_ui_from_preferences"
                  params = STRUCT{
                    prefs = network
                    field = "server_name"
                    }
                  }
                }
              STRUCT{
                type = textmenuelement
                auto_id text = "Game Type"
                eventhandler = STRUCT{
                  type = ChooseEventHandler
                  link = opts_net_game_type_menu
                  }
                }
              STRUCT{
                type = textmenuelement
                auto_id text = "Current Game"
                static dont_gray drawer = keyboard_property
                eventhandler = STRUCT{
                  type = showeventhandler
                  target = "set_ui_from_preferences"
                  params = STRUCT{
                    prefs = network
                    field = "game_type"
                    }
                  }
                }
              STRUCT{
                type = textmenuelement
                auto_id text = "Time Limit"
                link = network_time_limit_menu
                }
              STRUCT{
                type = textmenuelement
                auto_id text = "Current Time Limit"
                static dont_gray drawer = keyboard_property
                eventhandler = STRUCT{
                  type = showeventhandler
                  target = "set_ui_from_preferences"
                  params = STRUCT{
                    prefs = network
                    field = "time_limit"
                    }
                  }
                }
              STRUCT{
                type = textmenuelement
                auto_id text = "Maximum Players"
                eventhandler = STRUCT{
                  type = ChooseEventHandler
                  link = opts_net_num_players_menu
                  }
                }
              STRUCT{
                type = textmenuelement
                auto_id text = "Current Players"
                static dont_gray drawer = keyboard_property
                eventhandler = STRUCT{
                  type = showeventhandler
                  target = "set_ui_from_preferences"
                  params = STRUCT{
                    prefs = network
                    field = "num_players"
                    }
                  }
                }
              STRUCT{
                type = textmenuelement
                auto_id text = "Password"
                eventhandler = STRUCT{
                  type = ChooseEventHandler
                  link = opts_net_password_control
                  }
                }
              STRUCT{
                type = textmenuelement
                auto_id text = "Current Password"
                static dont_gray drawer = keyboard_property
                eventhandler = STRUCT{
                  type = showeventhandler
                  target = "set_ui_from_preferences"
                  params = STRUCT{
                    prefs = network
                    field = "password"
                    }
                  }
                }

            )
            parent = contain1
            }

#01084    CreateAndAttachMenu STRUCT{
            type = verticalmenu
            id = net_game_options_menu
            x = 160.0
            y = 56.0
            w = 320.0
            h = 336.0
            just_center_x just_center_y id = ban_player_menu
            blue_top children = ARRAY(

              STRUCT{
                type = textmenuelement
                auto_id text = "Ban Player"
                static dont_gray drawer = title
                }

            )
            parent = contain1
            }

#01101    create_and_attach_generic_array_menu STRUCT{
            menu_id = opts_net_num_players_menu
            array_name = num_players_info
            field = num_players
            title = "Number of Players"
            prefs = network
            validationscript = "validate_player_option"
            x = 140.0
            y = 120.0
            w = 360.0
            h = 400.0
            }

#01112    create_and_attach_generic_array_menu STRUCT{
            menu_id = opts_net_num_obs_menu
            array_name = num_observers_info
            field = num_observers
            title = "Number of Observers"
            prefs = network
            x = 120.0
            y = 120.0
            w = 400.0
            h = 400.0
            }

#01122    create_and_attach_generic_array_menu STRUCT{
            menu_id = opts_net_game_type_menu
            array_name = game_type_info
            field = game_type
            title = "Game Type"
            prefs = network
            x = 170.0
            y = 120.0
            w = 300.0
            h = 400.0
            }

#01132    CreateAndAttachMenu STRUCT{
            type = keyboardcontrol
            id = opts_net_password_control
            x = 160.0
            y = 56.0
            w = 320.0
            h = 336.0
            just_center_x just_center_y num_columns = 13
            standard_charset min_chars = 0
            max_chars = 8
            title_string = "Enter password:"
            eventhandlers = ARRAY(

              STRUCT{
                type = showeventhandler
                target = "set_ui_from_preferences"
                params = STRUCT{
                  prefs = network
                  field = "password"
                  }
                }
              STRUCT{
                type = contentschangedeventhandler
                target = "set_preferences_from_ui"
                params = STRUCT{
                  prefs = network
                  field = "password"
                  }
                }
              STRUCT{
                type = showeventhandler
                target = "helper_on_keyboard_control"
                }

            )
            parent = contain1
            }

#01161    CreateAndAttachMenu STRUCT{
            type = keyboardcontrol
            id = opts_net_server_name_control
            x = 160.0
            y = 56.0
            w = 320.0
            h = 336.0
            just_center_x just_center_y num_columns = 13
            standard_charset min_chars = 3
            max_chars = 15
            title_string = "Enter server name:"
            eventhandlers = ARRAY(

              STRUCT{
                type = showeventhandler
                target = "set_ui_from_preferences"
                params = STRUCT{
                  prefs = network
                  field = "server_name"
                  }
                }
              STRUCT{
                type = contentschangedeventhandler
                target = "set_preferences_from_ui"
                params = STRUCT{
                  prefs = network
                  field = "server_name"
                  }
                }
              STRUCT{
                type = showeventhandler
                target = "helper_on_keyboard_control"
                }

            )
            parent = contain1
            }

#01190    CreateAndAttachMenu STRUCT{
            type = verticalmenu
            id = change_level_menu
            x = 160.0
            y = 70.0
            w = 300.0
            h = 400.0
            just_center_x just_center_y blue_top eventhandler = STRUCT{
              type = showeventhandler
              target = "populate_level_menu"
              params = STRUCT{
                choose_script = "change_level"
                parent_menu = change_level_menu
                }
              }
            children = ARRAY(

              STRUCT{
                type = textmenuelement
                auto_id text = "Levels"
                static dont_gray drawer = title
                }

            )
            parent = contain1
            }

#01208    CreateAndAttachMenu STRUCT{
            type = verticalmenu
            id = career_change_level_menu
            x = 140.0
            y = 90.0
            w = 360.0
            h = 400.0
            just_center_x just_center_y blue_top eventhandler = STRUCT{
              type = showeventhandler
              target = "populate_level_menu"
              params = STRUCT{
                choose_script = "change_level"
                parent_menu = career_level_names
                }
              }
            children = ARRAY(

              STRUCT{
                type = textmenuelement
                auto_id text = "Levels"
                static dont_gray drawer = title
                }
              STRUCT{
                type = menucontainer
                id = career_levels_multi_container
                show_all_children }

            )
            parent = contain1
            }

#01232    DestroyElement id = career_level_names

#01233    DestroyElement id = career_level_goals

#01234    createmenu STRUCT{
            type = verticalmenu
            id = career_level_names
            x = 0.0
            y = 0.0
            w = 280.0
            h = 336.0
            just_center_x just_center_y not_rounded children = ARRAY(

              STRUCT{
                type = textmenuelement
                auto_id text = "Name"
                static drawer = main_smaller
                }

            )
            }

#01247    createmenu STRUCT{
            type = verticalmenu
            id = career_level_goals
            x = 280.0
            y = 0.0
            w = 80.0
            h = 336.0
            just_center_x just_center_y not_rounded static eventhandler = STRUCT{
              type = showeventhandler
              target = "populate_goals_menu"
              }
            children = ARRAY(

              STRUCT{
                type = textmenuelement
                auto_id text = "Goals"
                static drawer = main_smaller
                }

            )
            }

#01261    attachchild parent = career_levels_multi_container
          child = career_level_names

#01263    attachchild parent = career_levels_multi_container
          child = career_level_goals

#01264    printf "Going through master level list... regular change level"
#01267    attach_new_stats_menu STRUCT{
            menu_id = stats_menu
            container_id = contain1
            points_available_id = ingame_cas_points_available
            left_container_id = stats_left_container
            right_container_id = stats_right_container
            }

#01279    AttachEventHandler STRUCT{
            type = showeventhandler
            object = stats_menu
            target = "helper_on_stat_menu"
            }

#01285    helper_menu_create
#01287    debug_menu_create
#01288    level_menu_create
#01289    stats_menu_create
#01290    comp_menu_create
#01291    horse_menu_create
#01292    replay_menu_create
#01293    cheat_menu_create
#01294    replay_from_memcard_menu_create
#01295    memcard_files_menu_create
#01296  END FUNCTION

#01298  FUNCTION populate_goals_menu
#01301    DestroyElement id = level2

#01304    DestroyElement id = level3

#01305    DestroyElement id = level4

#01306    DestroyElement id = level5

#01307    DestroyElement id = level6

#01308    DestroyElement id = level7

#01309    DestroyElement id = level8

#01310    DestroyElement id = level9

#01311    GetGoalsCompleted LevelNum_Foundry
#01313    AddLine parent = career_level_goals
          id = level1
          text = GLOBAL.GoalsCompleted

#01314    GetGoalsCompleted LevelNum_Canada
#01316    IF GetGlobalFlag flag = LEVEL_UNLOCKED_CANADA

#01317      AddLine parent = career_level_goals
            id = level2
            text = GLOBAL.GoalsCompleted

#01318    ELSE
#01319      AddLine parent = career_level_goals
            id = level2
            text = GLOBAL.GoalsCompleted
            static
#01320    END IF
#01321    GetGoalsCompleted LevelNum_Rio
#01323    IF GetGlobalFlag flag = LEVEL_UNLOCKED_RIO

#01324      AddLine parent = career_level_goals
            id = level3
            text = GLOBAL.BestMedal

#01325    ELSE
#01326      printf "--------------------- Printing best medal for Rio"
#01327      AddLine parent = career_level_goals
            id = level3
            text = GLOBAL.BestMedal
            static
#01328    END IF
#01329    GetGoalsCompleted LevelNum_Suburbia
#01331    IF GetGlobalFlag flag = LEVEL_UNLOCKED_SUBURBIA

#01332      AddLine parent = career_level_goals
            id = level4
            text = GLOBAL.GoalsCompleted

#01333    ELSE
#01334      AddLine parent = career_level_goals
            id = level4
            text = GLOBAL.GoalsCompleted
            static
#01335    END IF
#01336    GetGoalsCompleted LevelNum_Airport
#01338    IF GetGlobalFlag flag = LEVEL_UNLOCKED_AIRPORT

#01339      AddLine parent = career_level_goals
            id = level5
            text = GLOBAL.GoalsCompleted

#01340    ELSE
#01341      AddLine parent = career_level_goals
            id = level5
            text = GLOBAL.GoalsCompleted
            static
#01342    END IF
#01343    GetGoalsCompleted LevelNum_SkaterIsland
#01345    IF GetGlobalFlag flag = LEVEL_UNLOCKED_SKATERISLAND

#01346      AddLine parent = career_level_goals
            id = level6
            text = GLOBAL.BestMedal

#01347    ELSE
#01348      AddLine parent = career_level_goals
            id = level6
            text = GLOBAL.BestMedal
            static
#01349    END IF
#01350    GetGoalsCompleted LevelNum_LA
#01352    IF GetGlobalFlag flag = LEVEL_UNLOCKED_LOSANGELES

#01353      AddLine parent = career_level_goals
            id = level7
            text = GLOBAL.GoalsCompleted

#01354    ELSE
#01355      AddLine parent = career_level_goals
            id = level7
            text = GLOBAL.GoalsCompleted
            static
#01356    END IF
#01357    GetGoalsCompleted LevelNum_Tokyo
#01359    IF GetGlobalFlag flag = LEVEL_UNLOCKED_TOKYO

#01360      AddLine parent = career_level_goals
            id = level8
            text = GLOBAL.BestMedal

#01361    ELSE
#01362      AddLine parent = career_level_goals
            id = level8
            text = GLOBAL.BestMedal
            static
#01363    END IF
#01364    IF GetGlobalFlag flag = SPECIAL_HAS_SEEN_SHIP

#01366      GetGoalsCompleted LevelNum_Ship
#01367      IF GetGlobalFlag flag = LEVEL_UNLOCKED_SHIP

#01368        AddLine parent = career_level_goals
              id = level9
              text = GLOBAL.GoalsCompleted

#01369      ELSE
#01370        AddLine parent = career_level_goals
              id = level9
              text = GLOBAL.GoalsCompleted
              static
#01371      END IF
#01372    ELSE
#01373      DestroyElement id = level9

#01374    END IF
#01375  END FUNCTION

#01376  FUNCTION populate_level_menu
#01381    helper_hide
#01382    helper_select_choose_back x1 = 167
          x2 = 282
          x3 = 392

#01383    IF IsCareerMode
#01386      populate_goals_menu
#01387      GetNextLevelRequirements
#01388      IF GotParam friggina
#01389        IF GetGlobalFlag flag = SPECIAL_HAS_SEEN_SHIP

#01390          DestroyElement id = next_level_at

#01391          IF GetGlobalFlag flag = LEVEL_UNLOCKED_SHIP

#01392            IF PAL
#01393              AddLine parent = career_change_level_menu
                    id = next_level_at
                    text = "All levels unlocked"
                    static drawer = main_smaller
                    lock_layout y = 228

#01394            ELSE
#01395              AddLine parent = career_change_level_menu
                    id = next_level_at
                    text = "All levels unlocked"
                    static drawer = main_smaller
                    lock_layout y = 220

#01396            END IF
#01397          ELSE
#01398            IF PAL
#01399              AddLine parent = career_change_level_menu
                    id = next_level_at
                    text = GLOBAL.NextLevelRequirements
                    static drawer = main_smaller
                    lock_layout y = 228

#01400            ELSE
#01401              AddLine parent = career_change_level_menu
                    id = next_level_at
                    text = GLOBAL.NextLevelRequirements
                    static drawer = main_smaller
                    lock_layout y = 220

#01402            END IF
#01403          END IF
#01404        ELSE
#01405          IF PAL
#01406            AddLine parent = career_change_level_menu
                  id = next_level_at
                  text = GLOBAL.NextLevelRequirements
                  static drawer = main_smaller
                  lock_layout y = 209

#01407          ELSE
#01408            AddLine parent = career_change_level_menu
                  id = next_level_at
                  text = GLOBAL.NextLevelRequirements
                  static drawer = main_smaller
                  lock_layout y = 201

#01409          END IF
#01410        END IF
#01411      ELSE
#01412        IF GetGlobalFlag flag = SPECIAL_HAS_SEEN_SHIP

#01413          DestroyElement id = next_level_at

#01414          IF GetGlobalFlag flag = LEVEL_UNLOCKED_SHIP

#01415            AddLine parent = career_change_level_menu
                  id = next_level_at
                  text = "All levels unlocked"
                  static drawer = main_smaller
                  lock_layout y = 238

#01416          ELSE
#01417            AddLine parent = career_change_level_menu
                  id = next_level_at
                  text = GLOBAL.NextLevelRequirements
                  static drawer = main_smaller
                  lock_layout y = 238

#01418          END IF
#01419        ELSE
#01420          AddLine parent = career_change_level_menu
                id = next_level_at
                text = GLOBAL.NextLevelRequirements
                static drawer = main_smaller
                lock_layout y = 214

#01421        END IF
#01422      END IF
#01423    ELSE
#01424      DestroyElement id = next_level_at

#01425    END IF
#01426    VerifyParam param = parent_menu
          func = populate_level_menu
          NULL
#01427    VerifyParam param = choose_script
          func = populate_level_menu
          NULL
#01428    ForEachIn master_level_list do = add_level_menu_item
          params = STRUCT{
            mask = regular_level
            target_script = GLOBAL.choose_script
            parent_menu = GLOBAL.parent_menu
            }

#01429  END FUNCTION

#01430  FUNCTION toggle_player_names
#01432    TogglePlayerNames
#01433  END FUNCTION

#01434  FUNCTION toggle_scores
#01436    ToggleScores
#01437  END FUNCTION

#01438  FUNCTION enter_observer_mode
#01440    EnterObserverMode
#01441  END FUNCTION

#01442  FUNCTION enter_chat_mode
#01444  END FUNCTION

#01445  FUNCTION back_to_main
#01447    printf "running back_to_main"
#01448    LaunchMenuScreen screen = main_menu

#01449  END FUNCTION

#01450  FUNCTION change_airtricks1
#01452    Change Air_CircleL = Trick_Stiffy

#01453  END FUNCTION

#01455  FUNCTION change_airtricks2
#01457    Change Air_CircleR = Trick_Judo

#01458  END FUNCTION

#01460  FUNCTION change_airtricks3
#01462    Change Airtricks = Airtricks3

#01463    Change JumpTricks = Jumptricks3

#01464  END FUNCTION

#01465  FUNCTION enter_kb_chat
#01467    SwitchToMenu menu = kb_chat_message_control
          DoNotPause
#01468  END FUNCTION

#01469  FUNCTION attach_new_stats_menu stats_left_width = 150
          stats_right_width = 160

#01471    VerifyParam param = menu_id
          func = attach_new_stats_menu
          NULL
#01472    VerifyParam param = container_id
          func = attach_new_stats_menu
          NULL
#01473    VerifyParam param = left_container_id
          func = attach_new_stats_menu
          NULL
#01474    VerifyParam param = right_container_id
          func = attach_new_stats_menu
          NULL
#01475    CreateAndAttachMenu STRUCT{
            type = verticalmenu
            id = GLOBAL.menu_id
            parent = GLOBAL.container_id
            game_menu_properties blue_top eventhandlers = ARRAY(

              STRUCT{
                type = showeventhandler
                target = "update_stats_elements"
                }

            )
            }

#01486    IF GotParam is_pro_menu
#01488    ELSE
#01490      CreateAndAttachMenu STRUCT{
              type = textmenuelement
              auto_id parent = GLOBAL.menu_id
              text = "edit stats"
              static dont_gray drawer = title
              }

#01498    END IF
#01499    CreateAndAttachMenu STRUCT{
            type = menucontainer
            auto_id show_all_children parent = GLOBAL.menu_id
            eventhandler = STRUCT{
              type = leftrightcontroller
              left = GLOBAL.left_container_id
              right = GLOBAL.right_container_id
              }
            children = ARRAY(

              STRUCT{
                type = verticalmenu
                cas_right_menu_properties y = 0.0
                x = GLOBAL.stats_left_width
                w = GLOBAL.stats_right_width
                id = GLOBAL.right_container_id
                }
              STRUCT{
                type = verticalmenu
                cas_left_menu_properties y = 0.0
                w = GLOBAL.stats_left_width
                id = GLOBAL.left_container_id
                }

            )
            }

#01523    IF GotParam is_pro_menu
#01525    ELSE
#01527      VerifyParam param = points_available_id
            func = attach_new_stats_menu
            NULL
#01528      CreateAndAttachMenu STRUCT{
              type = textmenuelement
              id = GLOBAL.points_available_id
              parent = GLOBAL.menu_id
              text = "current points"
              static dont_gray drawer = points_available_property
              lock_layout y = 222.0
              }

#01542    END IF
#01543    IF GotParam is_pro_menu
#01545      ForEachIn cas_stats_display_children do = attach_new_right_stats_menu_item
            params = STRUCT{
              container_id = GLOBAL.right_container_id
              is_pro_menu stats_right_width = GLOBAL.stats_right_width
              }

#01546    ELSE
#01547      ForEachIn cas_stats_display_children do = attach_new_right_stats_menu_item
            params = STRUCT{
              container_id = GLOBAL.right_container_id
              stats_right_width = GLOBAL.stats_right_width
              }

#01548    END IF
#01549    IF GotParam is_pro_menu
#01552      ForEachIn cas_stats_children do = attach_new_left_stats_menu_item
            params = STRUCT{
              container_id = GLOBAL.left_container_id
              is_pro_menu }

#01554    ELSE
#01555      ForEachIn cas_stats_children do = attach_new_left_stats_menu_item
            params = STRUCT{
              container_id = GLOBAL.left_container_id
              }

#01556    END IF
#01557  END FUNCTION

#01558  FUNCTION update_stats_elements
#01560    printf "Update Stats Elements"
#01561    UpdateStatsElements
#01562  END FUNCTION

#01563  FUNCTION update_stats_ui
#01565    UpdateStatsUI NULL
#01566  END FUNCTION

#01567  stats_left_menu_properties = STRUCT{
          x = 0.0
          y = 0.0
          w = 150.0
          h = 400.0
          just_center_x just_center_y not_rounded }

#01574  stats_right_menu_properties = STRUCT{
          x = 150.0
          y = 0.0
          w = 200.0
          h = 400.0
          just_center_x just_center_y not_rounded }

#01581  FUNCTION attach_new_left_stats_menu_item
#01583    IF GotParam is_pro_menu
#01584      CreateAndAttachMenu STRUCT{
              NULL parent = GLOBAL.container_id
              y = 0.0
              w = 140.0
              }

#01592    ELSE
#01593      CreateAndAttachMenu STRUCT{
              NULL parent = GLOBAL.container_id
              y = 0.0
              }

#01600    END IF
#01601  END FUNCTION

#01602  FUNCTION attach_new_right_stats_menu_item
#01604    IF GotParam is_pro_menu
#01605      VerifyParam param = pro_id
            func = attach_new_right_stats_menu_item
            NULL
#01606      VerifyParam param = stats_right_width
            func = attach_new_right_stats_menu_item
            NULL
#01607      CreateAndAttachMenu STRUCT{
              NULL id = GLOBAL.pro_id
              parent = GLOBAL.container_id
              y = 0.0
              w = GLOBAL.stats_right_width
              static dont_gray r = 100
              g = 65
              b = 0
              a = 115
              }

#01618    ELSE
#01619      CreateAndAttachMenu STRUCT{
              NULL parent = GLOBAL.container_id
              y = 0.0
              w = 170.0
              }

#01627      AttachEventHandler STRUCT{
              type = ChooseEventHandler
              object = GLOBAL.id
              target = "go_back"
              params = STRUCT{
                id = GLOBAL.container_id
                }
              }

#01636    END IF
#01637  END FUNCTION

#01638  FUNCTION send_chat_message
#01640    printf "Sending chat message..."
#01641    SendChatMessage NULL
#01642  END FUNCTION

#01643  FUNCTION clear_keyboard_string
#01645    VerifyParam param = control_id
          func = clear_keyboard_string
          NULL
#01646    IF GotParam string
#01648      LaunchEvent type = setcontents
            target = GLOBAL.control_id
            string = GLOBAL.string

#01649    ELSE
#01650      LaunchEvent type = setcontents
            target = GLOBAL.control_id
            string = ""

#01651    END IF
#01652  END FUNCTION

#01653  FUNCTION PreRunQueuedScripts
#01655    SetSlomo 100.0
#01656  END FUNCTION

#01657  FUNCTION PostRunQueuedScripts
#01659    SetSlomo 1
#01660  END FUNCTION

#01661  FUNCTION choose_team_on_show
#01663    IF InTeamGame
#01664      MakeTextMenuElementStatic GLOBAL.ElementId
            nonstatic = 1

#01665    ELSE
#01666      MakeTextMenuElementStatic GLOBAL.ElementId

#01667    END IF
#01668  END FUNCTION

#01669  FUNCTION do_choose_team
#01671    ChooseTeam NULL
#01672  END FUNCTION
