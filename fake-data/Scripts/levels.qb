
#00001  FUNCTION InitLevelLoadProcess
#00002    printf "***********************InitLevelLoadProcess"
#00003    UninitializeFrontEndSprites
#00004    Cleanup
#00005    StopMusic
#00006    PauseMusic
#00007    ClearMusicTrackList
#00008    MouseShowCursor 0
#00009  END FUNCTION

#00011  FUNCTION PreFreezeScreen
#00012    SetArenaSize 1
#00013  END FUNCTION

#00015  FUNCTION PostFreezeScreen
#00016    SetArenaSize
#00017  END FUNCTION

#00019  FUNCTION SetupForClipPlane
#00020    EnableFog
#00021    SetClippingDistances near = 12
          far = 1792

#00024    SetBackgroundColor STRUCT{
            r = 128
            g = 128
            b = 128
            alpha = 0
            }

#00031    SetFogDistance distance = 1280

#00033    SetFogColor r = 128
          g = 128
          b = 128

#00037  END FUNCTION

#00039  FUNCTION PreLevelLoad
#00040    SetArenaSize 1
#00041    SetUpBasicLights
#00042    SetSfxReverb Instant
#00043    ClearScoreGoals
#00044    SetScoreGoal score = 10000
          goalscript = DefaultHiScoreScript
          goal = GOAL_HIGHSCORE

#00048    SetScoreGoal score = 50000
          goalscript = DefaultProScoreScript
          goal = GOAL_PROSCORE

#00052    ClearMusicTrackList
#00053    IF GameModeEquals is_parkeditor
#00054      IF InNetGame
#00055        DisplayProperLoadingScreen net
#00056      ELSE
#00057        DisplayLoadingScreen "images\loadscrn_editor.png"
#00058      END IF
#00059    END IF
#00060  END FUNCTION

#00062  FUNCTION DisplayProperLoadingScreen
#00063    printf "DisplayProperLoadingScreen"
#00064    IF InMultiPlayerGame
#00065    ELSE
#00066      Change FirstTimeFromSkateshop = 0

#00068    END IF
#00069    IF GotParam SkateShop
#00070      DisplayLoadingScreen "images\loadscrn_ss.png"
#00071    ELSE
#00072      IF EnteringNetGame
#00073        printf "Entering Net Game"
#00074        IF OnServer
#00075          DisplayLoadingScreen "images\loadscrn_Online.png"
#00076        ELSE
#00077          DisplayLoadingScreen "images\loadscrn_Online2.png"
#00078        END IF
#00079      ELSE
#00080        IF IsTrue FirstTimeFromSkateshop
#00081          DisplayLoadingScreen "images\loadscrn_2player.png"
#00082        ELSE
#00083          IF InNetGame
#00084            IF GameModeEquals is_horse
#00085              DisplayLoadingScreen "images\loadscrn_horse.png"
#00086            ELSE
#00087              IF GameTypePrefEquals netking
#00088                DisplayLoadingScreen "images\loadscrn_koth.png"
#00089              ELSE
#00090                IF GameTypePrefEquals netslap
#00091                  DisplayLoadingScreen "images\loadscrn_slap.png"
#00092                ELSE
#00093                  IF GameTypePrefEquals netgraffiti
#00094                    DisplayLoadingScreen "images\loadscrn_Graffiti.png"
#00095                  ELSE
#00096                    IF GameTypePrefEquals nettrickattack
#00097                      DisplayLoadingScreen "images\loadscrn_trick_attack.png"
#00098                    ELSE
#00099                      IF GameTypePrefEquals ctf
#00100                        DisplayLoadingScreen "images\loadscrn_ctf.png"
#00101                      ELSE
#00102                        IF GameTypePrefEquals ownthezone
#00103                          DisplayLoadingScreen "images\loadscrn_zone.png"
#00104                        ELSE
#00105                          IF GameTypePrefEquals beachball
#00106                            DisplayLoadingScreen "images\loadscrn_beach.png"
#00107                          ELSE
#00108                            IF InSplitScreenGame
#00109                              DisplayLoadingScreen "images\loadscrn_2player.png"
#00110                            ELSE
#00111                              LevelLoadingScreens NULL
#00112                            END IF
#00113                          END IF
#00114                        END IF
#00115                      END IF
#00116                    END IF
#00117                  END IF
#00118                END IF
#00119              END IF
#00120            END IF
#00121          ELSE
#00122            LevelLoadingScreens NULL
#00123          END IF
#00124        END IF
#00125      END IF
#00126    END IF
#00127  END FUNCTION

#00129  FUNCTION LevelLoadingScreens
#00130    IF GotParam Foundry
#00131      DisplayLoadingScreen "images\loadscrn_foundry.png"
#00132    END IF
#00133    IF GotParam Canada
#00134      DisplayLoadingScreen "images\loadscrn_can.png"
#00135    END IF
#00136    IF GotParam Suburbia
#00137      DisplayLoadingScreen "images\loadscrn_sub.png"
#00138    END IF
#00139    IF GotParam SI
#00140      IF IsCareerMode
#00141        DisplayLoadingScreen "images\loadscrn_si_comp.png"
#00142      ELSE
#00143        DisplayLoadingScreen "images\loadscrn_si.png"
#00144      END IF
#00145    END IF
#00146    IF GotParam Airport
#00147      DisplayLoadingScreen "images\loadscrn_ap.png"
#00148    END IF
#00149    IF GotParam Rio
#00150      IF IsCareerMode
#00151        DisplayLoadingScreen "images\loadscrn_rio_comp.png"
#00152      ELSE
#00153        DisplayLoadingScreen "images\loadscrn_rio.png"
#00154      END IF
#00155    END IF
#00156    IF GotParam LA
#00157      DisplayLoadingScreen "images\loadscrn_la.png"
#00158    END IF
#00159    IF GotParam Tokyo
#00160      IF IsCareerMode
#00161        DisplayLoadingScreen "images\loadscrn_tok_comp.png"
#00162      ELSE
#00163        DisplayLoadingScreen "images\loadscrn_tok.png"
#00164      END IF
#00165    END IF
#00166    IF GotParam Ship
#00167      DisplayLoadingScreen "images\loadscrn_ship.png"
#00168    END IF
#00169    IF GotParam Oil
#00170      DisplayLoadingScreen "images\loadscrn_generic.png"
#00171    END IF
#00172    IF GotParam Tutorials
#00173      DisplayLoadingScreen "images\loadscrn_tutorials.png"
#00174    END IF
#00175    IF GotParam Warehouse
#00176      DisplayLoadingScreen "images\loadscrn_warehouse.png"
#00177    END IF
#00178    IF GotParam Burnside
#00179      DisplayLoadingScreen "images\loadscrn_burnside.png"
#00180    END IF
#00181    IF GotParam Roswell
#00182      DisplayLoadingScreen "images\loadscrn_roswell.png"
#00183    END IF
#00184    IF GotParam Rooftops
#00185      DisplayLoadingScreen "images\loadscrn_generic.png"
#00186    END IF
#00187    IF GotParam Generic
#00188      DisplayLoadingScreen "images\loadscrn_generic.png"
#00189    END IF
#00190  END FUNCTION

#00192  FUNCTION PostLevelLoad
#00193    SetArenaSize
#00194  END FUNCTION

#00196  FUNCTION script_assert NULL
#00197    printf "SCRIPT ASSERT!"
#00198    printf NULL
#00199    LOOP
#00200      wait 1 gameframe
#00201    END LOOP
#00202  END FUNCTION

#00204  FUNCTION request_level
#00205    printf "Running script: request_level"
#00206    IF GotParam level
#00207      RequestLevel GLOBAL.level

#00209    ELSE
#00210      script_assert "request_level needs a level param"
#00211    END IF
#00212  END FUNCTION

#00214  FUNCTION LoadLevel
#00215    printf "Running script: LoadLevel"
#00216    MemPushContext 0
#00217    PreLevelLoad
#00218    LaunchLevel NULL
#00219    PostLevelLoad
#00220    MemPopContext
#00221  END FUNCTION

#00223  FUNCTION FireUpGame
#00224    ToggleSkater on
#00225    SetGameState on
#00226    LaunchMenuScreen screen = game_menu

#00228  END FUNCTION

#00230  LevelNum_Skateshop = 0

#00232  LevelNum_Foundry = 1

#00234  LevelNum_Canada = 2

#00236  LevelNum_Rio = 3

#00238  LevelNum_Suburbia = 4

#00240  LevelNum_Airport = 5

#00242  LevelNum_SkaterIsland = 6

#00244  LevelNum_LA = 7

#00246  LevelNum_Tokyo = 8

#00248  LevelNum_Ship = 9

#00250  LevelNum_Oil = 10

#00252  LevelNum_Tutorials = 11

#00254  LevelNum_Warehouse = 12

#00256  LevelNum_Burnside = 13

#00258  LevelNum_Roswell = 14

#00260  LevelNum_Rooftops = 15

#00262  FUNCTION DistinguishLevels
#00263    SetCompetition LevelNum_Rio
#00264    SetCompetition LevelNum_Tokyo
#00265    SetCompetition LevelNum_SkaterIsland
#00266  END FUNCTION

#00268  FUNCTION Load_Ap
#00269    AddMusicTrack "music\ap_amb"
#00270    DisplayProperLoadingScreen Airport
#00271    CareerStartLevel level = LevelNum_Airport

#00273    SetUpAirportLights
#00274    IF InMultiPlayerGame
#00275      loadlevelgeometry level = "Levels\ap\ap.bsp"
            Sky = ""
            Pre_set = "Ap"

#00279      SetBackgroundColor STRUCT{
              r = 151
              g = 180
              b = 214
              alpha = 0
              }

#00286    ELSE
#00287      loadlevelgeometry level = "Levels\ap\ap.bsp"
            Sky = "Levels\Ap_Sky\Ap_Sky.bsp"
            Pre_set = "Ap"

#00291    END IF
#00292    IF ClipPlaneEnabled
#00293      SetupForClipPlane
#00294    ELSE
#00295      SetBackgroundColor STRUCT{
              r = 151
              g = 180
              b = 214
              alpha = 0
              }

#00302      SetClippingDistances near = 12
            far = 92000

#00305    END IF
#00306    LoadNodeArray "levels\ap\ap.qb"
#00307    LoadTerrain
#00308    SetRenderModeVU
#00309    SetBSPAmbientColor STRUCT{
            r = 0
            g = 0
            b = 0
            alpha = 0
            }

#00316    Ap_Startup
#00317    UnloadPreFile "Ap.pre" dont_assert
#00318  END FUNCTION

#00320  FUNCTION Load_Can
#00321    AddMusicTrack "music\can_amb"
#00322    DisplayProperLoadingScreen Canada
#00323    CareerStartLevel level = LevelNum_Canada

#00325    SetUpCanadaLights
#00326    IF InMultiPlayerGame
#00327      loadlevelgeometry level = "Levels\can\can.bsp"
            Sky = ""
            Pre_set = "Can"

#00331    ELSE
#00332      loadlevelgeometry level = "Levels\can\can.bsp"
            Sky = "Levels\Can_Sky\Can_Sky.bsp"
            Pre_set = "Can"

#00336    END IF
#00337    LoadNodeArray "levels\Can\Can.qb"
#00338    LoadTerrain
#00339    SetRenderModeVU
#00340    SetBSPAmbientColor STRUCT{
            r = 0
            g = 0
            b = 0
            alpha = 0
            }

#00347    SetMovementVelocity 1500
#00348    SetRotateVelocity 120
#00349    IF ClipPlaneEnabled
#00350      SetupForClipPlane
#00351    ELSE
#00352      EnableFog
#00353      SetBackgroundColor STRUCT{
              r = 167
              g = 175
              b = 197
              alpha = 0
              }

#00360      SetFogColor r = 155
            g = 160
            b = 185

#00364      SetFogDistance distance = 3000

#00366      SetClippingDistances near = 12
            far = 16000

#00369    END IF
#00370    Can_Startup
#00371    UnloadPreFile "Can.pre" dont_assert
#00372  END FUNCTION

#00374  FUNCTION Load_Foun
#00375    AddMusicTrack "music\foun_amb"
#00376    DisplayProperLoadingScreen Foundry
#00377    CareerStartLevel level = LevelNum_Foundry

#00379    SetUpFoundryLights
#00380    loadlevelgeometry level = "Levels\Foun\Foun.bsp"
          Sky = ""
          Pre_set = "Foun"

#00384    LoadNodeArray "levels\Foun\Foun.qb"
#00385    LoadTerrain
#00386    SetRenderModeVU
#00387    IF ClipPlaneEnabled
#00388      SetupForClipPlane
#00389    ELSE
#00390      SetBackgroundColor STRUCT{
              r = 0
              g = 0
              b = 0
              alpha = 0
              }

#00397      SetClippingDistances near = 12
            far = 20000

#00400    END IF
#00401    SetBSPAmbientColor STRUCT{
            r = 0
            g = 0
            b = 0
            alpha = 0
            }

#00408    Foun_Startup
#00409    UnloadPreFile "Foun.pre" dont_assert
#00410  END FUNCTION

#00412  FUNCTION Load_La
#00413    AddMusicTrack "music\la_amb"
#00414    DisplayProperLoadingScreen LA
#00415    CareerStartLevel level = LevelNum_LA

#00417    SetUpLosAngelesLights
#00418    IF InMultiPlayerGame
#00419      loadlevelgeometry level = "Levels\la\la.bsp"
            Sky = ""
            Pre_set = "La"

#00423      IF ClipPlaneEnabled
#00424        SetupForClipPlane
#00425      ELSE
#00426        SetBackgroundColor STRUCT{
                r = 158
                g = 202
                b = 220
                alpha = 0
                }

#00433        SetClippingDistances near = 12
              far = 14000

#00436      END IF
#00437    ELSE
#00438      loadlevelgeometry level = "Levels\la\la.bsp"
            Sky = "Levels\La_Sky\La_Sky.bsp"
            Pre_set = "La"

#00442      IF ClipPlaneEnabled
#00443        SetupForClipPlane
#00444      ELSE
#00445        SetBackgroundColor STRUCT{
                r = 0
                g = 0
                b = 0
                alpha = 0
                }

#00452        SetClippingDistances near = 12
              far = 14000

#00455      END IF
#00456    END IF
#00457    LoadNodeArray "levels\la\la.qb"
#00458    LoadTerrain
#00459    SetRenderModeVU
#00460    SetBSPAmbientColor STRUCT{
            r = 0
            g = 0
            b = 0
            alpha = 0
            }

#00467    La_Startup
#00468    UnloadPreFile "La.pre" dont_assert
#00469  END FUNCTION

#00471  FUNCTION Load_Rio
#00472    AddMusicTrack "music\rio_amb"
#00473    DisplayProperLoadingScreen Rio
#00474    CareerStartLevel level = LevelNum_Rio
          competition
#00476    SetUpRioDeJaneiroLights
#00477    IF InMultiPlayerGame
#00478      loadlevelgeometry level = "Levels\Rio\Rio.bsp"
            Sky = ""
            Pre_set = "Rio"

#00482      IF ClipPlaneEnabled
#00483        SetupForClipPlane
#00484      ELSE
#00485        SetBackgroundColor STRUCT{
                r = 145
                g = 201
                b = 242
                alpha = 0
                }

#00492        SetClippingDistances near = 12
              far = 30000

#00495      END IF
#00496    ELSE
#00497      loadlevelgeometry level = "Levels\Rio\Rio.bsp"
            Sky = "Levels\Rio_Sky\Rio_Sky.bsp"
            Pre_set = "Rio"

#00501      IF ClipPlaneEnabled
#00502        SetupForClipPlane
#00503      ELSE
#00504        SetBackgroundColor STRUCT{
                r = 100
                g = 110
                b = 200
                alpha = 0
                }

#00511        SetClippingDistances near = 12
              far = 30000

#00514      END IF
#00515    END IF
#00516    LoadNodeArray "levels\Rio\Rio.qb"
#00517    LoadTerrain
#00518    SetRenderModeVU
#00519    SetBSPAmbientColor STRUCT{
            r = 0
            g = 0
            b = 0
            alpha = 0
            }

#00526    SetMovementVelocity 2000
#00527    SetRotateVelocity 120
#00528    Rio_Startup
#00529    UnloadPreFile "Rio.pre" dont_assert
#00530  END FUNCTION

#00532  FUNCTION Load_Shp
#00533    AddMusicTrack "music\ship_amb"
#00534    DisplayProperLoadingScreen Ship
#00535    CareerStartLevel level = LevelNum_Ship

#00537    SetUpShipLights
#00538    IF InMultiPlayerGame
#00539      loadlevelgeometry level = "Levels\shp\shp.bsp"
            Sky = ""
            Pre_set = "Shp"

#00543      IF ClipPlaneEnabled
#00544        SetupForClipPlane
#00545      ELSE
#00546        SetBackgroundColor STRUCT{
                r = 143
                g = 205
                b = 233
                alpha = 0
                }

#00553        SetClippingDistances near = 12
              far = 32000

#00556      END IF
#00557    ELSE
#00558      loadlevelgeometry level = "Levels\shp\shp.bsp"
            Sky = "Levels\Shp_Sky\Shp_Sky.bsp"
            Pre_set = "Shp"

#00562      IF ClipPlaneEnabled
#00563        SetupForClipPlane
#00564      ELSE
#00565        SetBackgroundColor STRUCT{
                r = 0
                g = 100
                b = 255
                alpha = 0
                }

#00572        SetClippingDistances near = 12
              far = 32000

#00575      END IF
#00576    END IF
#00577    LoadNodeArray "levels\shp\shp.qb"
#00578    LoadTerrain
#00579    SetRenderModeVU
#00580    SetBSPAmbientColor STRUCT{
            r = 0
            g = 0
            b = 0
            alpha = 0
            }

#00587    SetMovementVelocity 1500
#00588    SetRotateVelocity 120
#00589    SHP_Startup
#00590    UnloadPreFile "Shp.pre" dont_assert
#00591  END FUNCTION

#00593  FUNCTION Load_Si
#00594    AddMusicTrack "music\si_amb"
#00595    DisplayProperLoadingScreen SI
#00596    CareerStartLevel level = LevelNum_SkaterIsland
          competition
#00598    SetUpSkatersIslandLights
#00599    IF InMultiPlayerGame
#00600      loadlevelgeometry level = "Levels\si\si.bsp"
            Sky = ""
            Pre_set = "SI"

#00604      IF ClipPlaneEnabled
#00605        SetupForClipPlane
#00606      ELSE
#00607        SetBackgroundColor STRUCT{
                r = 158
                g = 211
                b = 255
                alpha = 0
                }

#00614        SetClippingDistances near = 12
              far = 12000

#00617      END IF
#00618    ELSE
#00619      loadlevelgeometry level = "Levels\si\si.bsp"
            Sky = "Levels\SI_Sky\SI_Sky.bsp"
            Pre_set = "SI"

#00623      IF ClipPlaneEnabled
#00624        SetupForClipPlane
#00625      ELSE
#00626        SetBackgroundColor STRUCT{
                r = 55
                g = 135
                b = 200
                alpha = 0
                }

#00633        SetClippingDistances near = 12
              far = 12000

#00636      END IF
#00637    END IF
#00638    LoadNodeArray "Levels\Si\Si.qb"
#00639    LoadTerrain
#00640    SetRenderModeVU
#00641    SetBSPAmbientColor STRUCT{
            r = 0
            g = 0
            b = 0
            alpha = 0
            }

#00648    Si_Startup
#00649    UnloadPreFile "Si.pre" dont_assert
#00650  END FUNCTION

#00652  FUNCTION Load_Sub
#00653    AddMusicTrack "music\sub_amb"
#00654    DisplayProperLoadingScreen Suburbia
#00655    CareerStartLevel level = LevelNum_Suburbia

#00657    SetUpSuburbiaLights
#00658    IF InMultiPlayerGame
#00659      loadlevelgeometry level = "Levels\sub\sub.bsp"
            Sky = ""
            Pre_set = "Sub"

#00663      IF ClipPlaneEnabled
#00664        SetupForClipPlane
#00665      ELSE
#00666        SetBackgroundColor STRUCT{
                r = 165
                g = 180
                b = 202
                alpha = 0
                }

#00673        SetClippingDistances near = 12
              far = 13500

#00676      END IF
#00677    ELSE
#00678      loadlevelgeometry level = "Levels\sub\sub.bsp"
            Sky = "Levels\Sub_Sky\Sub_Sky.bsp"
            Pre_set = "Sub"

#00682      IF ClipPlaneEnabled
#00683        SetupForClipPlane
#00684      ELSE
#00685        SetBackgroundColor STRUCT{
                r = 80
                g = 80
                b = 80
                alpha = 0
                }

#00692        SetClippingDistances near = 12
              far = 13500

#00695      END IF
#00696    END IF
#00697    LoadNodeArray "levels\sub\sub.qb"
#00698    LoadTerrain
#00699    SetRenderModeVU
#00700    SetBSPAmbientColor STRUCT{
            r = 0
            g = 0
            b = 0
            alpha = 0
            }

#00707    Sub_Startup
#00708    UnloadPreFile "Sub.pre" dont_assert
#00709  END FUNCTION

#00711  FUNCTION Load_Tok
#00712    AddMusicTrack "music\tok_amb"
#00713    DisplayProperLoadingScreen Tokyo
#00714    CareerStartLevel level = LevelNum_Tokyo
          competition
#00716    SetUpTokyoLights
#00717    IF InNetGame
#00718      loadlevelgeometry level = "Levels\tok\tok.bsp"
            Sky = ""
            Pre_set = "Tok"

#00722      IF ClipPlaneEnabled
#00723        SetupForClipPlane
#00724      ELSE
#00725        SetBackgroundColor STRUCT{
                r = 16
                g = 17
                b = 26
                alpha = 0
                }

#00732        SetClippingDistances near = 12
              far = 17000

#00735        EnableFog
#00736        SetFogColor r = 0
              g = 0
              b = 0

#00740        SetFogDistance distance = 1000

#00742      END IF
#00743    ELSE
#00744      loadlevelgeometry level = "Levels\tok\tok.bsp"
            Sky = "Levels\Tok_Sky\Tok_Sky.bsp"
            Pre_set = "Tok"

#00748      IF ClipPlaneEnabled
#00749        SetupForClipPlane
#00750      ELSE
#00751        SetBackgroundColor STRUCT{
                r = 0
                g = 0
                b = 0
                alpha = 0
                }

#00758        SetClippingDistances near = 12
              far = 17000

#00761        EnableFog
#00762        SetFogColor r = 0
              g = 0
              b = 0

#00766        SetFogDistance distance = 1000

#00768      END IF
#00769    END IF
#00770    LoadNodeArray "levels\tok\tok.qb"
#00771    LoadTerrain
#00772    SetRenderModeVU
#00773    SetBSPAmbientColor STRUCT{
            r = 0
            g = 0
            b = 0
            alpha = 0
            }

#00780    SetMovementVelocity 1000
#00781    SetRotateVelocity 120
#00782    Tok_Startup
#00783    UnloadPreFile "Tok.pre" dont_assert
#00784  END FUNCTION

#00786  FUNCTION Load_Oil
#00787    DisplayProperLoadingScreen Oil
#00788    CareerStartLevel level = LevelNum_Oil

#00790    SetUpOilLights
#00791    IF InMultiPlayerGame
#00792      loadlevelgeometry level = "Levels\oil\oil.bsp"
            Sky = ""
            Pre_set = "Oil"

#00796    ELSE
#00797      loadlevelgeometry level = "Levels\oil\oil.bsp"
            Sky = "Levels\Oil_Sky\Oil_Sky.bsp"
            Pre_set = "Oil"

#00801    END IF
#00802    LoadNodeArray "levels\oil\oil.qb"
#00803    SetRenderModeVU
#00804    SetBackgroundColor STRUCT{
            r = 0
            g = 0
            b = 0
            alpha = 0
            }

#00811    SetBSPAmbientColor STRUCT{
            r = 0
            g = 0
            b = 0
            alpha = 0
            }

#00818    SetClippingDistances near = 12
          far = 17000

#00821    SetMovementVelocity 1000
#00822    SetRotateVelocity 120
#00823    Oil_Startup
#00824    EnableFog
#00825    SetFogColor r = 0
          g = 0
          b = 0

#00829    SetFogDistance distance = 1000

#00831    UnloadPreFile "Oil.pre" dont_assert
#00832  END FUNCTION

#00834  FUNCTION Load_Foo
#00835    SetUpFoundryLights
#00836    loadlevelgeometry level = "Levels\foo\foo.bsp"
          Sky = ""
          Pre_set = "Foo"

#00840    LoadNodeArray "levels\foo\foo.qb"
#00841    LoadTerrain
#00842    SetRenderModeVU
#00843    SetBackgroundColor STRUCT{
            r = 16
            g = 16
            b = 32
            alpha = 0
            }

#00850    SetBSPAmbientColor STRUCT{
            r = 0
            g = 0
            b = 0
            alpha = 0
            }

#00857    SetClippingDistances near = 12
          far = 22000

#00860    Foo_Startup
#00861    UnloadPreFile "Foo.pre" dont_assert
#00862  END FUNCTION

#00864  FUNCTION Load_Roof
#00865    DisplayProperLoadingScreen Rooftops
#00866    CareerStartLevel level = LevelNum_Rooftops

#00868    SetUpOilLights
#00869    IF InMultiPlayerGame
#00870      loadlevelgeometry level = "Levels\Roof\Roof.bsp"
            Sky = ""
            Pre_set = "Roof"

#00874    ELSE
#00875      loadlevelgeometry level = "Levels\Roof\Roof.bsp"
            Sky = "Levels\Roof_Sky\Roof_Sky.bsp"
            Pre_set = "Roof"

#00879    END IF
#00880    LoadNodeArray "levels\Roof\Roof.qb"
#00881    LoadTerrain
#00882    SetRenderModeVU
#00883    SetBackgroundColor STRUCT{
            r = 150
            g = 120
            b = 61
            alpha = 0
            }

#00890    SetBSPAmbientColor STRUCT{
            r = 0
            g = 0
            b = 0
            alpha = 0
            }

#00897    SetClippingDistances near = 12
          far = 22000

#00900    Roof_Startup
#00901    UnloadPreFile "Roof.pre" dont_assert
#00902  END FUNCTION

#00904  FUNCTION Load_Sk3Ed
#00905  END FUNCTION

#00907  FUNCTION Load_Ware
#00908    DisplayProperLoadingScreen Warehouse
#00909    AddMusicTrack "music\ware_amb"
#00910    CareerStartLevel level = LevelNum_Warehouse

#00912    SetUpWareLights
#00913    loadlevelgeometry level = "Levels\ware\ware.bsp"
          Sky = ""
          Pre_set = "Ware"

#00917    LoadNodeArray "levels\ware\ware.qb"
#00918    LoadTerrain
#00919    Ware_Startup
#00920    UnloadPreFile "Ware.pre" dont_assert
#00921  END FUNCTION

#00923  FUNCTION Load_Burn
#00924    DisplayProperLoadingScreen Burnside
#00925    AddMusicTrack "music\burn_amb"
#00926    CareerStartLevel level = LevelNum_Burnside

#00928    SetUpBurnLights
#00929    IF InMultiPlayerGame
#00930      loadlevelgeometry level = "Levels\burn\burn.bsp"
            Sky = ""
            Pre_set = "Burn"

#00934      IF ClipPlaneEnabled
#00935        SetupForClipPlane
#00936      ELSE
#00937        SetBackgroundColor STRUCT{
                r = 159
                g = 183
                b = 214
                alpha = 0
                }

#00944        SetClippingDistances near = 12
              far = 20000

#00947      END IF
#00948    ELSE
#00949      loadlevelgeometry level = "Levels\burn\burn.bsp"
            Sky = "Levels\Burn_Sky\Burn_Sky.bsp"
            Pre_set = "Burn"

#00953      IF ClipPlaneEnabled
#00954        SetupForClipPlane
#00955      ELSE
#00956        SetBackgroundColor STRUCT{
                r = 128
                g = 128
                b = 128
                alpha = 0
                }

#00963        SetClippingDistances near = 12
              far = 20000

#00966      END IF
#00967    END IF
#00968    LoadNodeArray "levels\burn\burn.qb"
#00969    SetBSPAmbientColor STRUCT{
            r = 84
            g = 84
            b = 84
            alpha = 0
            }

#00976    LoadTerrain
#00977    Burn_Startup
#00978    UnloadPreFile "Burn.pre" dont_assert
#00979  END FUNCTION

#00981  FUNCTION Load_Ros
#00982    DisplayProperLoadingScreen Roswell
#00983    AddMusicTrack "music\ros_amb"
#00984    CareerStartLevel level = LevelNum_Roswell

#00986    SetUpRoswellLights
#00987    IF InMultiPlayerGame
#00988      loadlevelgeometry level = "Levels\ros\ros.bsp"
            Sky = ""
            Pre_set = "Ros"

#00992      IF ClipPlaneEnabled
#00993        SetupForClipPlane
#00994      ELSE
#00995        SetBackgroundColor STRUCT{
                r = 12
                g = 8
                b = 9
                alpha = 0
                }

#01002        SetClippingDistances near = 12
              far = 9000

#01005      END IF
#01006    ELSE
#01007      loadlevelgeometry level = "Levels\ros\ros.bsp"
            Sky = "Levels\Ros_Sky\Ros_Sky.bsp"
            Pre_set = "Ros"

#01011      IF ClipPlaneEnabled
#01012        SetupForClipPlane
#01013      ELSE
#01014        SetBackgroundColor STRUCT{
                r = 0
                g = 0
                b = 0
                alpha = 0
                }

#01021        SetClippingDistances near = 12
              far = 9000

#01024      END IF
#01025    END IF
#01026    LoadNodeArray "levels\ros\ros.qb"
#01027    SetBSPAmbientColor STRUCT{
            r = 84
            g = 84
            b = 84
            alpha = 0
            }

#01034    LoadTerrain
#01035    UnloadPreFile "Ros.pre" dont_assert
#01036  END FUNCTION

#01038  FUNCTION Load_Tut
#01039    DisplayProperLoadingScreen Tutorials
#01040    CareerStartLevel level = LevelNum_Tutorials

#01042    SetUpLosAngelesLights
#01043    loadlevelgeometry level = "Levels\tut\tut.bsp"
          Sky = "Levels\Sk3Ed_Bch_Sky\Sk3Ed_Bch_Sky.bsp"
          Pre_set = "Tut"

#01047    LoadNodeArray "levels\tut\tut.qb"
#01048    IF ClipPlaneEnabled
#01049      SetupForClipPlane
#01050    ELSE
#01051      SetBackgroundColor STRUCT{
              r = 128
              g = 128
              b = 128
              alpha = 0
              }

#01058      SetClippingDistances near = 12
            far = 20000

#01061    END IF
#01062    SetBSPAmbientColor STRUCT{
            r = 84
            g = 84
            b = 84
            alpha = 0
            }

#01069    LoadTerrain
#01070    Tut_Startup
#01071    UnloadPreFile "Tut.pre" dont_assert
#01072  END FUNCTION

#01074  FUNCTION Load_Foo2
#01075    SetUpWareLights
#01076    loadlevelgeometry level = "Levels\foo2\foo2.bsp"
          Sky = ""

#01079    LoadNodeArray "levels\foo2\foo2.qb"
#01080    LoadTerrain
#01081    IF ClipPlaneEnabled
#01082      SetupForClipPlane
#01083    ELSE
#01084      SetBackgroundColor STRUCT{
              r = 0
              g = 0
              b = 0
              alpha = 0
              }

#01091      SetClippingDistances near = 12
            far = 12000

#01094    END IF
#01095    SetBSPAmbientColor STRUCT{
            r = 84
            g = 84
            b = 84
            alpha = 0
            }

#01102    SetDFFAmbientColor STRUCT{
            r = 84
            g = 84
            b = 84
            alpha = 0
            }

#01109  END FUNCTION

#01111  FUNCTION Load_Foo_Car
#01112    loadlevelgeometry level = "Levels\foo_car\foo_car.bsp"
          Sky = ""

#01115    LoadNodeArray "levels\foo_car\foo_car.qb"
#01116    SetBackgroundColor STRUCT{
            r = 120
            g = 120
            b = 120
            alpha = 0
            }

#01123    SetBSPAmbientColor STRUCT{
            r = 0
            g = 0
            b = 0
            alpha = 0
            }

#01130    SetDFFAmbientColor STRUCT{
            r = 120
            g = 120
            b = 120
            alpha = 0
            }

#01137    SetClippingDistances near = 12
          far = 12000

#01140  END FUNCTION

#01142  FUNCTION Load_Foo_CircCars
#01143    SetUpWareLights
#01144    loadlevelgeometry level = "Levels\foo_circcars\foo_circcars.bsp"
          Sky = ""

#01147    LoadNodeArray "levels\foo_circcars\foo_circcars.qb"
#01148    LoadTerrain
#01149    SetBackgroundColor STRUCT{
            r = 0
            g = 0
            b = 0
            alpha = 0
            }

#01156    SetBSPAmbientColor STRUCT{
            r = 84
            g = 84
            b = 84
            alpha = 0
            }

#01163    SetDFFAmbientColor STRUCT{
            r = 84
            g = 84
            b = 84
            alpha = 0
            }

#01170    SetClippingDistances near = 12
          far = 12000

#01173    Foo_Startup
#01174  END FUNCTION

#01176  FUNCTION Load_Foo_CircCars2
#01177    SetUpWareLights
#01178    loadlevelgeometry level = "Levels\foo_circcars2\foo_circcars2.bsp"
          Sky = ""

#01181    LoadNodeArray "levels\foo_circcars2\foo_circcars2.qb"
#01182    LoadTerrain
#01183    SetBackgroundColor STRUCT{
            r = 0
            g = 0
            b = 0
            alpha = 0
            }

#01190    SetBSPAmbientColor STRUCT{
            r = 84
            g = 84
            b = 84
            alpha = 0
            }

#01197    SetDFFAmbientColor STRUCT{
            r = 84
            g = 84
            b = 84
            alpha = 0
            }

#01204    SetClippingDistances near = 12
          far = 12000

#01207    Foo_Startup
#01208  END FUNCTION

#01210  FUNCTION Load_SkateShop
#01211    DisplayProperLoadingScreen SkateShop
#01212    CareerStartLevel level = LevelNum_Skateshop

#01214    SetUpSkateShopLights
#01215    loadlevelgeometry level = "Levels\skateshop\skateshop.bsp"
          Sky = ""
          Pre_set = "SkateShop"
          KeepTexturesInMemory
#01219    LoadNodeArray "levels\skateshop\skateshop.qb"
#01220    LoadTerrain
#01221    IF ClipPlaneEnabled
#01222      SetupForClipPlane
#01223    ELSE
#01224      SetBackgroundColor STRUCT{
              r = 0
              g = 0
              b = 32
              alpha = 0
              }

#01231      SetClippingDistances near = 12
            far = 12000

#01234    END IF
#01235    SetBSPAmbientColor STRUCT{
            r = 0
            g = 0
            b = 0
            alpha = 0
            }

#01242    SkateShop_Startup
#01243    UnloadPreFile "SkateShop.pre" dont_assert
#01244  END FUNCTION

#01246  master_level_list = ARRAY(

          STRUCT{
            level_name = "Foundry"
            load_script = Load_Foun
            level_id = foundry_id
            regular_level once_on_startup = StartRunScript
            once_on_exit = EndRunScript
            unlock_flag = LEVEL_UNLOCKED_FOUNDRY
            supports_ctf supports_own supports_bball }
          STRUCT{
            level_name = "Canada"
            load_script = Load_Can
            level_id = canada_id
            regular_level once_on_startup = StartRunScript
            once_on_exit = EndRunScript
            unlock_flag = LEVEL_UNLOCKED_CANADA
            supports_ctf supports_own supports_bball }
          STRUCT{
            level_name = "Rio"
            load_script = Load_Rio
            level_id = rio_id
            regular_level once_on_startup = StartRunScript
            once_on_exit = EndRunScript
            unlock_flag = LEVEL_UNLOCKED_RIO
            supports_ctf supports_own supports_bball }
          STRUCT{
            level_name = "Suburbia"
            load_script = Load_Sub
            level_id = suburbia_id
            regular_level once_on_startup = StartRunScript
            once_on_exit = EndRunScript
            unlock_flag = LEVEL_UNLOCKED_SUBURBIA
            supports_ctf supports_own supports_bball }
          STRUCT{
            level_name = "Airport"
            load_script = Load_Ap
            level_id = airport_id
            regular_level once_on_startup = StartRunScript
            once_on_exit = EndRunScript
            unlock_flag = LEVEL_UNLOCKED_AIRPORT
            supports_ctf supports_own supports_bball }
          STRUCT{
            level_name = "Skater Island"
            load_script = Load_Si
            level_id = skatersisland_id
            regular_level once_on_startup = StartRunScript
            once_on_exit = EndRunScript
            unlock_flag = LEVEL_UNLOCKED_SKATERISLAND
            supports_ctf supports_own supports_bball }
          STRUCT{
            level_name = "Los Angeles"
            load_script = Load_La
            level_id = la_id
            regular_level once_on_startup = StartRunScript
            once_on_exit = EndRunScript
            unlock_flag = LEVEL_UNLOCKED_LOSANGELES
            supports_ctf supports_own supports_bball }
          STRUCT{
            level_name = "Tokyo"
            load_script = Load_Tok
            level_id = tokyo_id
            regular_level once_on_startup = StartRunScript
            once_on_exit = EndRunScript
            unlock_flag = LEVEL_UNLOCKED_TOKYO
            supports_ctf supports_own supports_bball }
          STRUCT{
            level_name = "Cruise Ship"
            load_script = Load_Shp
            level_id = ship_id
            regular_level once_on_startup = StartRunScript
            once_on_exit = EndRunScript
            unlock_flag = LEVEL_UNLOCKED_SHIP
            special_flag = SPECIAL_HAS_SEEN_SHIP
            supports_ctf supports_own supports_bball }
          STRUCT{
            level_name = "Warehouse"
            load_script = Load_Ware
            level_id = warehouse_id
            regular_level unlock_flag = LEVEL_UNLOCKED_WAREHOUSE
            nocareer secret_level supports_ctf supports_own supports_bball }
          STRUCT{
            level_name = "Burnside"
            load_script = Load_Burn
            level_id = burnside_id
            regular_level nocareer unlock_flag = LEVEL_UNLOCKED_BURNSIDE
            secret_level supports_ctf supports_own supports_bball }
          STRUCT{
            level_name = "Roswell"
            load_script = Load_Ros
            level_id = roswell_id
            nocareer unlock_flag = LEVEL_UNLOCKED_ROSWELL
            regular_level secret_level supports_ctf supports_own supports_bball }
          STRUCT{
            level_name = "Play custom park"
            load_script = custom_park
            level_id = custom_park
            debug_level }
          STRUCT{
            level_name = "Tutorials"
            load_script = Load_Tut
            level_id = tutorials_id
            nocareer once_on_startup = CPF_Tut_LoadingScript
            }
          STRUCT{
            level_name = "Foo"
            load_script = Load_Foo
            level_id = foo_id
            debug_level }
          STRUCT{
            level_name = "Oil"
            load_script = Load_Oil
            level_id = oil_id
            nocareer notPS2_level }
          STRUCT{
            level_name = "Rooftops"
            load_script = Load_Roof
            level_id = rooftops_id
            nocareer notPS2_level }
          STRUCT{
            level_name = "Skate Shop"
            load_script = Load_SkateShop
            level_id = skateshop_id
            debug_level }
          STRUCT{
            level_name = "Cars driving in circle"
            load_script = Load_Foo_CircCars
            level_id = foo_circcars_id
            debug_level }
          STRUCT{
            level_name = "Car with wheels rotating"
            load_script = Load_Foo_Car
            level_id = foo_carwheels_id
            debug_level }
          STRUCT{
            level_name = "Foo2 25 Peds"
            load_script = Load_Foo2
            level_id = foo2_25peds_id
            debug_level }

        )

#01388  ui_colors =
#01389
        STRUCT{
          ui_white = ARRAY(

            160 160 160 128
          )
          ui_dark_white = ARRAY(

            96 96 96 128
          )
          ui_blue = ARRAY(

            0 0 255 128
          )
          ui_dark_blue = ARRAY(

            0 0 96 128
          )
          ui_red = ARRAY(

            255 0 0 128
          )
          ui_dark_red = ARRAY(

            96 0 0 128
          )
          ui_green = ARRAY(

            0 255 0 128
          )
          ui_dark_green = ARRAY(

            0 96 0 128
          )
          ui_yellow = ARRAY(

            255 255 0 128
          )
          ui_dark_yellow = ARRAY(

            96 96 0 128
          )
          ui_cyan = ARRAY(

            32 255 255 128
          )
          ui_dark_cyan = ARRAY(

            8 96 96 128
          )
          ui_invisible = ARRAY(

            0 0 0 0
          )
          ui_t50_dk_white = ARRAY(

            96 96 96 64
          )
          ui_t50_dk_red = ARRAY(

            96 0 0 64
          )
          ui_t50_dk_green = ARRAY(

            0 96 0 64
          )
          ui_t50_dk_blue = ARRAY(

            0 0 96 64
          )
          }

#01461  indexed_ui_colors =
#01462
        ARRAY(
          ui_white ui_dark_white ui_blue ui_dark_blue ui_red ui_dark_red ui_green ui_dark_green ui_yellow ui_dark_yellow ui_cyan ui_dark_cyan ui_t50_dk_white ui_t50_dk_red ui_t50_dk_green ui_t50_dk_blue ui_invisible
        )

#01467  invisible_colors =
#01468
        STRUCT{
          normal = ui_invisible
          highlight = ui_invisible
          selected = ui_invisible
          hot = ui_invisible
          gray = ui_invisible
          }

#01477  element_colors =
#01478
        STRUCT{
          normal = ARRAY(

            255 255 255 128
          )
          highlight = ARRAY(

            255 255 255 128
          )
          selected = ARRAY(

            255 255 255 128
          )
          gray = ARRAY(

            255 255 255 128
          )
          }

#01498  black_colors =
#01499
        STRUCT{
          normal = ARRAY(

            0 0 0 128
          )
          highlight = ARRAY(

            0 0 0 128
          )
          selected = ARRAY(

            0 0 0 128
          )
          gray = ARRAY(

            0 0 0 128
          )
          }

#01519  image_button_highlight_colors =
#01520
        STRUCT{
          normal = ARRAY(

            128 128 128 128
          )
          highlight = ARRAY(

            255 255 255 128
          )
          selected = ARRAY(

            192 192 192 128
          )
          gray = ARRAY(

            64 64 64 128
          )
          hot = ARRAY(

            192 192 192 128
          )
          }

#01544  on_off_colors =
#01545
        STRUCT{
          normal = ARRAY(

            255 255 255 128
          )
          highlight = ARRAY(

            255 255 255 128
          )
          selected = ARRAY(

            255 255 255 128
          )
          gray = ARRAY(

            64 64 64 128
          )
          }

#01565  bright_colors =
#01566
        STRUCT{
          normal = ARRAY(

            255 255 255 128
          )
          highlight = ARRAY(

            255 255 255 128
          )
          selected = ARRAY(

            255 255 255 128
          )
          gray = ARRAY(

            255 255 255 128
          )
          }

#01586  gamespy_colors =
#01587
        STRUCT{
          normal = ARRAY(

            128 128 128 128
          )
          highlight = ARRAY(

            128 128 128 128
          )
          selected = ARRAY(

            128 128 128 128
          )
          gray = ARRAY(

            128 128 128 128
          )
          }

#01607  border_colors_1 =
#01608
        STRUCT{
          normal = ARRAY(

            128 128 128 128
          )
          highlight = ARRAY(

            255 255 255 128
          )
          selected = ARRAY(

            192 192 192 128
          )
          gray = ARRAY(

            64 64 64 128
          )
          hot = ARRAY(

            192 192 192 128
          )
          }

#01632  img_fg_hilite_colors_1 =
#01633
        STRUCT{
          normal = ARRAY(

            128 128 128 128
          )
          highlight = ARRAY(

            255 255 255 128
          )
          selected = ARRAY(

            128 128 128 128
          )
          gray = ARRAY(

            96 96 96 128
          )
          hot = ARRAY(

            192 192 192 128
          )
          }

#01657  border_colors_2 =
#01658
        STRUCT{
          normal = ARRAY(

            128 128 128 64
          )
          highlight = ARRAY(

            255 255 255 64
          )
          selected = ARRAY(

            192 192 192 64
          )
          gray = ARRAY(

            64 64 64 64
          )
          hot = ARRAY(

            255 255 255 64
          )
          }

#01682  colors_scroll_background =
#01683
        STRUCT{
          normal = ARRAY(

            0 0 0 128
          )
          highlight = ARRAY(

            0 0 192 128
          )
          selected = ARRAY(

            0 0 128 128
          )
          gray = ARRAY(

            0 0 0 128
          )
          }

#01703  bg_window_foreground_colors =
#01704
        STRUCT{
          normal = ARRAY(

            192 192 192 80
          )
          highlight = ARRAY(

            192 192 192 80
          )
          selected = ARRAY(

            192 192 192 80
          )
          gray = ARRAY(

            192 192 192 80
          )
          }

#01724  client_area_colors =
#01725
        STRUCT{
          normal = ARRAY(

            16 16 16 64
          )
          highlight = ARRAY(

            16 16 16 64
          )
          selected = ARRAY(

            16 16 16 64
          )
          gray = ARRAY(

            16 16 16 64
          )
          }

#01745  list_item_highlight_colors =
#01746
        STRUCT{
          normal = ARRAY(

            0 0 0 0
          )
          highlight = ARRAY(

            0 0 192 128
          )
          selected = ARRAY(

            0 0 128 128
          )
          gray = ARRAY(

            0 0 0 0
          )
          hot = ARRAY(

            0 0 128 128
          )
          }

#01770  button_bg_colors =
#01771
        STRUCT{
          normal = ARRAY(

            96 48 12 128
          )
          selected = ARRAY(

            96 96 96 128
          )
          highlight = ARRAY(

            0 0 128 128
          )
          hot = ARRAY(

            135 65 15 128
          )
          gray = ARRAY(

            32 16 4 128
          )
          }

#01795  orange_colors =
#01796
        STRUCT{
          normal = ARRAY(

            135 65 15 128
          )
          selected = ARRAY(

            135 65 15 128
          )
          highlight = ARRAY(

            135 65 15 128
          )
          hot = ARRAY(

            135 65 15 128
          )
          gray = ARRAY(

            66 32 8 128
          )
          }

#01820  image_button_orange_highlight_colors =
#01821
        STRUCT{
          normal = ARRAY(

            135 65 15 128
          )
          highlight = ARRAY(

            255 130 30 128
          )
          selected = ARRAY(

            192 97 23 128
          )
          gray = ARRAY(

            64 32 7 128
          )
          hot = ARRAY(

            192 97 23 128
          )
          }

#01845  button_fg_colors =
#01846
        STRUCT{
          normal = ARRAY(

            255 255 255 128
          )
          highlight = ARRAY(

            255 255 255 128
          )
          selected = ARRAY(

            255 255 255 128
          )
          gray = ARRAY(

            64 64 64 128
          )
          }

#01866  playeritem_button_colors =
#01867
        STRUCT{
          normal = ARRAY(

            96 96 96 128
          )
          selected = ARRAY(

            96 96 96 128
          )
          highlight = ARRAY(

            192 192 0 128
          )
          hot = ARRAY(

            128 128 128 128
          )
          gray = ARRAY(

            64 64 64 128
          )
          }

#01891  cap_icon_colors =
#01892
        STRUCT{
          normal = ui_white
          highlight = ui_white
          selected = ui_white
          hot = ui_white
          gray = ARRAY(

            64 64 64 128
          )
          }

#01904  mode_icon_bg_colors =
#01905
        STRUCT{
          normal = ARRAY(

            135 65 15 128
          )
          selected = ARRAY(

            135 65 15 128
          )
          highlight = ARRAY(

            135 65 15 128
          )
          hot = ARRAY(

            135 65 15 128
          )
          gray = ARRAY(

            135 65 15 128
          )
          }

#01929  slider_thumb_properties =
#01930
        STRUCT{
          checksum = slider_thumb_properties
          x = 0.0
          y = 0.0
          type = imageelement
          noselect stretch draggable background foreground_colors = image_button_highlight_colors
          style = pushbutton
          texture_list = ARRAY(

            "GSpyMenu\scroll.png" "GSpyMenu\scroll.png" "GSpyMenu\scroll.png"
          )
          }

#01944  slider_button_properties =
#01945
        STRUCT{
          checksum = slider_button_properties
          x = 0.0
          y = 0.0
          type = imageelement
          noselect stretch repeattime = 100
          foreground_colors = image_button_highlight_colors
          style = pushbutton
          texture_list = ARRAY(

            "GSpyMenu\arrow.png"
          )
          }

#01960  slider_element_properties =
#01961
        STRUCT{
          checksum = slider_element_properties
          type = sliderelement
          style = scrollbar
          x = 0.0
          y = 0.0
          size = 14
          background_colors = element_colors
          border_colors = element_colors
          vertical noselect repeattime = 100
          thumb_style = slider_thumb_properties
          button_style = slider_button_properties
          forceclip drawfront }

#01976  background_window_properties =
#01977
        STRUCT{
          checksum = background_window_properties
          type = imageelement
          style = background
          scalex = 0.5
          scaley = 0.5
          windowclip static dont_gray texture_list = ARRAY(

            "GSpyMenu\stretchmenu1.png" "GSpyMenu\stretchmenu1.png" "GSpyMenu\stretchmenu1.png" "GSpyMenu\stretchmenu1.png" "GSpyMenu\lowercorner4.png" "GSpyMenu\stretchmenu1.png" "GSpyMenu\lowercorner.png" "GSpyMenu\stretchmenu1.png" "GSpyMenu\stretchmenu1.png"
          )
          foreground_colors = bg_window_foreground_colors
          drawbehind align_x = STRUCT{
            parent full }
          align_y = STRUCT{
            parent full }
          }

#01995  background_full_round_window_properties =
#01996
        STRUCT{
          checksum = background_full_round_window_properties
          type = imageelement
          style = background
          scalex = 0.5
          scaley = 0.5
          windowclip static dont_gray texture_list = ARRAY(

            "GSpyMenu\lowercorner2.png" "GSpyMenu\stretchmenu1.png" "GSpyMenu\lowercorner3.png" "GSpyMenu\stretchmenu1.png" "GSpyMenu\lowercorner4.png" "GSpyMenu\stretchmenu1.png" "GSpyMenu\lowercorner.png" "GSpyMenu\stretchmenu1.png" "GSpyMenu\stretchmenu1.png"
          )
          foreground_colors = bg_window_foreground_colors
          align_x = STRUCT{
            parent full }
          align_y = STRUCT{
            parent full }
          }

#02014  background_title_window_properties =
#02015
        STRUCT{
          checksum = background_title_window_properties
          type = imageelement
          style = background
          windowclip static dont_gray texture_list = ARRAY(

            "GSpyMenu\topper2.png" "GSpyMenu\topperstretch.png" "GSpyMenu\topper1.png" "GSpyMenu\topperstretch.png" "GSpyMenu\topperstretch.png" "GSpyMenu\topperstretch.png" "GSpyMenu\topperstretch.png" "GSpyMenu\topperstretch.png" "GSpyMenu\topperstretch.png"
          )
          foreground_colors = bg_window_foreground_colors
          align_x = STRUCT{
            parent full }
          align_y = STRUCT{
            parent full }
          }

#02031  client_area_properties =
#02032
        STRUCT{
          checksum = client_area_properties
          type = uielement
          x = 0
          y = 0
          w = 1
          h = 1
          align_x = STRUCT{
            parent client full }
          align_y = STRUCT{
            parent client full }
          noselect static dont_gray background drawbehind background_colors = client_area_colors
          }

#02047  game_modeicon_properties =
#02048
        STRUCT{
          checksum = game_modeicon_properties
          type = imageelement
          w = 32.0
          h = 32.0
          noselect static dont_gray stretch foreground_colors = bright_colors
          background_colors = mode_icon_bg_colors
          background style = imagelist
          activetexture = 0
          texture_list = ARRAY(

            "GSpyMenu\icon-versus.png" "GSpyMenu\icon-versus.png" "GSpyMenu\icon-spray.png" "GSpyMenu\icon-slappers.png" "GSpyMenu\icon-koth.png" "GSpyMenu\icon-ball.png" "GSpyMenu\icon-otz.png" "GSpyMenu\icon-ctf.png"
          )
          }

#02064  game_status_properties =
#02065
        STRUCT{
          checksum = game_status_properties
          x = 40
          y = 2
          w = 16.0
          h = 16.0
          type = imageelement
          noselect static dont_gray stretch foreground_colors = bright_colors
          style = imagelist
          activetexture = 0
          texture_list = ARRAY(

            "GSpyMenu\no.png" "GSpyMenu\play.png"
          )
          }

#02082  game_lock_properties =
#02083
        STRUCT{
          checksum = game_lock_properties
          type = imageelement
          x = 14
          y = 5
          w = 8.0
          h = 8.0
          noselect static dont_gray stretch foreground_colors = bright_colors
          style = imagelist
          activetexture = 0
          texture_list = ARRAY(

            "GSpyMenu\locked.png"
          )
          }

#02100  game_players_properties =
#02101
        STRUCT{
          checksum = game_players_properties
          type = textelement
          y = 50
          w = 64.0
          h = 12.0
          texheight = 9
          spacing = 1
          align_x = STRUCT{
            parent client left_left right_right }
          just_top_y noselect static dont_gray foreground_colors = bright_colors
          truncate drawer = keyboard_property
          max_text = 1
          }

#02117  game_name_properties =
#02118
        STRUCT{
          checksum = game_name_properties
          type = textelement
          y = 38
          w = 64.0
          h = 12.0
          texheight = 9
          spacing = 1
          align_x = STRUCT{
            parent client left_left right_right }
          just_top_y noselect static dont_gray foreground_colors = bright_colors
          truncate drawer = keyboard_property
          max_text = 1
          }

#02134  game_item_properties =
#02135
        STRUCT{
          checksum = game_item_properties
          type = uielement
          w = 80.0
          h = 64.0
          parent_aligned border = 1.0
          padding_h = 0.0
          padding_v = 2.0
          border_colors = bright_colors
          border_when_selected children = ARRAY(

            STRUCT{
              checksum = game_name_properties
              }
            STRUCT{
              checksum = game_players_properties
              }
            STRUCT{
              checksum = game_lock_properties
              }
            STRUCT{
              checksum = game_ping_properties
              }
            STRUCT{
              checksum = game_status_properties
              }
            STRUCT{
              checksum = game_modeicon_properties
              parms = STRUCT{
                align_x = STRUCT{
                  parent client center }
                align_y = STRUCT{
                  parent client top_top }
                }
              }

          )
          }

#02175  game_ping_properties =
#02176
        STRUCT{
          checksum = game_ping_properties
          type = pingelement
          x = 58
          y = 2
          w = 12.0
          h = 22.0
          parent_aligned noselect static dont_gray value_table = ARRAY(

            STRUCT{
              dots = 8
              val = 20
              col = 1
              }
            STRUCT{
              dots = 7
              val = 50
              col = 1
              }
            STRUCT{
              dots = 6
              val = 100
              col = 1
              }
            STRUCT{
              dots = 5
              val = 150
              col = 2
              }
            STRUCT{
              dots = 4
              val = 200
              col = 2
              }
            STRUCT{
              dots = 3
              val = 300
              col = 2
              }
            STRUCT{
              dots = 2
              val = 400
              col = 3
              }
            STRUCT{
              dots = 1
              val = 500
              col = 3
              }

          )
          foreground_colors = STRUCT{
            normal = ARRAY(

              128 128 128 128
            )
            highlight = ARRAY(

              0 255 0 128
            )
            selected = ARRAY(

              255 128 0 128
            )
            gray = ARRAY(

              196 0 0 128
            )
            }
          }

#02248  window_title_properties =
#02249
        STRUCT{
          checksum = window_title_properties
          type = textelement
          w = 128.0
          h = 32.0
          texheight = 20
          just_center_y just_left_x padding_h = 20
          spacing = 0
          parent_aligned noselect static dont_gray foreground_colors = bright_colors
          background = background_title_window_properties
          truncate drawer = title
          max_text = 1
          }

#02264  game_server_list_scroller =
#02265
        STRUCT{
          checksum = game_server_list_scroller
          type = sliderelement
          style = scrollbar
          x = 0.0
          y = 0.0
          size = 14
          background_colors = element_colors
          vertical noselect ticks = PAIR[64.0; 192.0]
          repeattime = 100
          thumb_style = slider_thumb_properties
          button_style = slider_button_properties
          forceclip drawfront }

#02280  game_server_list =
#02281
        STRUCT{
          checksum = game_server_list
          id = gs_server_list
          type = scrollwindow
          style = scroll
          x = 0.0
          y = 0.0
          w = 400.0
          h = 220.0
          spacing_h = 8.0
          spacing_v = 4.0
          parent_aligned parent_resized border_colors = border_colors_2
          border = 1.0
          noselect scrollv = game_server_list_scroller
          children = ARRAY(

            STRUCT{
              checksum = client_area_properties
              }

          )
          }

#02305  game_create_window =
#02306
        STRUCT{
          checksum = game_create_window
          id = gs_create_window
          type = uielement
          x = 0.0
          y = 0.0
          w = 400.0
          h = 220.0
          parent_aligned parent_resized border_colors = border_colors_2
          border = 1.0
          noselect children = ARRAY(

            STRUCT{
              checksum = player_name_entry
              parms = STRUCT{
                id = gs_server_name
                x = 10
                y = 25
                text = "Gearbox"
                tip = "Enter a name for your server."
                caption = STRUCT{
                  checksum = text_caption
                  parms = STRUCT{
                    text = "Server Name"
                    }
                  }
                }
              }
            STRUCT{
              checksum = player_name_entry
              parms = STRUCT{
                id = gs_cr_password
                text = ""
                maxentrychars = 8
                tip = "Enter a password for your server."
                x = 10
                y = 70
                caption = STRUCT{
                  checksum = text_caption
                  parms = STRUCT{
                    text = "Password"
                    }
                  }
                }
              }
            STRUCT{
              checksum = full_combo_box_def
              parms = STRUCT{
                id = gs_max_players
                x = 180
                y = 25
                w = 170
                choices = choices_num_players
                tip = "Set the maximum number of players in your game."
                caption = STRUCT{
                  checksum = text_caption
                  parms = STRUCT{
                    text = "Max Players"
                    }
                  }
                }
              }
            STRUCT{
              checksum = client_area_properties
              }

          )
          }

#02376  game_staging_window =
#02377
        STRUCT{
          checksum = game_staging_window
          id = gs_staging_window
          type = uielement
          x = 0.0
          y = 0.0
          w = 400.0
          h = 220.0
          parent_aligned parent_resized border_colors = border_colors_2
          border = 1.0
          noselect children = ARRAY(

            STRUCT{
              checksum = full_combo_box_def_2
              parms = STRUCT{
                id = gs_staging_ready
                x = 10
                y = 25
                style = checkbox
                prompt = "Ready"
                }
              }
            STRUCT{
              checksum = room_players_list
              parms = STRUCT{
                id = gs_staging_players_list
                x = 180
                y = 25
                w = 190
                h = 140
                style = tiledvertical
                caption = STRUCT{
                  checksum = text_caption
                  parms = STRUCT{
                    text = "Joined Players"
                    }
                  }
                }
              }
            STRUCT{
              checksum = client_area_properties
              }

          )
          }

#02424  game_options_window =
#02425
        STRUCT{
          checksum = game_options_window
          id = gs_options_window
          type = uielement
          x = 0.0
          y = 0.0
          w = 400.0
          h = 220.0
          parent_aligned parent_resized border_colors = border_colors_2
          border = 1.0
          noselect children = ARRAY(

            STRUCT{
              checksum = player_name_entry
              parms = STRUCT{
                id = gs_nick_entry
                x = 10
                y = 25
                text = "Gearbox"
                tip = "Enter a nick for GameSpy."
                caption = STRUCT{
                  checksum = text_caption
                  parms = STRUCT{
                    text = "GameSpy Nick"
                    }
                  }
                }
              }
            STRUCT{
              checksum = full_combo_box_def
              parms = STRUCT{
                id = gs_update_speed
                style = dropdown
                choices = choices_update_speed
                x = 10
                y = 70
                h = 100
                tip = "Choose a higher setting for higher bandwidth connections."
                caption = STRUCT{
                  checksum = text_caption
                  parms = STRUCT{
                    text = "Server Update Speed"
                    }
                  }
                }
              }
            STRUCT{
              checksum = client_area_properties
              }

          )
          }

#02479  game_filters_window =
#02480
        STRUCT{
          checksum = game_filters_window
          id = gs_filters_window
          type = uielement
          x = 0.0
          y = 0.0
          w = 400.0
          h = 220.0
          parent_aligned parent_resized border_colors = border_colors_2
          border = 1.0
          noselect children = ARRAY(

            STRUCT{
              checksum = full_combo_box_def
              parms = STRUCT{
                id = gs_filter_ping
                x = 5
                y = 25
                h = 100
                style = dropdown
                choices = choices_connect_speed
                caption = STRUCT{
                  checksum = text_caption
                  parms = STRUCT{
                    text = "Connection speed"
                    }
                  }
                }
              }
            STRUCT{
              checksum = full_combo_box_def_2
              parms = STRUCT{
                id = gs_filter_empty
                x = 5
                y = 70
                style = checkbox
                prompt = "Show empty servers"
                caption = STRUCT{
                  checksum = text_caption
                  parms = STRUCT{
                    text = "Server filters"
                    }
                  }
                }
              }
            STRUCT{
              checksum = full_combo_box_def_2
              parms = STRUCT{
                id = gs_filter_full
                x = 5
                y = 90
                style = checkbox
                prompt = "Show full servers"
                }
              }
            STRUCT{
              checksum = full_combo_box_def_2
              parms = STRUCT{
                id = gs_filter_started
                x = 5
                y = 110
                style = checkbox
                prompt = "Show started games"
                }
              }
            STRUCT{
              checksum = full_combo_box_def_2
              parms = STRUCT{
                id = gs_filter_private
                x = 5
                y = 130
                style = checkbox
                prompt = "Show password games"
                }
              }
            STRUCT{
              checksum = full_combo_box_def_2
              parms = STRUCT{
                id = gs_filter_ta
                x = 170
                y = 25
                style = checkbox
                prompt = "Trick Attack"
                caption = STRUCT{
                  checksum = text_caption
                  parms = STRUCT{
                    text = "Show game types"
                    }
                  }
                }
              }
            STRUCT{
              checksum = full_combo_box_def_2
              parms = STRUCT{
                id = gs_filter_graffiti
                x = 170
                y = 45
                style = checkbox
                prompt = "Graffiti"
                }
              }
            STRUCT{
              checksum = full_combo_box_def_2
              parms = STRUCT{
                id = gs_filter_slap
                x = 170
                y = 65
                style = checkbox
                prompt = "Slap!"
                }
              }
            STRUCT{
              checksum = full_combo_box_def_2
              parms = STRUCT{
                id = gs_filter_koth
                x = 170
                y = 85
                style = checkbox
                prompt = "King of the Hill"
                }
              }
            STRUCT{
              checksum = full_combo_box_def_2
              parms = STRUCT{
                id = gs_filter_ball
                x = 170
                y = 105
                style = checkbox
                prompt = "Keep-Away"
                }
              }
            STRUCT{
              checksum = full_combo_box_def_2
              parms = STRUCT{
                id = gs_filter_zone
                x = 170
                y = 125
                style = checkbox
                prompt = "Control Zone"
                }
              }
            STRUCT{
              checksum = full_combo_box_def_2
              parms = STRUCT{
                id = gs_filter_ctf
                x = 170
                y = 145
                style = checkbox
                prompt = "Capture the Flag"
                }
              }
            STRUCT{
              checksum = client_area_properties
              }

          )
          }

#02639  game_serverinfo_window =
#02640
        STRUCT{
          checksum = game_serverinfo_window
          id = gs_serverinfo_window
          type = uielement
          x = 0.0
          y = 0.0
          w = 400.0
          h = 220.0
          parent_aligned parent_resized border_colors = border_colors_2
          border = 1.0
          noselect children = ARRAY(

            STRUCT{
              checksum = static_text
              parms = STRUCT{
                id = gs_si_name
                x = 5
                y = 5
                h = 20
                just_center_x align_x = STRUCT{
                  parent client full }
                texheight = 16
                text = "Server Name"
                truncate }
              }
            STRUCT{
              checksum = static_text
              parms = STRUCT{
                id = gs_si_game_name
                x = 5
                y = 75
                h = 16
                just_left_x texheight = 12
                text = "Trick Attack"
                }
              }
            STRUCT{
              checksum = static_text
              parms = STRUCT{
                id = gs_si_game_open
                x = 5
                y = 95
                h = 16
                just_left_x texheight = 12
                text = "Staging"
                }
              }
            STRUCT{
              checksum = player_name_entry
              parms = STRUCT{
                id = gs_join_password
                maxentrychars = 8
                text = ""
                tip = "This server requires a password to join."
                x = 10
                y = 150
                caption = STRUCT{
                  checksum = text_caption
                  parms = STRUCT{
                    text = "Password"
                    }
                  }
                }
              }
            STRUCT{
              checksum = game_ping_properties
              parms = STRUCT{
                id = gs_si_ping
                x = 5
                y = 35
                }
              }
            STRUCT{
              checksum = game_status_properties
              parms = STRUCT{
                id = gs_si_status
                x = 40
                y = 35
                }
              }
            STRUCT{
              checksum = game_modeicon_properties
              parms = STRUCT{
                id = gs_si_mode
                x = 24
                y = 35
                }
              }
            STRUCT{
              checksum = text_players_list
              parms = STRUCT{
                id = gs_si_players
                h = 120
                caption = STRUCT{
                  checksum = text_caption
                  parms = STRUCT{
                    text = "Players"
                    }
                  }
                }
              }
            STRUCT{
              checksum = client_area_properties
              }

          )
          }

#02749  text_players_list =
#02750
        STRUCT{
          checksum = text_players_list
          type = textelement
          x = 240
          y = 50
          w = 120
          h = 140
          drawer = keyboard_property
          texheight = 14
          truncate max_text = 8
          spacing = 2.0
          just_left_x just_top_y padding_h = 2.0
          padding_v = 2.0
          foreground_colors = bright_colors
          background_colors = black_colors
          border_colors = border_colors_2
          border = 1.0
          noselect }

#02770  gs_sb_text =
#02771
        STRUCT{
          checksum = gs_sb_text
          type = textelement
          w = 30.0
          texheight = 10
          padding_h = 1.0
          parent_aligned just_center_y static dont_gray foreground_colors = bright_colors
          background_colors = invisible_colors
          border_colors = border_colors_2
          border = 1.0
          noselect truncate drawer = keyboard_property
          max_text = 1
          }

#02786  gs_sb_progress =
#02787
        STRUCT{
          checksum = gs_sb_progress
          type = sliderelement
          style = progress
          parent_aligned w = 48
          padding_h = 2.0
          padding_v = 1.0
          static dont_gray background_colors = element_colors
          border_colors = border_colors_2
          border = 1.0
          noselect thumb_style = slider_thumb_properties
          forceclip }

#02801  server_statusbar =
#02802
        STRUCT{
          checksum = server_statusbar
          type = scrollwindow
          style = tiledhorizontal
          parent_aligned x = 0.0
          y = 0.0
          w = 400.0
          h = 18.0
          noselect background_colors = client_area_colors
          border_colors = border_colors_2
          noselect children = ARRAY(

            STRUCT{
              checksum = gs_sb_text
              parms = STRUCT{
                id = gs_tooltip
                parent_resized just_left_x text = "This is the help window"
                }
              }
            STRUCT{
              checksum = gs_sb_progress
              parms = STRUCT{
                id = gs_progress
                }
              }
            STRUCT{
              checksum = gs_sb_text
              parms = STRUCT{
                id = gs_server_count
                w = 64
                just_center_x text = "0"
                }
              }
            STRUCT{
              checksum = client_area_properties
              }

          )
          }

#02843  game_server_list_window =
#02844
        STRUCT{
          checksum = game_server_list_window
          type = scrollwindow
          style = tiledvertical
          parent_aligned parent_resized x = 0.0
          y = 270.0
          w = 400.0
          h = 80.0
          noselect background = background_window_properties
          padding_h = 8.0
          padding_v = 4.0
          children = ARRAY(

            STRUCT{
              checksum = game_options_window
              }
            STRUCT{
              checksum = game_serverinfo_window
              }
            STRUCT{
              checksum = game_filters_window
              }
            STRUCT{
              checksum = game_staging_window
              }
            STRUCT{
              checksum = game_create_window
              }
            STRUCT{
              checksum = game_server_list
              }
            STRUCT{
              checksum = server_statusbar
              }

          )
          }

#02883  server_info_window =
#02884
        STRUCT{
          checksum = server_info_window
          type = scrollwindow
          style = tiledvertical
          x = 10.0
          y = 0.0
          w = 400.0
          h = 265.0
          noselect border_colors = border_colors_1
          children = ARRAY(

            STRUCT{
              checksum = window_title_properties
              parms = STRUCT{
                id = gs_server_window_title
                text = "Server List"
                }
              }
            STRUCT{
              checksum = server_toolbar
              }
            STRUCT{
              checksum = game_server_list_window
              }

          )
          }

#02913  text_button =
#02914
        STRUCT{
          checksum = text_button
          type = textelement
          x = 0.0
          y = 0.0
          w = 32.0
          h = 32.0
          drawer = keyboard_property
          texheight = 12
          just_center_y hot parent_aligned border = 1.0
          background foreground_colors = button_fg_colors
          background_colors = button_bg_colors
          border_colors = border_colors_1
          }

#02930  simple_image_button =
#02931
        STRUCT{
          checksum = simple_image_button
          type = imageelement
          style = pushbutton
          stretch x = 0.0
          y = 0.0
          w = 32.0
          h = 32.0
          parent_aligned hot foreground_colors = img_fg_hilite_colors_1
          background_colors = button_bg_colors
          border_colors = border_colors_1
          }

#02945  text_caption =
#02946
        STRUCT{
          checksum = text_caption
          type = textelement
          x = 0.0
          y = 0.0
          w = 32.0
          h = 16.0
          align_y = STRUCT{
            parent bottom_top }
          align_x = STRUCT{
            parent full }
          nocliptoparent static dont_gray drawer = keyboard_property
          texheight = 10
          just_center_y just_left_x foreground_colors = bright_colors
          background_colors = black_colors
          border_colors = border_colors_1
          }

#02965  static_text =
#02966
        STRUCT{
          checksum = static_text
          type = textelement
          x = 0.0
          y = 0.0
          w = 32.0
          h = 16.0
          static dont_gray drawer = keyboard_property
          texheight = 10
          foreground_colors = bright_colors
          background_colors = black_colors
          border_colors = border_colors_1
          }

#02981  server_toolbar =
#02982
        STRUCT{
          checksum = server_toolbar
          type = scrollwindow
          style = tiledhorizontal
          x = 0.0
          y = 0.0
          w = 400.0
          h = 32.0
          parent_aligned spacing_h = 5.0
          padding_h = 8.0
          noselect background_colors = black_colors
          background children = ARRAY(

            STRUCT{
              checksum = simple_image_button
              parms = STRUCT{
                id = gs_connect
                texture_list = ARRAY(

                  "GSpyMenu\join.png"
                )
                tip = "Connect to GameSpy!"
                }
              }
            STRUCT{
              checksum = simple_image_button
              parms = STRUCT{
                id = gs_create_game
                texture_list = ARRAY(

                  "GSpyMenu\start.png"
                )
                tip = "Create a new staging room."
                }
              }
            STRUCT{
              checksum = simple_image_button
              parms = STRUCT{
                id = gs_start_game
                texture_list = ARRAY(

                  "GSpyMenu\start.png"
                )
                tip = "Start the staging room or game."
                }
              }
            STRUCT{
              checksum = simple_image_button
              parms = STRUCT{
                id = gs_join_game
                texture_list = ARRAY(

                  "GSpyMenu\join.png"
                )
                tip = "Join this game."
                }
              }
            STRUCT{
              checksum = simple_image_button
              parms = STRUCT{
                id = gs_filters
                texture_list = ARRAY(

                  "GSpyMenu\filter.png"
                )
                tip = "Customize server list filters."
                }
              }
            STRUCT{
              checksum = simple_image_button
              parms = STRUCT{
                id = gs_refresh
                texture_list = ARRAY(

                  "GSpyMenu\refresh.png"
                )
                tip = "Refresh the server list."
                }
              }
            STRUCT{
              checksum = simple_image_button
              parms = STRUCT{
                id = gs_stop
                texture_list = ARRAY(

                  "GSpyMenu\stop.png"
                )
                tip = "Stop refreshing the server list."
                }
              }
            STRUCT{
              checksum = simple_image_button
              parms = STRUCT{
                id = gs_back
                texture_list = ARRAY(

                  "GSpyMenu\back.png"
                )
                tip = "Go back to previous screen."
                }
              }
            STRUCT{
              checksum = simple_image_button
              parms = STRUCT{
                id = gs_options
                texture_list = ARRAY(

                  "GSpyMenu\settings.png"
                )
                tip = "Configure GameSpy."
                }
              }
            STRUCT{
              checksum = simple_image_button
              parms = STRUCT{
                id = gs_done
                texture_list = ARRAY(

                  "GSpyMenu\quit.png"
                )
                tip = "Return to the main menu."
                }
              }
            STRUCT{
              checksum = full_combo_box_def
              parms = STRUCT{
                id = gs_game_sort
                style = chooser
                choices = choices_sorting
                x = 170
                y = 13
                h = 120
                align_x = STRUCT{
                  parent client right_right }
                caption = STRUCT{
                  checksum = text_caption
                  parms = STRUCT{
                    text = "Sort"
                    }
                  }
                }
              }

          )
          }

#03129  text_entry_bar =
#03130
        STRUCT{
          checksum = text_entry_bar
          type = textelement
          x = 0.0
          y = 0.0
          w = 128.0
          h = 18.0
          parent_aligned hot drawer = keyboard_string
          texheight = 12
          border = 1.0
          background just_left_x foreground_colors = gamespy_colors
          background_colors = black_colors
          border_colors = border_colors_2
          max_text = 1
          padding_h = 2.0
          padding_v = 1.0
          maxentrychars = 200
          textentry truncate }

#03150  text_screen =
#03151
        STRUCT{
          checksum = text_screen
          type = textelement
          x = 0.0
          y = 0.0
          w = 400.0
          h = 100.0
          parent_aligned parent_resized drawer = keyboard_string
          texheight = 10
          just_left_x just_bottom_y foreground_colors = bright_colors
          background_colors = black_colors
          border_colors = border_colors_2
          border = 1.0
          noselect max_text = 200
          spacing = 2.0
          scrollv = slider_element_properties
          wrap children = ARRAY(

            STRUCT{
              checksum = client_area_properties
              }

          )
          }

#03177  chat_window =
#03178
        STRUCT{
          checksum = chat_window
          type = scrollwindow
          style = tiledvertical
          x = 10.0
          y = 270.0
          w = 400.0
          h = 175.0
          noselect children = ARRAY(

            STRUCT{
              checksum = window_title_properties
              parms = STRUCT{
                text = "Chat"
                }
              }
            STRUCT{
              checksum = chat_text_window
              parms = STRUCT{
                padding_h = 8.0
                padding_v = 4.0
                background = background_window_properties
                }
              }

          )
          }

#03207  gs_logo_properties =
#03208
        STRUCT{
          checksum = game_lock_properties
          type = imageelement
          w = 213.0
          h = 50.0
          x = 418
          y = 388
          noselect static dont_gray stretch foreground_colors = gamespy_colors
          style = imagelist
          activetexture = 0
          texture_list = ARRAY(

            "FrontEndSprites\gslogo.png"
          )
          }

#03225  gs_chat_window =
#03226
        STRUCT{
          checksum = gs_chat_window
          type = scrollwindow
          style = tiledvertical
          x = 10.0
          y = 270.0
          w = 400.0
          h = 175.0
          noselect children = ARRAY(

            STRUCT{
              checksum = window_title_properties
              parms = STRUCT{
                text = "Chat"
                }
              }
            STRUCT{
              checksum = chat_text_container
              }

          )
          }

#03250  chat_text_container =
#03251
        STRUCT{
          checksum = chat_text_container
          type = scrollwindow
          style = tiledhorizontal
          parent_aligned parent_resized x = 0.0
          y = 275.0
          w = 400.0
          h = 80.0
          noselect background = background_window_properties
          padding_h = 8.0
          padding_v = 4.0
          children = ARRAY(

            STRUCT{
              checksum = chat_text_window
              }
            STRUCT{
              checksum = room_players_list
              parms = STRUCT{
                id = gs_room_players_list
                style = scroll
                scrollv = slider_element_properties
                }
              }

          )
          }

#03280  chat_text_window =
#03281
        STRUCT{
          checksum = chat_text_window
          type = scrollwindow
          style = tiledvertical
          parent_aligned parent_resized x = 0.0
          y = 275.0
          w = 400.0
          h = 80.0
          noselect children = ARRAY(

            STRUCT{
              checksum = text_screen
              }
            STRUCT{
              checksum = text_entry_bar
              }

          )
          }

#03302  players_toolbar =
#03303
        STRUCT{
          checksum = players_toolbar
          type = scrollwindow
          style = tiledhorizontal
          x = 0.0
          y = 0.0
          w = 400.0
          h = 18.0
          parent_aligned padding_h = 8.0
          noselect background_colors = client_area_colors
          background children = ARRAY(

            STRUCT{
              checksum = text_button
              parms = STRUCT{
                static dont_gray text = "Ping"
                w = 30
                }
              }
            STRUCT{
              checksum = text_button
              parms = STRUCT{
                static dont_gray text = "Name"
                w = 64
                }
              }

          )
          }

#03334  generic_toolbar =
#03335
        STRUCT{
          checksum = generic_toolbar
          type = scrollwindow
          style = tiledhorizontal
          x = 0.0
          y = 0.0
          w = 400.0
          h = 18.0
          padding_h = 8.0
          noselect background_colors = client_area_colors
          border_colors = border_colors_1
          background }

#03349  players_window =
#03350
        STRUCT{
          checksum = players_window
          type = scrollwindow
          style = tiledvertical
          x = 420.0
          y = 10.0
          w = 200.0
          h = 400.0
          noselect children = ARRAY(

            STRUCT{
              checksum = window_title_properties
              parms = STRUCT{
                text = "Player List"
                }
              }
            STRUCT{
              checksum = players_toolbar
              }
            STRUCT{
              checksum = players_list
              parms = STRUCT{
                parent_resized style = tiledvertical
                }
              }

          )
          }

#03380  gamespy_player_list_scroller =
#03381
        STRUCT{
          checksum = gamespy_player_list_scroller
          type = sliderelement
          style = scrollbar
          x = 0.0
          y = 0.0
          size = 14
          background_colors = element_colors
          vertical noselect ticks = PAIR[20.0; 320.0]
          repeattime = 100
          thumb_style = slider_thumb_properties
          button_style = slider_button_properties
          forceclip drawfront }

#03396  gamespy_players_window =
#03397
        STRUCT{
          checksum = gamespy_players_window
          type = scrollwindow
          style = tiledvertical
          x = 410.0
          y = 0.0
          w = 225.0
          h = 380.0
          noselect children = ARRAY(

            STRUCT{
              checksum = window_title_properties
              parms = STRUCT{
                text = "Player List"
                texheight = 16
                }
              }
            STRUCT{
              checksum = generic_toolbar
              parms = STRUCT{
                background_colors = black_colors
                parent_aligned children = ARRAY(

                  STRUCT{
                    checksum = text_button
                    parms = STRUCT{
                      id = gs_player_sort_ping
                      text = "Ping"
                      w = 30
                      }
                    }
                  STRUCT{
                    checksum = text_button
                    parms = STRUCT{
                      id = gs_player_sort_name
                      text = "Name"
                      w = 64
                      }
                    }

                )
                }
              }
            STRUCT{
              checksum = players_list
              parms = STRUCT{
                parent_resized style = scroll
                scrollv = gamespy_player_list_scroller
                }
              }

          )
          }

#03452  players_list =
#03453
        STRUCT{
          checksum = players_list
          type = scrollwindow
          style = scroll
          x = 0.0
          y = 0.0
          w = 200.0
          h = 380.0
          parent_aligned noselect background = background_window_properties
          padding_h = 8.0
          padding_v = 4.0
          children = ARRAY(

            STRUCT{
              checksum = client_area_properties
              }

          )
          }

#03474  room_players_list =
#03475
        STRUCT{
          checksum = room_players_list
          type = scrollwindow
          x = 0.0
          y = 0.0
          w = 150.0
          h = 380.0
          parent_aligned noselect border = 1.0
          border_colors = border_colors_1
          padding_h = 1.0
          padding_v = 1.0
          children = ARRAY(

            STRUCT{
              checksum = client_area_properties
              }

          )
          }

#03496  player_name_properties =
#03497
        STRUCT{
          checksum = player_name_properties
          type = textelement
          y = 40
          w = 111.0
          h = 20.0
          texheight = 16
          spacing = 0
          padding_h = 6.0
          parent_aligned parent_resized just_center_y just_left_x noselect static dont_gray foreground_colors = bright_colors
          background_colors = invisible_colors
          background truncate drawer = keyboard_string
          max_text = 1
          }

#03513  player_team_properties =
#03514
        STRUCT{
          checksum = player_team_properties
          type = imageelement
          style = pushbutton
          w = 16.0
          h = 16.0
          parent_aligned noselect stretch foreground_colors = bright_colors
          activetexture = 0
          texture_list = ARRAY(

            "GSpyMenu\TH3hudFLAG.png"
          )
          }

#03529  player_msg_properties =
#03530
        STRUCT{
          checksum = player_msg_properties
          type = imageelement
          style = pushbutton
          w = 16.0
          h = 16.0
          parent_aligned hot stretch foreground_colors = playeritem_button_colors
          background_colors = playeritem_button_colors
          border_colors = border_colors_1
          activetexture = 0
          texture_list = ARRAY(

            "GSpyMenu\tinyiconsMSG.png"
          )
          }

#03547  player_ready_properties =
#03548
        STRUCT{
          checksum = player_ready_properties
          type = imageelement
          style = pushbutton
          w = 16.0
          h = 16.0
          parent_aligned noselect stretch foreground_colors = bright_colors
          activetexture = 0
          texture_list = ARRAY(

            "GSpyMenu\tinyiconsCHECK.png"
          )
          }

#03563  player_kick_properties =
#03564
        STRUCT{
          checksum = player_kick_properties
          type = imageelement
          style = pushbutton
          w = 16.0
          h = 16.0
          parent_aligned hot stretch foreground_colors = playeritem_button_colors
          background_colors = playeritem_button_colors
          border_colors = border_colors_1
          activetexture = 0
          texture_list = ARRAY(

            "GSpyMenu\tinyiconsKICK.png"
          )
          }

#03581  player_item =
#03582
        STRUCT{
          checksum = player_item
          type = scrollwindow
          style = tiledhorizontal
          parent_aligned x = 420.0
          y = 10.0
          w = 160.0
          h = 20.0
          align_x = STRUCT{
            parent client full }
          background_colors = list_item_highlight_colors
          noselect children = ARRAY(

            STRUCT{
              checksum = game_ping_properties
              parms = STRUCT{
                padding_v = 2.0
                w = 22
                h = 12
                horizontal parent_aligned }
              }
            STRUCT{
              checksum = player_name_properties
              }
            STRUCT{
              checksum = player_msg_properties
              }
            STRUCT{
              checksum = player_kick_properties
              }

          )
          handlers = ARRAY(

            STRUCT{
              sw_childchoose }

          )
          }

#03623  room_player_item =
#03624
        STRUCT{
          checksum = room_player_item
          type = scrollwindow
          style = tiledhorizontal
          parent_aligned x = 420.0
          y = 10.0
          w = 160.0
          h = 18.0
          align_x = STRUCT{
            parent client full }
          background_colors = list_item_highlight_colors
          noselect children = ARRAY(

            STRUCT{
              checksum = player_name_properties
              parms = STRUCT{
                h = 18
                texheight = 12
                }
              }
            STRUCT{
              checksum = player_msg_properties
              parms = STRUCT{
                w = 18
                h = 18
                }
              }
            STRUCT{
              checksum = player_kick_properties
              parms = STRUCT{
                w = 18
                h = 18
                }
              }

          )
          handlers = ARRAY(

            STRUCT{
              sw_childchoose }

          )
          }

#03669  gamespy_main_window =
#03670
        STRUCT{
          checksum = gamespy_main_window
          type = uielement
          id = gs_main_window
          x = 0.0
          y = 0.0
          w = 640.0
          h = 448.0
          noselect dont_gray background_colors = element_colors
          border_colors = border_colors_1
          children = ARRAY(

            STRUCT{
              checksum = server_info_window
              }
            STRUCT{
              checksum = gs_chat_window
              }
            STRUCT{
              checksum = gamespy_players_window
              }
            STRUCT{
              checksum = gs_logo_properties
              }

          )
          }

#03699  combo_box_def =
#03700
        STRUCT{
          checksum = combo_box_def
          type = scrollwindow
          style = tiledhorizontal
          x = 0.0
          y = 0.0
          w = 18.0
          h = 18.0
          parent_aligned align_x = STRUCT{
            parent full }
          noselect hot border = 1.0
          background background_colors = colors_scroll_background
          border_colors = border_colors_1
          }

#03716  combo_box_def_noborder =
#03717
        STRUCT{
          checksum = combo_box_def_noborder
          type = scrollwindow
          style = tiledhorizontal
          x = 0.0
          y = 0.0
          w = 18.0
          h = 18.0
          parent_aligned align_x = STRUCT{
            parent full }
          noselect hot background_colors = colors_scroll_background
          border_colors = border_colors_1
          }

#03732  combo_btn_def =
#03733
        STRUCT{
          checksum = combo_btn_def
          type = imageelement
          style = pushbutton
          stretch x = 0.0
          y = 0.0
          w = 16.0
          h = 16.0
          parent_aligned rotate = 180
          hot foreground_colors = image_button_highlight_colors
          texture_list = ARRAY(

            "GSpyMenu\arrow.png"
          )
          }

#03750  check_btn_def =
#03751
        STRUCT{
          checksum = check_btn_def
          type = imageelement
          style = imagelist
          just_center_x just_centery_y scalex = 0.8
          scaley = 0.8
          x = 0.0
          y = 0.0
          w = 16.0
          h = 16.0
          parent_aligned hot border = 1.0
          border_colors = border_colors_1
          foreground_colors = image_button_orange_highlight_colors
          texture_list = ARRAY(

            "GSpyMenu\tinyiconsX.png" "GSpyMenu\tinyiconsCHECK.png"
          )
          }

#03771  combo_text_def =
#03772
        STRUCT{
          checksum = combo_text_def
          type = textelement
          x = 0.0
          y = 0.0
          w = 96.0
          h = 16.0
          parent_aligned parent_resized just_center_y just_left_x padding_h = 2.0
          padding_v = 1.0
          noselect static dont_gray foreground_colors = bright_colors
          truncate drawer = keyboard_property
          texheight = 12
          max_text = 1
          }

#03788  combo_item_def =
#03789
        STRUCT{
          checksum = combo_item_def
          type = textelement
          x = 0.0
          y = 0.0
          w = 100.0
          h = 16.0
          parent_aligned just_center_y just_left_x padding_h = 2.0
          align_x = STRUCT{
            parent client full }
          foreground_colors = bright_colors
          hot background background_colors = list_item_highlight_colors
          truncate drawer = keyboard_property
          texheight = 12
          max_text = 1
          handlers = ARRAY(

            STRUCT{
              sw_childchoose }

          )
          }

#03813  combo_slider_element_properties =
#03814
        STRUCT{
          checksum = combo_slider_element_properties
          type = sliderelement
          style = scrollbar
          x = 0.0
          y = 0.0
          size = 14
          background_colors = element_colors
          border_colors = element_colors
          vertical noselect ticks = PAIR[17.0; 90.0]
          repeattime = 100
          thumb_style = slider_thumb_properties
          button_style = slider_button_properties
          forceclip drawfront }

#03830  combo_list_scroll_def =
#03831
        STRUCT{
          checksum = combo_list_scroll_def
          type = scrollwindow
          style = scroll
          x = 0.0
          y = 0.0
          w = 18.0
          h = 80.0
          parent_aligned parent_resized nocliptoparent noselect border = 1.0
          background background_colors = colors_scroll_background
          spacing_v = 1.0
          scrollv = combo_slider_element_properties
          align_x = STRUCT{
            parent full }
          }

#03848  combo_list_sized_def =
#03849
        STRUCT{
          checksum = combo_list_sized_def
          type = scrollwindow
          style = tiledvertical
          x = 0.0
          y = 0.0
          w = 18.0
          h = 40.0
          parent_aligned nocliptoparent noselect border = 1.0
          background background_colors = colors_scroll_background
          spacing_v = 1.0
          align_x = STRUCT{
            parent full }
          }

#03865  combo_layout_def =
#03866
        STRUCT{
          checksum = combo_layout_def
          type = scrollwindow
          style = tiledvertical
          x = 0.0
          y = 0.0
          w = 1.0
          h = 1.0
          noselect align_x = STRUCT{
            parent full }
          align_y = STRUCT{
            parent full }
          }

#03881  full_combo_box_def =
#03882
        STRUCT{
          checksum = full_combo_box_def
          type = selectionelement
          style = chooser
          x = 80.0
          y = 80.0
          w = 150.0
          h = 30.0
          combodef = combo_box_def
          ddownDef = combo_btn_def
          selDef = combo_text_def
          listDef = combo_list_sized_def
          layoutDef = combo_layout_def
          itemDef = combo_item_def
          checkDef = check_btn_def
          choices = empty_choices
          }

#03901  full_combo_box_def_2 =
#03902
        STRUCT{
          checksum = full_combo_box_def_2
          type = selectionelement
          style = chooser
          x = 80.0
          y = 80.0
          w = 150.0
          h = 30.0
          combodef = combo_box_def_noborder
          ddownDef = combo_btn_def
          selDef = combo_text_def
          listDef = combo_list_sized_def
          layoutDef = combo_layout_def
          itemDef = combo_item_def
          checkDef = check_btn_def
          choices = empty_choices
          }

#03921  str_team_blue = 'Blue Team'

#03923  str_team_red = 'Red Team'

#03925  choices_none =
#03926
        ARRAY(
          STRUCT{
            name = "None"
            checksum = choice_none
            }

        )

#03935  empty_choices =
#03936
        ARRAY(
          STRUCT{
            name = "None"
            checksum = choice_none
            value = choices_none
            }

        )

#03946  choices_boolean =
#03947
        ARRAY(
          STRUCT{
            name = "No"
            checksum = choice_no
            value = 0
            }
          STRUCT{
            name = "Yes"
            checksum = choice_yes
            value = 1
            }

        )

#03962  choices_team =
#03963
        ARRAY(
          STRUCT{
            name = "Automatic"
            checksum = choice_team_automatic
            value = -1
            }
          STRUCT{
            name = "Blue Team"
            checksum = choice_team_blue
            value = 0
            }
          STRUCT{
            name = "Red Team"
            checksum = choice_team_red
            value = 1
            }

        )

#03983  choices_endgame_ctf =
#03984
        ARRAY(
          STRUCT{
            name = "Timed"
            checksum = choice_timed
            value = empty_choices
            }
          STRUCT{
            name = "Capture Limit"
            checksum = ctf_capture_limit
            value = choices_capture_limit
            }

        )

#03999  choices_endgame_zone =
#04000
        ARRAY(
          STRUCT{
            name = "Timed"
            checksum = choice_timed
            value = empty_choices
            }
          STRUCT{
            name = "Control All Zones"
            checksum = zone_control_limit
            value = choices_zone_control_limit
            }
          STRUCT{
            name = "Zone Score Limit"
            checksum = zone_time_control_limit
            value = choices_zone_score_limit
            }

        )

#04020  choices_endgame_other =
#04021
        ARRAY(
          STRUCT{
            name = "Timed"
            checksum = choice_timed
            value = empty_choices
            }
          STRUCT{
            name = "Score Limit"
            checksum = choice_score_limit
            value = choices_score_limit
            }

        )

#04036  choices_capture_limit =
#04037
        ARRAY(
          STRUCT{
            name = "5 Captures"
            checksum = capture_limit_5
            value = 5
            }
          STRUCT{
            name = "10 Captures"
            checksum = capture_limit_10
            value = 10
            }
          STRUCT{
            name = "15 Captures"
            checksum = capture_limit_15
            value = 15
            }
          STRUCT{
            name = "20 Captures"
            checksum = capture_limit_20
            value = 20
            }

        )

#04062  choices_zone_control_limit =
#04063
        ARRAY(
          STRUCT{
            name = "1 Time"
            checksum = zone_control_limit_1
            value = 1
            }
          STRUCT{
            name = "2 Times"
            checksum = zone_control_limit_2
            value = 2
            }
          STRUCT{
            name = "5 Times"
            checksum = zone_control_limit_5
            value = 5
            }
          STRUCT{
            name = "10 Times"
            checksum = zone_control_limit_10
            value = 10
            }

        )

#04088  choices_score_limit =
#04089
        ARRAY(
          STRUCT{
            name = "250,000 pts"
            checksum = score_250k
            value = 250000
            }
          STRUCT{
            name = "500,000 pts"
            checksum = score_500k
            value = 500000
            }
          STRUCT{
            name = "2,000,000 pts"
            checksum = score_2m
            value = 2000000
            }
          STRUCT{
            name = "5,000,000 pts"
            checksum = score_5m
            value = 5000000
            }
          STRUCT{
            name = "10,000,000 pts"
            checksum = score_10m
            value = 10000000
            }
          STRUCT{
            name = "20,000,000 pts"
            checksum = score_20m
            value = 20000000
            }
          STRUCT{
            name = "50,000,000 pts"
            checksum = score_50m
            value = 50000000
            }

        )

#04129  choices_zone_score_limit =
#04130
        ARRAY(
          STRUCT{
            name = "500 pts"
            checksum = score_500
            value = 500
            }
          STRUCT{
            name = "750 pts"
            checksum = score_750
            value = 750
            }
          STRUCT{
            name = "1,500 pts"
            checksum = score_1500
            value = 1500
            }
          STRUCT{
            name = "3,000 pts"
            checksum = score_3000
            value = 3000
            }
          STRUCT{
            name = "5,000 pts"
            checksum = score_5000
            value = 5000
            }
          STRUCT{
            name = "10,000 pts"
            checksum = score_10000
            value = 10000
            }

        )

#04165  choices_level_type =
#04166
        ARRAY(
          STRUCT{
            name = "Regular Levels"
            checksum = level_type_regular
            }
          STRUCT{
            name = "Custom Levels"
            checksum = level_type_custom
            }

        )

#04179  choices_connect_speed =
#04180
        ARRAY(
          STRUCT{
            name = "All"
            checksum = ping_0
            value = 0
            }
          STRUCT{
            name = "Less than 50ms"
            checksum = ping_50
            value = 50
            }
          STRUCT{
            name = "Less than 150ms"
            checksum = ping_150
            value = 150
            }
          STRUCT{
            name = "Less than 250ms"
            checksum = ping_250
            value = 250
            }

        )

#04205  choices_update_speed =
#04206
        ARRAY(
          STRUCT{
            name = "Slow"
            checksum = update_slow
            value = 5
            }
          STRUCT{
            name = "Normal"
            checksum = update_normal
            value = 15
            }
          STRUCT{
            name = "Fast"
            checksum = update_fast
            value = 20
            }
          STRUCT{
            name = "Fastest"
            checksum = update_fastest
            value = 30
            }

        )

#04231  choices_sorting =
#04232
        ARRAY(
          STRUCT{
            name = "Name"
            checksum = sort_name
            }
          STRUCT{
            name = "Ping"
            checksum = sort_ping
            }
          STRUCT{
            name = "Players"
            checksum = sort_nplayers
            }
          STRUCT{
            name = "Max Players"
            checksum = sort_mplayers
            }
          STRUCT{
            name = "Game Type"
            checksum = sort_type
            }

        )

#04257  choices_num_players = ARRAY(

          STRUCT{
            name = "2 Players"
            checksum = num_2
            value = 2
            }
          STRUCT{
            name = "3 Players"
            checksum = num_3
            value = 3
            }
          STRUCT{
            name = "4 Players"
            checksum = num_4
            value = 4
            }
          STRUCT{
            name = "5 Players"
            checksum = num_5
            value = 5
            }
          STRUCT{
            name = "6 Players"
            checksum = num_6
            value = 6
            }
          STRUCT{
            name = "7 Players"
            checksum = num_7
            value = 7
            }
          STRUCT{
            name = "8 Players"
            checksum = num_8
            value = 8
            }

        )

#04297  level_pic_properties =
#04298
        STRUCT{
          checksum = level_pic_properties
          type = imageelement
          style = imagelist
          x = 0
          y = 0
          w = 200.0
          h = 160.0
          noselect dont_gray stretch border = 1.0
          foreground_colors = bright_colors
          activetexture = 0
          texture_list = ARRAY(

            "loadscrn_editor_play.png" "loadscrn_Foundry_Small.png" "loadscrn_Can_Small.png" "loadscrn_Rio_Small.png" "loadscrn_Sub_Small.png" "loadscrn_AP_Small.png" "loadscrn_SI_Small.png" "loadscrn_LA_Small.png" "loadscrn_Tok_Small.png" "loadscrn_Ship_Small.png" "loadscrn_Warehouse_Small.png" "loadscrn_burnside_Small.png" "loadscrn_roswell_Small.png"
          )
          children = ARRAY(


          )
          }

#04320  level_capabilities_item =
#04321
        STRUCT{
          checksum = level_capabilities_item
          type = imageelement
          style = imagelist
          w = 28.0
          h = 28.0
          parent_aligned noselect stretch border = 1.0
          border_colors = bright_colors
          foreground_colors = on_off_colors
          activetexture = 0
          texture_list = ARRAY(

            "GSpyMenu\icon-ball.png"
          )
          }

#04338  level_capabilities_properties =
#04339
        STRUCT{
          checksum = level_capabilities_properties
          type = scrollwindow
          style = tiledhorizontal
          x = 0.0
          y = 0.0
          w = 1.0
          h = 30.0
          spacing_h = 2.0
          padding_h = 2.0
          padding_v = 1.0
          align_x = STRUCT{
            parent client full }
          noselect children = ARRAY(

            STRUCT{
              checksum = level_capabilities_item
              parms = STRUCT{
                id = ss_caps_trick
                texture_list = ARRAY(

                  "GSpyMenu\icon-versus.png"
                )
                }
              }
            STRUCT{
              checksum = level_capabilities_item
              parms = STRUCT{
                id = ss_caps_graffiti
                texture_list = ARRAY(

                  "GSpyMenu\icon-spray.png"
                )
                }
              }
            STRUCT{
              checksum = level_capabilities_item
              parms = STRUCT{
                id = ss_caps_slap
                texture_list = ARRAY(

                  "GSpyMenu\icon-slappers.png"
                )
                }
              }
            STRUCT{
              checksum = level_capabilities_item
              parms = STRUCT{
                id = ss_caps_koth
                texture_list = ARRAY(

                  "GSpyMenu\icon-koth.png"
                )
                }
              }
            STRUCT{
              checksum = level_capabilities_item
              parms = STRUCT{
                id = ss_caps_ball
                texture_list = ARRAY(

                  "GSpyMenu\icon-ball.png"
                )
                }
              }
            STRUCT{
              checksum = level_capabilities_item
              parms = STRUCT{
                id = ss_caps_otz
                texture_list = ARRAY(

                  "GSpyMenu\icon-otz.png"
                )
                }
              }
            STRUCT{
              checksum = level_capabilities_item
              parms = STRUCT{
                id = ss_caps_ctf
                texture_list = ARRAY(

                  "GSpyMenu\icon-ctf.png"
                )
                }
              }

          )
          }

#04429  game_settings_window =
#04430
        STRUCT{
          checksum = game_settings_window
          type = scrollwindow
          style = tiledvertical
          x = 10.0
          y = 10.0
          w = 180.0
          h = 250.0
          spacing = 0
          noselect children = ARRAY(

            STRUCT{
              checksum = window_title_properties
              parms = STRUCT{
                text = "Game"
                }
              }
            STRUCT{
              checksum = game_settings_choices_window
              }

          )
          }

#04455  game_settings_choices_window =
#04456
        STRUCT{
          checksum = game_settings_choices_window
          type = uielement
          x = 0.0
          y = 0.0
          w = 1
          h = 1
          parent_aligned parent_resized background = background_window_properties
          padding_h = 8.0
          padding_v = 4.0
          children = ARRAY(

            STRUCT{
              checksum = full_combo_box_def
              parms = STRUCT{
                id = ss_game_type_choice
                x = 5
                y = 20
                h = 140
                align_x = STRUCT{
                  parent client center }
                style = dropdown
                choices = game_type_info
                caption = STRUCT{
                  checksum = text_caption
                  parms = STRUCT{
                    text = "Game Type"
                    }
                  }
                }
              }
            STRUCT{
              checksum = full_combo_box_def
              parms = STRUCT{
                id = ss_end_game_options_choice
                x = 5
                y = 60
                align_x = STRUCT{
                  parent client center }
                caption = STRUCT{
                  checksum = text_caption
                  parms = STRUCT{
                    text = "End Game Options"
                    }
                  }
                }
              }
            STRUCT{
              checksum = full_combo_box_def
              parms = STRUCT{
                id = ss_end_game_cond_choice
                x = 5
                y = 80
                align_x = STRUCT{
                  parent client center }
                }
              }
            STRUCT{
              checksum = full_combo_box_def
              parms = STRUCT{
                id = ss_time_limit_choice
                x = 5
                y = 120
                align_x = STRUCT{
                  parent client center }
                choices = time_limit_options
                caption = STRUCT{
                  checksum = text_caption
                  parms = STRUCT{
                    text = "Time Limit"
                    }
                  }
                }
              }
            STRUCT{
              checksum = text_button
              parms = STRUCT{
                id = ss_start_game
                text = "Start Game"
                h = 18
                y = 143
                w = 128
                align_x = STRUCT{
                  parent client center }
                }
              }
            STRUCT{
              checksum = text_button
              parms = STRUCT{
                id = ss_return_to_game
                text = "Return to Game"
                h = 18
                y = 164
                w = 128
                align_x = STRUCT{
                  parent client center }
                }
              }
            STRUCT{
              checksum = text_button
              parms = STRUCT{
                id = ss_quit
                text = "Quit"
                h = 18
                y = 185
                w = 128
                align_x = STRUCT{
                  parent client center }
                }
              }
            STRUCT{
              checksum = client_area_properties
              }

          )
          }

#04574  ss_str_change_level = 'Change Level'

#04576  ss_str_start_game = 'Start Game'

#04578  choose_level_window =
#04579
        STRUCT{
          checksum = choose_level_window
          type = scrollwindow
          style = tiledvertical
          x = 190.0
          y = 10.0
          w = 230.0
          h = 250.0
          spacing = 0
          noselect children = ARRAY(

            STRUCT{
              checksum = window_title_properties
              parms = STRUCT{
                text = "Level"
                }
              }
            STRUCT{
              checksum = choose_level_choices_window
              }

          )
          }

#04604  choose_level_choices_window =
#04605
        STRUCT{
          checksum = choose_level_choices_window
          type = uielement
          x = 0.0
          y = 0.0
          w = 1
          h = 1
          parent_aligned parent_resized background = background_window_properties
          padding_h = 8.0
          padding_v = 4.0
          children = ARRAY(

            STRUCT{
              checksum = full_combo_box_def
              parms = STRUCT{
                id = ss_level_type_choice
                x = 0
                y = 10
                h = 17
                w = 200
                align_x = STRUCT{
                  parent client center }
                choices = choices_level_type
                }
              }
            STRUCT{
              checksum = full_combo_box_def
              parms = STRUCT{
                id = ss_level_choice
                x = 0
                y = 27
                h = 122
                w = 200
                align_x = STRUCT{
                  parent client center }
                style = dropdown
                listDef = combo_list_scroll_def
                }
              }
            STRUCT{
              checksum = level_pic_properties
              parms = STRUCT{
                id = ss_level_pic
                x = 0
                y = 44
                w = 200
                h = 135
                align_x = STRUCT{
                  parent client center }
                }
              }
            STRUCT{
              checksum = level_capabilities_properties
              parms = STRUCT{
                y = 180
                }
              }
            STRUCT{
              checksum = client_area_properties
              }

          )
          }

#04670  player_settings_window =
#04671
        STRUCT{
          checksum = player_settings_window
          type = scrollwindow
          style = tiledvertical
          x = 420.0
          y = 275.0
          w = 180.0
          h = 160.0
          spacing = 0
          noselect children = ARRAY(

            STRUCT{
              checksum = window_title_properties
              parms = STRUCT{
                text = "Player"
                }
              }
            STRUCT{
              checksum = player_settings_choices_window
              }

          )
          }

#04696  player_settings_choices_window =
#04697
        STRUCT{
          checksum = player_settings_choices_window
          type = uielement
          x = 0.0
          y = 0.0
          w = 1
          h = 1
          parent_aligned parent_resized background = background_window_properties
          padding_h = 8.0
          padding_v = 4.0
          children = ARRAY(

            STRUCT{
              checksum = full_combo_box_def_2
              parms = STRUCT{
                id = ss_player_ready
                x = 5
                y = 10
                align_x = STRUCT{
                  parent client center }
                style = checkbox
                prompt = "Ready"
                }
              }
            STRUCT{
              checksum = full_combo_box_def
              parms = STRUCT{
                id = ss_player_team
                x = 5
                y = 50
                align_x = STRUCT{
                  parent client center }
                choices = choices_team
                caption = STRUCT{
                  checksum = text_caption
                  parms = STRUCT{
                    text = "Team"
                    }
                  }
                }
              }
            STRUCT{
              checksum = client_area_properties
              }

          )
          }

#04746  player_name_entry =
#04747
        STRUCT{
          checksum = player_name_entry
          type = textelement
          x = 0.0
          y = 20.0
          w = 150.0
          h = 18.0
          hot border = 1.0
          background foreground_colors = bright_colors
          background_colors = black_colors
          border_colors = border_colors_1
          just_left_x max_text = 1
          drawer = keyboard_property
          texheight = 12
          padding_h = 2.0
          padding_v = 1.0
          maxentrychars = 15
          textentry truncate }

#04767  setup_window =
#04768
        STRUCT{
          checksum = setup_window
          type = uielement
          id = ss_main_window
          x = 0.0
          y = 0.0
          w = 640.0
          h = 448.0
          noselect children = ARRAY(

            STRUCT{
              checksum = game_settings_window
              }
            STRUCT{
              checksum = choose_level_window
              }
            STRUCT{
              checksum = players_window
              parms = STRUCT{
                h = 250.0
                }
              }
            STRUCT{
              checksum = chat_window
              }
            STRUCT{
              checksum = player_settings_window
              }

          )
          }

#04801  dialog_main_window =
#04802
        STRUCT{
          checksum = dialog_main_window
          type = uielement
          x = 0
          y = 0
          w = 640.0
          h = 448.0
          noselect children = ARRAY(

            STRUCT{
              checksum = dialog_template
              }

          )
          }

#04819  dialog_client_window =
#04820
        STRUCT{
          checksum = dialog_client_window
          type = scrollwindow
          style = tiledvertical
          x = 0.0
          y = 0.0
          w = 1
          h = 1
          parent_aligned parent_resized spacing_v = 5.0
          background = background_window_properties
          padding_h = 8.0
          padding_v = 4.0
          children = ARRAY(

            STRUCT{
              checksum = client_area_properties
              }

          )
          }

#04842  dialog_template =
#04843
        STRUCT{
          checksum = dialog_template
          type = scrollwindow
          style = tiledvertical
          x = 50
          y = 50
          w = 200.0
          h = 250.0
          align_x = STRUCT{
            parent client center }
          align_y = STRUCT{
            parent client center }
          noselect children = ARRAY(

            STRUCT{
              checksum = window_title_properties
              }
            STRUCT{
              checksum = dialog_client_window
              }

          )
          }

#04868  dialog_main_children =
#04869
        STRUCT{
          children = ARRAY(

            STRUCT{
              checksum = dialog_template
              }

          )
          }

#04880  dialog_button_props =
#04881
        STRUCT{
          checksum = dialog_button_props
          type = textelement
          x = 0.0
          y = 0.0
          w = 85.0
          h = 20.0
          parent_aligned align_x = STRUCT{
            parent client center }
          drawer = keyboard_property
          texheight = 12
          just_center_y max_text = 1
          hot border = 1.0
          background foreground_colors = button_fg_colors
          background_colors = button_bg_colors
          border_colors = border_colors_1
          }

#04900  dialog_prompt_props =
#04901
        STRUCT{
          checksum = dialog_prompt_props
          type = textelement
          x = 0.0
          y = 0.0
          w = 400.0
          h = 100.0
          parent_aligned parent_resized drawer = keyboard_property
          texheight = 16
          max_text = 1
          spacing = 2.0
          wrap just_center_x just_center_y foreground_colors = bright_colors
          background_colors = black_colors
          border_colors = border_colors_2
          noselect }

#04918  dialog_quit_yes_no =
#04919
        STRUCT{
          caption = 'Quit?'
          prompt = 'Would you like to exit the game?'
          buttons = ARRAY(

            'Yes' 'No'
          )
          }

#04929  dialog_ban_yes_no =
#04930
        STRUCT{
          caption = 'Ban Player?'
          prompt = 'Would you like to remove %s from the game?'
          buttons = ARRAY(

            'Yes' 'No'
          )
          }

#04940  gamespy_preferences = STRUCT{
          gs_update_speed = STRUCT{
            ui_string = "Normal"
            checksum = update_normal
            value = 15
            }
          gs_sort = STRUCT{
            ui_string = "Name"
            checksum = sort_name
            value = 0
            }
          gs_password = STRUCT{
            ui_string = ""
            }
          gs_server_name = STRUCT{
            ui_string = "Gearbox"
            }
          gs_players = STRUCT{
            ui_string = "8"
            checksum = num_8
            value = 8
            }
          gs_skill = STRUCT{
            ui_string = "Trick Attack"
            checksum = nettrickattack
            }
          gs_filter_ping = STRUCT{
            ui_string = "Yes"
            checksum = ping_0
            value = 0
            }
          gs_filter_empty = STRUCT{
            ui_string = "Yes"
            checksum = choice_yes
            value = 1
            }
          gs_filter_full = STRUCT{
            ui_string = "No"
            checksum = choice_no
            value = 0
            }
          gs_filter_started = STRUCT{
            ui_string = "No"
            checksum = choice_no
            value = 0
            }
          gs_filter_private = STRUCT{
            ui_string = "Yes"
            checksum = choice_yes
            value = 1
            }
          gs_filter_ta = STRUCT{
            ui_string = "Yes"
            checksum = choice_yes
            value = 1
            }
          gs_filter_graffiti = STRUCT{
            ui_string = "Yes"
            checksum = choice_yes
            value = 1
            }
          gs_filter_slap = STRUCT{
            ui_string = "Yes"
            checksum = choice_yes
            value = 1
            }
          gs_filter_koth = STRUCT{
            ui_string = "Yes"
            checksum = choice_yes
            value = 1
            }
          gs_filter_ball = STRUCT{
            ui_string = "Yes"
            checksum = choice_yes
            value = 1
            }
          gs_filter_zone = STRUCT{
            ui_string = "Yes"
            checksum = choice_yes
            value = 1
            }
          gs_filter_ctf = STRUCT{
            ui_string = "Yes"
            checksum = choice_yes
            value = 1
            }
          }

#05028
